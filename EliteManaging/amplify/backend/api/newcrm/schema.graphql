type Wallet {
  badges: [String]
  numberOfBadges: Int
}

type Business @model @auth(rules: [{allow: public}]) {
  id: ID!
  businessName: String
  numberOfCustomer: String
  customers: [String]
  numberOfBadges: Int
  badges: [String]
  Badges: [Badges] @hasMany(indexName: "byBusiness", fields: ["id"])
  Customers: [Customer] @hasMany(indexName: "byBusiness", fields: ["id"])
}

type Badges @model @auth(rules: [{allow: public}]) {
  id: ID!
  badgeName: String
  perks: [String]
  numberInCollection: Float
  currentOwner: String
  business: String
  dateIssued: String
  cost: String
  businessID: ID! @index(name: "byBusiness")
  customerID: ID! @index(name: "byCustomer")
  Business: Business @belongsTo
  Customer: Customer @belongsTo
}

type Customer @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  wallet: Wallet
  businessID: ID! @index(name: "byBusiness")
  Badges: [Badges] @hasMany(indexName: "byCustomer", fields: ["id"])
}
