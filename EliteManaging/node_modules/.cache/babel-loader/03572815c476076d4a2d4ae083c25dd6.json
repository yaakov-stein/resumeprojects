{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketInventoryConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketInventoryConfigurationCommand, serializeAws_restXmlPutBucketInventoryConfigurationCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>This implementation of the <code>PUT</code> operation adds an inventory configuration\n *          (identified by the inventory ID) to the bucket. You can have up to 1,000 inventory\n *          configurations per bucket. </p>\n *          <p>Amazon S3 inventory generates inventories of the objects in the bucket on a daily or weekly\n *          basis, and the results are published to a flat file. The bucket that is inventoried is\n *          called the <i>source</i> bucket, and the bucket where the inventory flat file\n *          is stored is called the <i>destination</i> bucket. The\n *             <i>destination</i> bucket must be in the same AWS Region as the\n *             <i>source</i> bucket. </p>\n *          <p>When you configure an inventory for a <i>source</i> bucket, you specify\n *          the <i>destination</i> bucket where you want the inventory to be stored, and\n *          whether to generate the inventory daily or weekly. You can also configure what object\n *          metadata to include and whether to inventory all object versions or only current versions.\n *          For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html\">Amazon S3\n *             Inventory</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *          <important>\n *             <p>You must create a bucket policy on the <i>destination</i> bucket to\n *             grant permissions to Amazon S3 to write objects to the bucket in the defined location. For an\n *             example policy, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-9\">\n *                Granting Permissions for Amazon S3 Inventory and Storage Class Analysis</a>.</p>\n *          </important>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutInventoryConfiguration</code> action. The bucket owner has this permission\n *          by default and can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *\n *          <p class=\"title\">\n *             <b>Special Errors</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> InvalidArgument</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> Invalid Argument</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> TooManyConfigurations</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are attempting to create a new configuration\n *                      but have already reached the 1,000-configuration limit. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 403 Forbidden Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> AccessDenied</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are not the owner of the specified bucket,\n *                      or you do not have the <code>s3:PutInventoryConfiguration</code> bucket\n *                      permission to set the configuration on the bucket. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html\">GetBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html\">DeleteBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html\">ListBucketInventoryConfigurations</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar PutBucketInventoryConfigurationCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutBucketInventoryConfigurationCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutBucketInventoryConfigurationCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutBucketInventoryConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketInventoryConfigurationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketInventoryConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutBucketInventoryConfigurationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketInventoryConfigurationCommand(input, context);\n  };\n\n  PutBucketInventoryConfigurationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketInventoryConfigurationCommand(output, context);\n  };\n\n  return PutBucketInventoryConfigurationCommand;\n}($Command);\n\nexport { PutBucketInventoryConfigurationCommand };","map":{"version":3,"mappings":";AACA,SAASA,sCAAT,QAAuD,oBAAvD;AACA,SACEC,4DADF,EAEEC,0DAFF,QAGO,0BAHP;AAIA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AAAA;AAAA;EAA4DC,0DAA5D,CAKE;EACA;;;EAEA,gDAAqBC,KAArB,EAAuE;IAAvE,YACE;IACAC,qBAAO,IAFT;;IAAqBC;iBAAkD,CAGrE;EACD;EAED;;;;;EAGAC,+EACEC,WADF,EAEEC,aAFF,EAGEC,OAHF,EAGgC;IAE9B,KAAKC,eAAL,CAAqBC,GAArB,CAAyBZ,cAAc,CAACS,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,KAAKH,eAAL,CAAqBC,GAArB,CAAyBb,uBAAuB,CAACU,aAAD,CAAhD;IAEA,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAd;IAEQ,UAAM,GAAKF,aAAa,OAAxB;IACR,IAAMQ,UAAU,GAAG,UAAnB;IACA,IAAMC,WAAW,GAAG,wCAApB;IACA,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM,QADiD;MAEvDH,UAAU,YAF6C;MAGvDC,WAAW,aAH4C;MAIvDG,uBAAuB,EAAEzB,sCAAsC,CAAC0B,kBAJT;MAKvDC,wBAAwB,EAAE,UAACC,MAAD,EAAY;QAAK;MAAM;IALM,CAAzD;IAOQ,kBAAc,GAAKf,aAAa,eAAhC;IACR,OAAOM,KAAK,CAACU,OAAN,CACL,UAACC,OAAD,EAAuC;MACrC,qBAAc,CAACC,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAwDhB,OAAO,IAAI,EAAnE;IAAsE,CAFnE,EAGLS,uBAHK,CAAP;EAKD,CA1BD;;EA4BQZ,6DAAR,UACEH,KADF,EAEEwB,OAFF,EAEyB;IAEvB,OAAO9B,0DAA0D,CAACM,KAAD,EAAQwB,OAAR,CAAjE;EACD,CALO;;EAOArB,+DAAR,UACEiB,MADF,EAEEI,OAFF,EAEyB;IAEvB,OAAO/B,4DAA4D,CAAC2B,MAAD,EAASI,OAAT,CAAnE;EACD,CALO;;EASV;AAAC,CA7DD,CAA4D1B,QAA5D","names":["PutBucketInventoryConfigurationRequest","deserializeAws_restXmlPutBucketInventoryConfigurationCommand","serializeAws_restXmlPutBucketInventoryConfigurationCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","PutBucketInventoryConfigurationCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-sdk\\client-s3\\commands\\PutBucketInventoryConfigurationCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { PutBucketInventoryConfigurationRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlPutBucketInventoryConfigurationCommand,\n  serializeAws_restXmlPutBucketInventoryConfigurationCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutBucketInventoryConfigurationCommandInput = PutBucketInventoryConfigurationRequest;\nexport type PutBucketInventoryConfigurationCommandOutput = __MetadataBearer;\n\n/**\n * <p>This implementation of the <code>PUT</code> operation adds an inventory configuration\n *          (identified by the inventory ID) to the bucket. You can have up to 1,000 inventory\n *          configurations per bucket. </p>\n *          <p>Amazon S3 inventory generates inventories of the objects in the bucket on a daily or weekly\n *          basis, and the results are published to a flat file. The bucket that is inventoried is\n *          called the <i>source</i> bucket, and the bucket where the inventory flat file\n *          is stored is called the <i>destination</i> bucket. The\n *             <i>destination</i> bucket must be in the same AWS Region as the\n *             <i>source</i> bucket. </p>\n *          <p>When you configure an inventory for a <i>source</i> bucket, you specify\n *          the <i>destination</i> bucket where you want the inventory to be stored, and\n *          whether to generate the inventory daily or weekly. You can also configure what object\n *          metadata to include and whether to inventory all object versions or only current versions.\n *          For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-inventory.html\">Amazon S3\n *             Inventory</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *          <important>\n *             <p>You must create a bucket policy on the <i>destination</i> bucket to\n *             grant permissions to Amazon S3 to write objects to the bucket in the defined location. For an\n *             example policy, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies.html#example-bucket-policies-use-case-9\">\n *                Granting Permissions for Amazon S3 Inventory and Storage Class Analysis</a>.</p>\n *          </important>\n *          <p>To use this operation, you must have permissions to perform the\n *             <code>s3:PutInventoryConfiguration</code> action. The bucket owner has this permission\n *          by default and can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a> in the Amazon Simple Storage Service Developer Guide.</p>\n *\n *          <p class=\"title\">\n *             <b>Special Errors</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> InvalidArgument</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> Invalid Argument</p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 400 Bad Request Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> TooManyConfigurations</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are attempting to create a new configuration\n *                      but have already reached the 1,000-configuration limit. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *             <li>\n *                <p class=\"title\">\n *                   <b>HTTP 403 Forbidden Error</b>\n *                </p>\n *                <ul>\n *                   <li>\n *                      <p>\n *                         <i>Code:</i> AccessDenied</p>\n *                   </li>\n *                   <li>\n *                      <p>\n *                         <i>Cause:</i> You are not the owner of the specified bucket,\n *                      or you do not have the <code>s3:PutInventoryConfiguration</code> bucket\n *                      permission to set the configuration on the bucket. </p>\n *                   </li>\n *                </ul>\n *             </li>\n *          </ul>\n *\n *          <p class=\"title\">\n *             <b>Related Resources</b>\n *          </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketInventoryConfiguration.html\">GetBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketInventoryConfiguration.html\">DeleteBucketInventoryConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBucketInventoryConfigurations.html\">ListBucketInventoryConfigurations</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class PutBucketInventoryConfigurationCommand extends $Command<\n  PutBucketInventoryConfigurationCommandInput,\n  PutBucketInventoryConfigurationCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutBucketInventoryConfigurationCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutBucketInventoryConfigurationCommandInput, PutBucketInventoryConfigurationCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"PutBucketInventoryConfigurationCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutBucketInventoryConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(\n    input: PutBucketInventoryConfigurationCommandInput,\n    context: __SerdeContext\n  ): Promise<__HttpRequest> {\n    return serializeAws_restXmlPutBucketInventoryConfigurationCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<PutBucketInventoryConfigurationCommandOutput> {\n    return deserializeAws_restXmlPutBucketInventoryConfigurationCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}