{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { DeleteTerminologyRequest } from \"../models/models_0\";\nimport { deserializeAws_json1_1DeleteTerminologyCommand, serializeAws_json1_1DeleteTerminologyCommand } from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>A synchronous action that deletes a custom terminology.</p>\n */\n\nvar DeleteTerminologyCommand =\n/** @class */\nfunction (_super) {\n  __extends(DeleteTerminologyCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function DeleteTerminologyCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  DeleteTerminologyCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"TranslateClient\";\n    var commandName = \"DeleteTerminologyCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: DeleteTerminologyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  DeleteTerminologyCommand.prototype.serialize = function (input, context) {\n    return serializeAws_json1_1DeleteTerminologyCommand(input, context);\n  };\n\n  DeleteTerminologyCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_json1_1DeleteTerminologyCommand(output, context);\n  };\n\n  return DeleteTerminologyCommand;\n}($Command);\n\nexport { DeleteTerminologyCommand };","map":{"version":3,"mappings":";AACA,SAASA,wBAAT,QAAyC,oBAAzC;AACA,SACEC,8CADF,EAEEC,4CAFF,QAGO,0BAHP;AAIA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AAcA;;;;AAGA;AAAA;AAAA;EAA8CC,4CAA9C,CAKE;EACA;;;EAEA,kCAAqBC,KAArB,EAAyD;IAAzD,YACE;IACAC,qBAAO,IAFT;;IAAqBC;iBAAoC,CAGvD;EACD;EAED;;;;;EAGAC,iEACEC,WADF,EAEEC,aAFF,EAGEC,OAHF,EAGgC;IAE9B,KAAKC,eAAL,CAAqBC,GAArB,CAAyBZ,cAAc,CAACS,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IAEA,IAAMC,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAd;IAEQ,UAAM,GAAKF,aAAa,OAAxB;IACR,IAAMQ,UAAU,GAAG,iBAAnB;IACA,IAAMC,WAAW,GAAG,0BAApB;IACA,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM,QADiD;MAEvDH,UAAU,YAF6C;MAGvDC,WAAW,aAH4C;MAIvDG,uBAAuB,EAAExB,wBAAwB,CAACyB,kBAJK;MAKvDC,wBAAwB,EAAE,UAACC,MAAD,EAAY;QAAK;MAAM;IALM,CAAzD;IAOQ,kBAAc,GAAKf,aAAa,eAAhC;IACR,OAAOM,KAAK,CAACU,OAAN,CACL,UAACC,OAAD,EAAuC;MACrC,qBAAc,CAACC,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAwDhB,OAAO,IAAI,EAAnE;IAAsE,CAFnE,EAGLS,uBAHK,CAAP;EAKD,CAzBD;;EA2BQZ,+CAAR,UAAkBH,KAAlB,EAAwDwB,OAAxD,EAA+E;IAC7E,OAAO7B,4CAA4C,CAACK,KAAD,EAAQwB,OAAR,CAAnD;EACD,CAFO;;EAIArB,iDAAR,UAAoBiB,MAApB,EAA4CI,OAA5C,EAAmE;IACjE,OAAO9B,8CAA8C,CAAC0B,MAAD,EAASI,OAAT,CAArD;EACD,CAFO;;EAMV;AAAC,CAtDD,CAA8C1B,QAA9C","names":["DeleteTerminologyRequest","deserializeAws_json1_1DeleteTerminologyCommand","serializeAws_json1_1DeleteTerminologyCommand","getSerdePlugin","Command","$Command","__extends","input","_super","_this","DeleteTerminologyCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\github\\resumeprojectsrepo\\resumeprojects\\EliteManaging\\node_modules\\@aws-sdk\\client-translate\\commands\\DeleteTerminologyCommand.ts"],"sourcesContent":["import { ServiceInputTypes, ServiceOutputTypes, TranslateClientResolvedConfig } from \"../TranslateClient\";\nimport { DeleteTerminologyRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_json1_1DeleteTerminologyCommand,\n  serializeAws_json1_1DeleteTerminologyCommand,\n} from \"../protocols/Aws_json1_1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type DeleteTerminologyCommandInput = DeleteTerminologyRequest;\nexport type DeleteTerminologyCommandOutput = __MetadataBearer;\n\n/**\n * <p>A synchronous action that deletes a custom terminology.</p>\n */\nexport class DeleteTerminologyCommand extends $Command<\n  DeleteTerminologyCommandInput,\n  DeleteTerminologyCommandOutput,\n  TranslateClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: DeleteTerminologyCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: TranslateClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<DeleteTerminologyCommandInput, DeleteTerminologyCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"TranslateClient\";\n    const commandName = \"DeleteTerminologyCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: DeleteTerminologyRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: DeleteTerminologyCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_json1_1DeleteTerminologyCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<DeleteTerminologyCommandOutput> {\n    return deserializeAws_json1_1DeleteTerminologyCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}