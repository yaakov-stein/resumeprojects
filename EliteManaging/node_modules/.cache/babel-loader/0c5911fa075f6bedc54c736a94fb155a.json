{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport { ConsoleLogger as Logger } from './Logger';\nvar logger = new Logger('Hub');\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\n\nfunction isLegacyCallback(callback) {\n  return callback.onHubCapsule !== undefined;\n}\n\nvar HubClass =\n/** @class */\nfunction () {\n  function HubClass(name) {\n    this.listeners = [];\n    this.patterns = [];\n    this.protectedChannels = ['core', 'auth', 'api', 'analytics', 'interactions', 'pubsub', 'storage', 'ui', 'xr'];\n    this.name = name;\n  } // Note - Need to pass channel as a reference for removal to work and not anonymous function\n\n\n  HubClass.prototype.remove = function (channel, listener) {\n    if (channel instanceof RegExp) {\n      var pattern_1 = this.patterns.find(function (_a) {\n        var pattern = _a.pattern;\n        return pattern.source === channel.source;\n      });\n\n      if (!pattern_1) {\n        logger.warn(\"No listeners for \" + channel);\n        return;\n      }\n\n      this.patterns = __spread(this.patterns.filter(function (x) {\n        return x !== pattern_1;\n      }));\n    } else {\n      var holder = this.listeners[channel];\n\n      if (!holder) {\n        logger.warn(\"No listeners for \" + channel);\n        return;\n      }\n\n      this.listeners[channel] = __spread(holder.filter(function (_a) {\n        var callback = _a.callback;\n        return callback !== listener;\n      }));\n    }\n  };\n\n  HubClass.prototype.dispatch = function (channel, payload, source, ampSymbol) {\n    if (source === void 0) {\n      source = '';\n    }\n\n    if (this.protectedChannels.indexOf(channel) > -1) {\n      var hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n\n      if (!hasAccess) {\n        logger.warn(\"WARNING: \" + channel + \" is protected and dispatching on it can have unintended consequences\");\n      }\n    }\n\n    var capsule = {\n      channel: channel,\n      payload: __assign({}, payload),\n      source: source,\n      patternInfo: []\n    };\n\n    try {\n      this._toListeners(capsule);\n    } catch (e) {\n      logger.error(e);\n    }\n  };\n\n  HubClass.prototype.listen = function (channel, callback, listenerName) {\n    var _this = this;\n\n    if (listenerName === void 0) {\n      listenerName = 'noname';\n    }\n\n    var cb; // Check for legacy onHubCapsule callback for backwards compatability\n\n    if (isLegacyCallback(callback)) {\n      logger.warn(\"WARNING onHubCapsule is Deprecated. Please pass in a callback.\");\n      cb = callback.onHubCapsule.bind(callback);\n    } else if (typeof callback !== 'function') {\n      throw new Error('No callback supplied to Hub');\n    } else {\n      cb = callback;\n    }\n\n    if (channel instanceof RegExp) {\n      this.patterns.push({\n        pattern: channel,\n        callback: cb\n      });\n    } else {\n      var holder = this.listeners[channel];\n\n      if (!holder) {\n        holder = [];\n        this.listeners[channel] = holder;\n      }\n\n      holder.push({\n        name: listenerName,\n        callback: cb\n      });\n    }\n\n    return function () {\n      _this.remove(channel, cb);\n    };\n  };\n\n  HubClass.prototype._toListeners = function (capsule) {\n    var channel = capsule.channel,\n        payload = capsule.payload;\n    var holder = this.listeners[channel];\n\n    if (holder) {\n      holder.forEach(function (listener) {\n        logger.debug(\"Dispatching to \" + channel + \" with \", payload);\n\n        try {\n          listener.callback(capsule);\n        } catch (e) {\n          logger.error(e);\n        }\n      });\n    }\n\n    if (this.patterns.length > 0) {\n      if (!payload.message) {\n        logger.warn(\"Cannot perform pattern matching without a message key\");\n        return;\n      }\n\n      var payloadStr_1 = payload.message;\n      this.patterns.forEach(function (pattern) {\n        var match = payloadStr_1.match(pattern.pattern);\n\n        if (match) {\n          var _a = __read(match),\n              groups = _a.slice(1);\n\n          var dispatchingCapsule = __assign(__assign({}, capsule), {\n            patternInfo: groups\n          });\n\n          try {\n            pattern.callback(dispatchingCapsule);\n          } catch (e) {\n            logger.error(e);\n          }\n        }\n      });\n    }\n  };\n\n  return HubClass;\n}();\n\nexport { HubClass };\n/*We export a __default__ instance of HubClass to use it as a\npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events.*/\n\nexport var Hub = new HubClass('__default__');\n/**\n * @deprecated use named import\n */\n\nexport default Hub;","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","logger","AMPLIFY_SYMBOL","Symbol","for","isLegacyCallback","callback","onHubCapsule","undefined","name","HubClass","channel","listener","RegExp","pattern_1","patterns","find","_a","pattern","source","warn","__spread","filter","holder","listeners","payload","ampSymbol","protectedChannels","indexOf","hasAccess","capsule","patternInfo","_toListeners","e","error","listenerName","cb","bind","Error","push","_this","remove","forEach","debug","length","message","payloadStr_1","match","groups","dispatchingCapsule","Hub"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\github\\resumeprojectsrepo\\resumeprojects\\EliteManaging\\node_modules\\@aws-amplify\\core\\src\\Hub.ts"],"sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { ConsoleLogger as Logger } from './Logger';\n\nconst logger = new Logger('Hub');\n\nconst AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' &&\ntypeof Symbol.for === 'function'\n\t? Symbol.for('amplify_default')\n\t: '@@amplify_default') as Symbol;\ninterface IPattern {\n\tpattern: RegExp;\n\tcallback: HubCallback;\n}\n\ninterface IListener {\n\tname: string;\n\tcallback: HubCallback;\n}\n\nexport type HubCapsule = {\n\tchannel: string;\n\tpayload: HubPayload;\n\tsource: string;\n\tpatternInfo?: string[];\n};\n\nexport type HubPayload = {\n\tevent: string;\n\tdata?: any;\n\tmessage?: string;\n};\n\nexport type HubCallback = (capsule: HubCapsule) => void;\n\nexport type LegacyCallback = { onHubCapsule: HubCallback };\n\nfunction isLegacyCallback(callback: any): callback is LegacyCallback {\n\treturn (<LegacyCallback>callback).onHubCapsule !== undefined;\n}\n\nexport class HubClass {\n\tname: string;\n\tprivate listeners: IListener[] = [];\n\tprivate patterns: IPattern[] = [];\n\n\tprotectedChannels = [\n\t\t'core',\n\t\t'auth',\n\t\t'api',\n\t\t'analytics',\n\t\t'interactions',\n\t\t'pubsub',\n\t\t'storage',\n\t\t'ui',\n\t\t'xr',\n\t];\n\n\tconstructor(name: string) {\n\t\tthis.name = name;\n\t}\n\n\t// Note - Need to pass channel as a reference for removal to work and not anonymous function\n\tremove(channel: string | RegExp, listener: HubCallback) {\n\t\tif (channel instanceof RegExp) {\n\t\t\tconst pattern = this.patterns.find(\n\t\t\t\t({ pattern }) => pattern.source === channel.source\n\t\t\t);\n\t\t\tif (!pattern) {\n\t\t\t\tlogger.warn(`No listeners for ${channel}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.patterns = [...this.patterns.filter(x => x !== pattern)];\n\t\t} else {\n\t\t\tconst holder = this.listeners[channel];\n\t\t\tif (!holder) {\n\t\t\t\tlogger.warn(`No listeners for ${channel}`);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.listeners[channel] = [\n\t\t\t\t...holder.filter(({ callback }) => callback !== listener),\n\t\t\t];\n\t\t}\n\t}\n\n\tdispatch(\n\t\tchannel: string,\n\t\tpayload: HubPayload,\n\t\tsource: string = '',\n\t\tampSymbol?: Symbol\n\t) {\n\t\tif (this.protectedChannels.indexOf(channel) > -1) {\n\t\t\tconst hasAccess = ampSymbol === AMPLIFY_SYMBOL;\n\n\t\t\tif (!hasAccess) {\n\t\t\t\tlogger.warn(\n\t\t\t\t\t`WARNING: ${channel} is protected and dispatching on it can have unintended consequences`\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tconst capsule: HubCapsule = {\n\t\t\tchannel,\n\t\t\tpayload: { ...payload },\n\t\t\tsource,\n\t\t\tpatternInfo: [],\n\t\t};\n\n\t\ttry {\n\t\t\tthis._toListeners(capsule);\n\t\t} catch (e) {\n\t\t\tlogger.error(e);\n\t\t}\n\t}\n\n\tlisten(\n\t\tchannel: string | RegExp,\n\t\tcallback?: HubCallback | LegacyCallback,\n\t\tlistenerName = 'noname'\n\t) {\n\t\tlet cb: HubCallback;\n\t\t// Check for legacy onHubCapsule callback for backwards compatability\n\t\tif (isLegacyCallback(callback)) {\n\t\t\tlogger.warn(\n\t\t\t\t`WARNING onHubCapsule is Deprecated. Please pass in a callback.`\n\t\t\t);\n\t\t\tcb = callback.onHubCapsule.bind(callback);\n\t\t} else if (typeof callback !== 'function') {\n\t\t\tthrow new Error('No callback supplied to Hub');\n\t\t} else {\n\t\t\tcb = callback;\n\t\t}\n\n\t\tif (channel instanceof RegExp) {\n\t\t\tthis.patterns.push({\n\t\t\t\tpattern: channel,\n\t\t\t\tcallback: cb,\n\t\t\t});\n\t\t} else {\n\t\t\tlet holder = this.listeners[channel];\n\n\t\t\tif (!holder) {\n\t\t\t\tholder = [];\n\t\t\t\tthis.listeners[channel] = holder;\n\t\t\t}\n\n\t\t\tholder.push({\n\t\t\t\tname: listenerName,\n\t\t\t\tcallback: cb,\n\t\t\t});\n\t\t}\n\n\t\treturn () => {\n\t\t\tthis.remove(channel, cb);\n\t\t};\n\t}\n\n\tprivate _toListeners(capsule: HubCapsule) {\n\t\tconst { channel, payload } = capsule;\n\t\tconst holder = this.listeners[channel];\n\n\t\tif (holder) {\n\t\t\tholder.forEach(listener => {\n\t\t\t\tlogger.debug(`Dispatching to ${channel} with `, payload);\n\t\t\t\ttry {\n\t\t\t\t\tlistener.callback(capsule);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogger.error(e);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tif (this.patterns.length > 0) {\n\t\t\tif (!payload.message) {\n\t\t\t\tlogger.warn(`Cannot perform pattern matching without a message key`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst payloadStr = payload.message;\n\n\t\t\tthis.patterns.forEach(pattern => {\n\t\t\t\tconst match = payloadStr.match(pattern.pattern);\n\t\t\t\tif (match) {\n\t\t\t\t\tconst [, ...groups] = match;\n\t\t\t\t\tconst dispatchingCapsule: HubCapsule = {\n\t\t\t\t\t\t...capsule,\n\t\t\t\t\t\tpatternInfo: groups,\n\t\t\t\t\t};\n\t\t\t\t\ttry {\n\t\t\t\t\t\tpattern.callback(dispatchingCapsule);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tlogger.error(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n/*We export a __default__ instance of HubClass to use it as a \npseudo Singleton for the main messaging bus, however you can still create\nyour own instance of HubClass() for a separate \"private bus\" of events.*/\nexport const Hub = new HubClass('__default__');\n/**\n * @deprecated use named import\n */\nexport default Hub;\n"]},"metadata":{},"sourceType":"module"}