{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutBucketAccelerateConfigurationRequest } from \"../models/models_0\";\nimport { deserializeAws_restXmlPutBucketAccelerateConfigurationCommand, serializeAws_restXmlPutBucketAccelerateConfigurationCommand } from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Sets the accelerate configuration of an existing bucket. Amazon S3 Transfer Acceleration is a\n *          bucket-level feature that enables you to perform faster data transfers to Amazon S3.</p>\n *\n *          <p> To use this operation, you must have permission to perform the\n *          s3:PutAccelerateConfiguration action. The bucket owner has this permission by default. The\n *          bucket owner can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p> The Transfer Acceleration state of a bucket can be set to one of the following two\n *          values:</p>\n *          <ul>\n *             <li>\n *                <p> Enabled – Enables accelerated data transfers to the bucket.</p>\n *             </li>\n *             <li>\n *                <p> Suspended – Disables accelerated data transfers to the bucket.</p>\n *             </li>\n *          </ul>\n *\n *\n *          <p>The <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html\">GetBucketAccelerateConfiguration</a> operation returns the transfer acceleration\n *          state of a bucket.</p>\n *\n *          <p>After setting the Transfer Acceleration state of a bucket to Enabled, it might take up\n *          to thirty minutes before the data transfer rates to the bucket increase.</p>\n *\n *          <p> The name of the bucket used for Transfer Acceleration must be DNS-compliant and must\n *          not contain periods (\".\").</p>\n *\n *          <p> For more information about transfer acceleration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\">Transfer Acceleration</a>.</p>\n *\n *          <p>The following operations are related to\n *          <code>PutBucketAccelerateConfiguration</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html\">GetBucketAccelerateConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>\n *                </p>\n *             </li>\n *          </ul>\n */\n\nvar PutBucketAccelerateConfigurationCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutBucketAccelerateConfigurationCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutBucketAccelerateConfigurationCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutBucketAccelerateConfigurationCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"S3Client\";\n    var commandName = \"PutBucketAccelerateConfigurationCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutBucketAccelerateConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutBucketAccelerateConfigurationCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restXmlPutBucketAccelerateConfigurationCommand(input, context);\n  };\n\n  PutBucketAccelerateConfigurationCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restXmlPutBucketAccelerateConfigurationCommand(output, context);\n  };\n\n  return PutBucketAccelerateConfigurationCommand;\n}($Command);\n\nexport { PutBucketAccelerateConfigurationCommand };","map":{"version":3,"mappings":";AACA,SAASA,uCAAT,QAAwD,oBAAxD;AACA,SACEC,6DADF,EAEEC,2DAFF,QAGO,0BAHP;AAIA,SAASC,uBAAT,QAAwC,qCAAxC;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AAcA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AAAA;AAAA;EAA6DC,2DAA7D,CAKE;EACA;;;EAEA,iDAAqBC,KAArB,EAAwE;IAAxE,YACE;IACAC,qBAAO,IAFT;;IAAqBC;iBAAmD,CAGtE;EACD;EAED;;;;;EAGAC,gFACEC,WADF,EAEEC,aAFF,EAGEC,OAHF,EAGgC;IAE9B,KAAKC,eAAL,CAAqBC,GAArB,CAAyBZ,cAAc,CAACS,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IACA,KAAKH,eAAL,CAAqBC,GAArB,CAAyBb,uBAAuB,CAACU,aAAD,CAAhD;IAEA,IAAMM,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAd;IAEQ,UAAM,GAAKF,aAAa,OAAxB;IACR,IAAMQ,UAAU,GAAG,UAAnB;IACA,IAAMC,WAAW,GAAG,yCAApB;IACA,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM,QADiD;MAEvDH,UAAU,YAF6C;MAGvDC,WAAW,aAH4C;MAIvDG,uBAAuB,EAAEzB,uCAAuC,CAAC0B,kBAJV;MAKvDC,wBAAwB,EAAE,UAACC,MAAD,EAAY;QAAK;MAAM;IALM,CAAzD;IAOQ,kBAAc,GAAKf,aAAa,eAAhC;IACR,OAAOM,KAAK,CAACU,OAAN,CACL,UAACC,OAAD,EAAuC;MACrC,qBAAc,CAACC,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAwDhB,OAAO,IAAI,EAAnE;IAAsE,CAFnE,EAGLS,uBAHK,CAAP;EAKD,CA1BD;;EA4BQZ,8DAAR,UACEH,KADF,EAEEwB,OAFF,EAEyB;IAEvB,OAAO9B,2DAA2D,CAACM,KAAD,EAAQwB,OAAR,CAAlE;EACD,CALO;;EAOArB,gEAAR,UACEiB,MADF,EAEEI,OAFF,EAEyB;IAEvB,OAAO/B,6DAA6D,CAAC2B,MAAD,EAASI,OAAT,CAApE;EACD,CALO;;EASV;AAAC,CA7DD,CAA6D1B,QAA7D","names":["PutBucketAccelerateConfigurationRequest","deserializeAws_restXmlPutBucketAccelerateConfigurationCommand","serializeAws_restXmlPutBucketAccelerateConfigurationCommand","getBucketEndpointPlugin","getSerdePlugin","Command","$Command","__extends","input","_super","_this","PutBucketAccelerateConfigurationCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\github\\resumeprojectsrepo\\resumeprojects\\EliteManaging\\node_modules\\@aws-sdk\\client-s3\\commands\\PutBucketAccelerateConfigurationCommand.ts"],"sourcesContent":["import { S3ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from \"../S3Client\";\nimport { PutBucketAccelerateConfigurationRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restXmlPutBucketAccelerateConfigurationCommand,\n  serializeAws_restXmlPutBucketAccelerateConfigurationCommand,\n} from \"../protocols/Aws_restXml\";\nimport { getBucketEndpointPlugin } from \"@aws-sdk/middleware-bucket-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutBucketAccelerateConfigurationCommandInput = PutBucketAccelerateConfigurationRequest;\nexport type PutBucketAccelerateConfigurationCommandOutput = __MetadataBearer;\n\n/**\n * <p>Sets the accelerate configuration of an existing bucket. Amazon S3 Transfer Acceleration is a\n *          bucket-level feature that enables you to perform faster data transfers to Amazon S3.</p>\n *\n *          <p> To use this operation, you must have permission to perform the\n *          s3:PutAccelerateConfiguration action. The bucket owner has this permission by default. The\n *          bucket owner can grant this permission to others. For more information about permissions,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\">Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/s3-access-control.html\">Managing Access Permissions to Your Amazon S3\n *             Resources</a>.</p>\n *\n *          <p> The Transfer Acceleration state of a bucket can be set to one of the following two\n *          values:</p>\n *          <ul>\n *             <li>\n *                <p> Enabled – Enables accelerated data transfers to the bucket.</p>\n *             </li>\n *             <li>\n *                <p> Suspended – Disables accelerated data transfers to the bucket.</p>\n *             </li>\n *          </ul>\n *\n *\n *          <p>The <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html\">GetBucketAccelerateConfiguration</a> operation returns the transfer acceleration\n *          state of a bucket.</p>\n *\n *          <p>After setting the Transfer Acceleration state of a bucket to Enabled, it might take up\n *          to thirty minutes before the data transfer rates to the bucket increase.</p>\n *\n *          <p> The name of the bucket used for Transfer Acceleration must be DNS-compliant and must\n *          not contain periods (\".\").</p>\n *\n *          <p> For more information about transfer acceleration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\">Transfer Acceleration</a>.</p>\n *\n *          <p>The following operations are related to\n *          <code>PutBucketAccelerateConfiguration</code>:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAccelerateConfiguration.html\">GetBucketAccelerateConfiguration</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\">CreateBucket</a>\n *                </p>\n *             </li>\n *          </ul>\n */\nexport class PutBucketAccelerateConfigurationCommand extends $Command<\n  PutBucketAccelerateConfigurationCommandInput,\n  PutBucketAccelerateConfigurationCommandOutput,\n  S3ClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutBucketAccelerateConfigurationCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: S3ClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutBucketAccelerateConfigurationCommandInput, PutBucketAccelerateConfigurationCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    this.middlewareStack.use(getBucketEndpointPlugin(configuration));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"S3Client\";\n    const commandName = \"PutBucketAccelerateConfigurationCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutBucketAccelerateConfigurationRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(\n    input: PutBucketAccelerateConfigurationCommandInput,\n    context: __SerdeContext\n  ): Promise<__HttpRequest> {\n    return serializeAws_restXmlPutBucketAccelerateConfigurationCommand(input, context);\n  }\n\n  private deserialize(\n    output: __HttpResponse,\n    context: __SerdeContext\n  ): Promise<PutBucketAccelerateConfigurationCommandOutput> {\n    return deserializeAws_restXmlPutBucketAccelerateConfigurationCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}