{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nimport { OpType } from '../types'; // https://github.com/aws-amplify/amplify-js/blob/datastore-docs/packages/datastore/docs/sync-engine.md#merger\n\nvar ModelMerger =\n/** @class */\nfunction () {\n  function ModelMerger(outbox, ownSymbol) {\n    this.outbox = outbox;\n    this.ownSymbol = ownSymbol;\n  }\n\n  ModelMerger.prototype.merge = function (storage, model) {\n    return __awaiter(this, void 0, void 0, function () {\n      var result, mutationsForModel, isDelete;\n\n      var _a, _b;\n\n      return __generator(this, function (_c) {\n        switch (_c.label) {\n          case 0:\n            return [4\n            /*yield*/\n            , this.outbox.getForModel(storage, model)];\n\n          case 1:\n            mutationsForModel = _c.sent();\n            isDelete = model._deleted;\n            if (!(mutationsForModel.length === 0)) return [3\n            /*break*/\n            , 5];\n            if (!isDelete) return [3\n            /*break*/\n            , 3];\n            result = OpType.DELETE;\n            return [4\n            /*yield*/\n            , storage.delete(model, undefined, this.ownSymbol)];\n\n          case 2:\n            _c.sent();\n\n            return [3\n            /*break*/\n            , 5];\n\n          case 3:\n            return [4\n            /*yield*/\n            , storage.save(model, undefined, this.ownSymbol)];\n\n          case 4:\n            _a = __read.apply(void 0, [_c.sent(), 1]), _b = __read(_a[0], 2), result = _b[1];\n            _c.label = 5;\n\n          case 5:\n            return [2\n            /*return*/\n            , result];\n        }\n      });\n    });\n  };\n\n  ModelMerger.prototype.mergePage = function (storage, modelConstructor, items) {\n    return __awaiter(this, void 0, void 0, function () {\n      var itemsMap, items_1, items_1_1, item, page;\n\n      var e_1, _a;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            itemsMap = new Map();\n\n            try {\n              for (items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                item = items_1_1.value; // merge items by model id. Latest record for a given id remains.\n\n                itemsMap.set(item.id, item);\n              }\n            } catch (e_1_1) {\n              e_1 = {\n                error: e_1_1\n              };\n            } finally {\n              try {\n                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n              } finally {\n                if (e_1) throw e_1.error;\n              }\n            }\n\n            page = __spread(itemsMap.values());\n            return [4\n            /*yield*/\n            , storage.batchSave(modelConstructor, page, this.ownSymbol)];\n\n          case 1:\n            return [2\n            /*return*/\n            , _b.sent()];\n        }\n      });\n    });\n  };\n\n  return ModelMerger;\n}();\n\nexport { ModelMerger };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAECA,MAFD,QAIO,UAJP,C,CAOA;;AACA;AAAA;AAAA;EACC,qBACkBC,MADlB,EAEkBC,SAFlB,EAEmC;IADjB;IACA;EACd;;EAESC,8BAAb,UACCC,OADD,EAECC,KAFD,EAES;;;;;;;;;YAGkB;YAAA;YAAA,EAAM,KAAKJ,MAAL,CAAYK,WAAZ,CAAwBF,OAAxB,EAAiCC,KAAjC,CAAN;;;YAApBE,iBAAiB,GAAGC,SAApB;YAEAC,QAAQ,GAAGJ,KAAK,CAACK,QAAjB;kBAEFH,iBAAiB,CAACI,MAAlB,KAA6B,IAA7B;YAAA;YAAA;iBACCF;YAAA;YAAA;YACHG,MAAM,GAAGZ,MAAM,CAACa,MAAhB;YACA;YAAA;YAAA,EAAMT,OAAO,CAACU,MAAR,CAAeT,KAAf,EAAsBU,SAAtB,EAAiC,KAAKb,SAAtC,CAAN;;;YAAAM;;;;;;;YAEe;YAAA;YAAA,EAAMJ,OAAO,CAACY,IAAR,CAAaX,KAAb,EAAoBU,SAApB,EAA+B,KAAKb,SAApC,CAAN;;;YAAfe,2CAACC,qBAAD,EAAIN,cAAJ;;;;YAIF;YAAA;YAAA,EAAOA,MAAP;;;;EACA,CAnBY;;EAqBAT,kCAAb,UACCC,OADD,EAECe,gBAFD,EAGCC,KAHD,EAG+B;;;;;;;;;YAExBC,QAAQ,GAAuC,IAAIC,GAAJ,EAA/C;;;cAEN,KAAmBC,2BAAKC,0BAAxB,EAAwB,eAAxB,EAAwBA,0BAAxB,EAA0B;gBAAfC,IAAI,kBAAJ,CAAe,CACzB;;gBACAJ,QAAQ,CAACK,GAAT,CAAaD,IAAI,CAACE,EAAlB,EAAsBF,IAAtB;cACA;;;;;;;;;;;;;YAEKG,IAAI,YAAOP,QAAQ,CAACQ,MAAT,EAAP,CAAJ;YAEC;YAAA;YAAA,EAAMzB,OAAO,CAAC0B,SAAR,CAAkBX,gBAAlB,EAAoCS,IAApC,EAA0C,KAAK1B,SAA/C,CAAN;;;YAAP;YAAA;YAAA,EAAOgB,SAAP;;;;EACA,CAfY;;EAgBd;AAAC,CA3CD;;AA6CA,SAASf,WAAT","names":["OpType","outbox","ownSymbol","ModelMerger","storage","model","getForModel","mutationsForModel","_c","isDelete","_deleted","length","result","DELETE","delete","undefined","save","_a","_b","modelConstructor","items","itemsMap","Map","items_1","items_1_1","item","set","id","page","values","batchSave"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\github\\resumeprojectsrepo\\resumeprojects\\EliteManaging\\node_modules\\@aws-amplify\\datastore\\src\\sync\\merger.ts"],"sourcesContent":["import { Storage } from '../storage/storage';\nimport {\n\tModelInstanceMetadata,\n\tOpType,\n\tPersistentModelConstructor,\n} from '../types';\nimport { MutationEventOutbox } from './outbox';\n\n// https://github.com/aws-amplify/amplify-js/blob/datastore-docs/packages/datastore/docs/sync-engine.md#merger\nclass ModelMerger {\n\tconstructor(\n\t\tprivate readonly outbox: MutationEventOutbox,\n\t\tprivate readonly ownSymbol: Symbol\n\t) {}\n\n\tpublic async merge<T extends ModelInstanceMetadata>(\n\t\tstorage: Storage,\n\t\tmodel: T\n\t): Promise<OpType> {\n\t\tlet result: OpType;\n\t\tconst mutationsForModel = await this.outbox.getForModel(storage, model);\n\n\t\tconst isDelete = model._deleted;\n\n\t\tif (mutationsForModel.length === 0) {\n\t\t\tif (isDelete) {\n\t\t\t\tresult = OpType.DELETE;\n\t\t\t\tawait storage.delete(model, undefined, this.ownSymbol);\n\t\t\t} else {\n\t\t\t\t[[, result]] = await storage.save(model, undefined, this.ownSymbol);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tpublic async mergePage(\n\t\tstorage: Storage,\n\t\tmodelConstructor: PersistentModelConstructor<any>,\n\t\titems: ModelInstanceMetadata[]\n\t): Promise<[ModelInstanceMetadata, OpType][]> {\n\t\tconst itemsMap: Map<string, ModelInstanceMetadata> = new Map();\n\n\t\tfor (const item of items) {\n\t\t\t// merge items by model id. Latest record for a given id remains.\n\t\t\titemsMap.set(item.id, item);\n\t\t}\n\n\t\tconst page = [...itemsMap.values()];\n\n\t\treturn await storage.batchSave(modelConstructor, page, this.ownSymbol);\n\t}\n}\n\nexport { ModelMerger };\n"]},"metadata":{},"sourceType":"module"}