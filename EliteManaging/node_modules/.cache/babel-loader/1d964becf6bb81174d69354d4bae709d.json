{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { LazyJsonString as __LazyJsonString } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_json1_1AnalyzeDocumentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Textract.AnalyzeDocument\"\n      };\n      body = JSON.stringify(serializeAws_json1_1AnalyzeDocumentRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DetectDocumentTextCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Textract.DetectDocumentText\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DetectDocumentTextRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetDocumentAnalysisCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Textract.GetDocumentAnalysis\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetDocumentAnalysisRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetDocumentTextDetectionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Textract.GetDocumentTextDetection\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetDocumentTextDetectionRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StartDocumentAnalysisCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Textract.StartDocumentAnalysis\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StartDocumentAnalysisRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StartDocumentTextDetectionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Textract.StartDocumentTextDetection\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StartDocumentTextDetectionRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var deserializeAws_json1_1AnalyzeDocumentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1AnalyzeDocumentCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1AnalyzeDocumentResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1AnalyzeDocumentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n\n    var _o;\n\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _o = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_o.body = _p.sent(), _o)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.textract#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadDocumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.textract#BadDocumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"DocumentTooLargeException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.textract#DocumentTooLargeException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"HumanLoopQuotaExceededException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.textract#HumanLoopQuotaExceededException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalServerError\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.textract#InternalServerError\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.textract#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.textract#InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.textract#ThrottlingException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"UnsupportedDocumentException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"com.amazonaws.textract#UnsupportedDocumentException\":\n              return [3\n              /*break*/\n              , 20];\n          }\n\n          return [3\n          /*break*/\n          , 22];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1HumanLoopQuotaExceededExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 18:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 20:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DetectDocumentTextCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DetectDocumentTextCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DetectDocumentTextResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DetectDocumentTextCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n\n    var _m;\n\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _m = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.textract#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadDocumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.textract#BadDocumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"DocumentTooLargeException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.textract#DocumentTooLargeException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"InternalServerError\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.textract#InternalServerError\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.textract#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.textract#InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.textract#ThrottlingException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"UnsupportedDocumentException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.textract#UnsupportedDocumentException\":\n              return [3\n              /*break*/\n              , 18];\n          }\n\n          return [3\n          /*break*/\n          , 20];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 18:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetDocumentAnalysisCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetDocumentAnalysisCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetDocumentAnalysisResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetDocumentAnalysisCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.textract#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InternalServerError\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.textract#InternalServerError\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InvalidJobIdException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.textract#InvalidJobIdException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.textract#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.textract#InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.textract#ThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidJobIdExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetDocumentTextDetectionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetDocumentTextDetectionCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetDocumentTextDetectionResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetDocumentTextDetectionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.textract#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InternalServerError\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.textract#InternalServerError\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InvalidJobIdException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.textract#InvalidJobIdException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.textract#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.textract#InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.textract#ThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidJobIdExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1StartDocumentAnalysisCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StartDocumentAnalysisCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1StartDocumentAnalysisResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1StartDocumentAnalysisCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, parsedBody, message;\n\n    var _q;\n\n    return __generator(this, function (_r) {\n      switch (_r.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _q = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_q.body = _r.sent(), _q)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.textract#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadDocumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.textract#BadDocumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"DocumentTooLargeException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.textract#DocumentTooLargeException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"IdempotentParameterMismatchException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.textract#IdempotentParameterMismatchException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalServerError\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.textract#InternalServerError\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"InvalidKMSKeyException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.textract#InvalidKMSKeyException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.textract#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.textract#InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.textract#LimitExceededException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 22];\n\n            case \"com.amazonaws.textract#ThrottlingException\":\n              return [3\n              /*break*/\n              , 22];\n\n            case \"UnsupportedDocumentException\":\n              return [3\n              /*break*/\n              , 24];\n\n            case \"com.amazonaws.textract#UnsupportedDocumentException\":\n              return [3\n              /*break*/\n              , 24];\n          }\n\n          return [3\n          /*break*/\n          , 26];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1IdempotentParameterMismatchExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidKMSKeyExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 18:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 20:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 22:\n          _o = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 23:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 24:\n          _p = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)];\n\n        case 25:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _p.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 26:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _r.label = 27;\n\n        case 27:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1StartDocumentTextDetectionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StartDocumentTextDetectionCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1StartDocumentTextDetectionResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1StartDocumentTextDetectionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, parsedBody, message;\n\n    var _q;\n\n    return __generator(this, function (_r) {\n      switch (_r.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _q = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_q.body = _r.sent(), _q)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.textract#AccessDeniedException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"BadDocumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.textract#BadDocumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"DocumentTooLargeException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.textract#DocumentTooLargeException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"IdempotentParameterMismatchException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.textract#IdempotentParameterMismatchException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InternalServerError\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.textract#InternalServerError\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"InvalidKMSKeyException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.textract#InvalidKMSKeyException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"InvalidParameterException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.textract#InvalidParameterException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.textract#InvalidS3ObjectException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.textract#LimitExceededException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"ThrottlingException\":\n              return [3\n              /*break*/\n              , 22];\n\n            case \"com.amazonaws.textract#ThrottlingException\":\n              return [3\n              /*break*/\n              , 22];\n\n            case \"UnsupportedDocumentException\":\n              return [3\n              /*break*/\n              , 24];\n\n            case \"com.amazonaws.textract#UnsupportedDocumentException\":\n              return [3\n              /*break*/\n              , 24];\n          }\n\n          return [3\n          /*break*/\n          , 26];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1IdempotentParameterMismatchExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidKMSKeyExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 18:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 20:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 22:\n          _o = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 23:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _o.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 24:\n          _p = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)];\n\n        case 25:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _p.concat([_r.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 27];\n\n        case 26:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _r.label = 27;\n\n        case 27:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1AccessDeniedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1AccessDeniedException(body, context);\n      contents = __assign({\n        name: \"AccessDeniedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1BadDocumentExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1BadDocumentException(body, context);\n      contents = __assign({\n        name: \"BadDocumentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1DocumentTooLargeExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1DocumentTooLargeException(body, context);\n      contents = __assign({\n        name: \"DocumentTooLargeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1HumanLoopQuotaExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1HumanLoopQuotaExceededException(body, context);\n      contents = __assign({\n        name: \"HumanLoopQuotaExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1IdempotentParameterMismatchExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1IdempotentParameterMismatchException(body, context);\n      contents = __assign({\n        name: \"IdempotentParameterMismatchException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InternalServerErrorResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InternalServerError(body, context);\n      contents = __assign({\n        name: \"InternalServerError\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidJobIdExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidJobIdException(body, context);\n      contents = __assign({\n        name: \"InvalidJobIdException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidKMSKeyExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidKMSKeyException(body, context);\n      contents = __assign({\n        name: \"InvalidKMSKeyException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidParameterExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidParameterException(body, context);\n      contents = __assign({\n        name: \"InvalidParameterException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidS3ObjectExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidS3ObjectException(body, context);\n      contents = __assign({\n        name: \"InvalidS3ObjectException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n      contents = __assign({\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n      contents = __assign({\n        name: \"ProvisionedThroughputExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ThrottlingExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ThrottlingException(body, context);\n      contents = __assign({\n        name: \"ThrottlingException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1UnsupportedDocumentExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1UnsupportedDocumentException(body, context);\n      contents = __assign({\n        name: \"UnsupportedDocumentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_json1_1AnalyzeDocumentRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.Document !== undefined && input.Document !== null && {\n    Document: serializeAws_json1_1Document(input.Document, context)\n  }), input.FeatureTypes !== undefined && input.FeatureTypes !== null && {\n    FeatureTypes: serializeAws_json1_1FeatureTypes(input.FeatureTypes, context)\n  }), input.HumanLoopConfig !== undefined && input.HumanLoopConfig !== null && {\n    HumanLoopConfig: serializeAws_json1_1HumanLoopConfig(input.HumanLoopConfig, context)\n  });\n};\n\nvar serializeAws_json1_1ContentClassifiers = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1DetectDocumentTextRequest = function (input, context) {\n  return __assign({}, input.Document !== undefined && input.Document !== null && {\n    Document: serializeAws_json1_1Document(input.Document, context)\n  });\n};\n\nvar serializeAws_json1_1Document = function (input, context) {\n  return __assign(__assign({}, input.Bytes !== undefined && input.Bytes !== null && {\n    Bytes: context.base64Encoder(input.Bytes)\n  }), input.S3Object !== undefined && input.S3Object !== null && {\n    S3Object: serializeAws_json1_1S3Object(input.S3Object, context)\n  });\n};\n\nvar serializeAws_json1_1DocumentLocation = function (input, context) {\n  return __assign({}, input.S3Object !== undefined && input.S3Object !== null && {\n    S3Object: serializeAws_json1_1S3Object(input.S3Object, context)\n  });\n};\n\nvar serializeAws_json1_1FeatureTypes = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1GetDocumentAnalysisRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.JobId !== undefined && input.JobId !== null && {\n    JobId: input.JobId\n  }), input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  });\n};\n\nvar serializeAws_json1_1GetDocumentTextDetectionRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.JobId !== undefined && input.JobId !== null && {\n    JobId: input.JobId\n  }), input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  });\n};\n\nvar serializeAws_json1_1HumanLoopConfig = function (input, context) {\n  return __assign(__assign(__assign({}, input.DataAttributes !== undefined && input.DataAttributes !== null && {\n    DataAttributes: serializeAws_json1_1HumanLoopDataAttributes(input.DataAttributes, context)\n  }), input.FlowDefinitionArn !== undefined && input.FlowDefinitionArn !== null && {\n    FlowDefinitionArn: input.FlowDefinitionArn\n  }), input.HumanLoopName !== undefined && input.HumanLoopName !== null && {\n    HumanLoopName: input.HumanLoopName\n  });\n};\n\nvar serializeAws_json1_1HumanLoopDataAttributes = function (input, context) {\n  return __assign({}, input.ContentClassifiers !== undefined && input.ContentClassifiers !== null && {\n    ContentClassifiers: serializeAws_json1_1ContentClassifiers(input.ContentClassifiers, context)\n  });\n};\n\nvar serializeAws_json1_1NotificationChannel = function (input, context) {\n  return __assign(__assign({}, input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  }), input.SNSTopicArn !== undefined && input.SNSTopicArn !== null && {\n    SNSTopicArn: input.SNSTopicArn\n  });\n};\n\nvar serializeAws_json1_1OutputConfig = function (input, context) {\n  return __assign(__assign({}, input.S3Bucket !== undefined && input.S3Bucket !== null && {\n    S3Bucket: input.S3Bucket\n  }), input.S3Prefix !== undefined && input.S3Prefix !== null && {\n    S3Prefix: input.S3Prefix\n  });\n};\n\nvar serializeAws_json1_1S3Object = function (input, context) {\n  return __assign(__assign(__assign({}, input.Bucket !== undefined && input.Bucket !== null && {\n    Bucket: input.Bucket\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.Version !== undefined && input.Version !== null && {\n    Version: input.Version\n  });\n};\n\nvar serializeAws_json1_1StartDocumentAnalysisRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ClientRequestToken !== undefined && input.ClientRequestToken !== null && {\n    ClientRequestToken: input.ClientRequestToken\n  }), input.DocumentLocation !== undefined && input.DocumentLocation !== null && {\n    DocumentLocation: serializeAws_json1_1DocumentLocation(input.DocumentLocation, context)\n  }), input.FeatureTypes !== undefined && input.FeatureTypes !== null && {\n    FeatureTypes: serializeAws_json1_1FeatureTypes(input.FeatureTypes, context)\n  }), input.JobTag !== undefined && input.JobTag !== null && {\n    JobTag: input.JobTag\n  }), input.KMSKeyId !== undefined && input.KMSKeyId !== null && {\n    KMSKeyId: input.KMSKeyId\n  }), input.NotificationChannel !== undefined && input.NotificationChannel !== null && {\n    NotificationChannel: serializeAws_json1_1NotificationChannel(input.NotificationChannel, context)\n  }), input.OutputConfig !== undefined && input.OutputConfig !== null && {\n    OutputConfig: serializeAws_json1_1OutputConfig(input.OutputConfig, context)\n  });\n};\n\nvar serializeAws_json1_1StartDocumentTextDetectionRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.ClientRequestToken !== undefined && input.ClientRequestToken !== null && {\n    ClientRequestToken: input.ClientRequestToken\n  }), input.DocumentLocation !== undefined && input.DocumentLocation !== null && {\n    DocumentLocation: serializeAws_json1_1DocumentLocation(input.DocumentLocation, context)\n  }), input.JobTag !== undefined && input.JobTag !== null && {\n    JobTag: input.JobTag\n  }), input.KMSKeyId !== undefined && input.KMSKeyId !== null && {\n    KMSKeyId: input.KMSKeyId\n  }), input.NotificationChannel !== undefined && input.NotificationChannel !== null && {\n    NotificationChannel: serializeAws_json1_1NotificationChannel(input.NotificationChannel, context)\n  }), input.OutputConfig !== undefined && input.OutputConfig !== null && {\n    OutputConfig: serializeAws_json1_1OutputConfig(input.OutputConfig, context)\n  });\n};\n\nvar deserializeAws_json1_1AccessDeniedException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1AnalyzeDocumentResponse = function (output, context) {\n  return {\n    AnalyzeDocumentModelVersion: output.AnalyzeDocumentModelVersion !== undefined && output.AnalyzeDocumentModelVersion !== null ? output.AnalyzeDocumentModelVersion : undefined,\n    Blocks: output.Blocks !== undefined && output.Blocks !== null ? deserializeAws_json1_1BlockList(output.Blocks, context) : undefined,\n    DocumentMetadata: output.DocumentMetadata !== undefined && output.DocumentMetadata !== null ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context) : undefined,\n    HumanLoopActivationOutput: output.HumanLoopActivationOutput !== undefined && output.HumanLoopActivationOutput !== null ? deserializeAws_json1_1HumanLoopActivationOutput(output.HumanLoopActivationOutput, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1BadDocumentException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1Block = function (output, context) {\n  return {\n    BlockType: output.BlockType !== undefined && output.BlockType !== null ? output.BlockType : undefined,\n    ColumnIndex: output.ColumnIndex !== undefined && output.ColumnIndex !== null ? output.ColumnIndex : undefined,\n    ColumnSpan: output.ColumnSpan !== undefined && output.ColumnSpan !== null ? output.ColumnSpan : undefined,\n    Confidence: output.Confidence !== undefined && output.Confidence !== null ? output.Confidence : undefined,\n    EntityTypes: output.EntityTypes !== undefined && output.EntityTypes !== null ? deserializeAws_json1_1EntityTypes(output.EntityTypes, context) : undefined,\n    Geometry: output.Geometry !== undefined && output.Geometry !== null ? deserializeAws_json1_1Geometry(output.Geometry, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Page: output.Page !== undefined && output.Page !== null ? output.Page : undefined,\n    Relationships: output.Relationships !== undefined && output.Relationships !== null ? deserializeAws_json1_1RelationshipList(output.Relationships, context) : undefined,\n    RowIndex: output.RowIndex !== undefined && output.RowIndex !== null ? output.RowIndex : undefined,\n    RowSpan: output.RowSpan !== undefined && output.RowSpan !== null ? output.RowSpan : undefined,\n    SelectionStatus: output.SelectionStatus !== undefined && output.SelectionStatus !== null ? output.SelectionStatus : undefined,\n    Text: output.Text !== undefined && output.Text !== null ? output.Text : undefined,\n    TextType: output.TextType !== undefined && output.TextType !== null ? output.TextType : undefined\n  };\n};\n\nvar deserializeAws_json1_1BlockList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1Block(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1BoundingBox = function (output, context) {\n  return {\n    Height: output.Height !== undefined && output.Height !== null ? output.Height : undefined,\n    Left: output.Left !== undefined && output.Left !== null ? output.Left : undefined,\n    Top: output.Top !== undefined && output.Top !== null ? output.Top : undefined,\n    Width: output.Width !== undefined && output.Width !== null ? output.Width : undefined\n  };\n};\n\nvar deserializeAws_json1_1DetectDocumentTextResponse = function (output, context) {\n  return {\n    Blocks: output.Blocks !== undefined && output.Blocks !== null ? deserializeAws_json1_1BlockList(output.Blocks, context) : undefined,\n    DetectDocumentTextModelVersion: output.DetectDocumentTextModelVersion !== undefined && output.DetectDocumentTextModelVersion !== null ? output.DetectDocumentTextModelVersion : undefined,\n    DocumentMetadata: output.DocumentMetadata !== undefined && output.DocumentMetadata !== null ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1DocumentMetadata = function (output, context) {\n  return {\n    Pages: output.Pages !== undefined && output.Pages !== null ? output.Pages : undefined\n  };\n};\n\nvar deserializeAws_json1_1DocumentTooLargeException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1EntityTypes = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1Geometry = function (output, context) {\n  return {\n    BoundingBox: output.BoundingBox !== undefined && output.BoundingBox !== null ? deserializeAws_json1_1BoundingBox(output.BoundingBox, context) : undefined,\n    Polygon: output.Polygon !== undefined && output.Polygon !== null ? deserializeAws_json1_1Polygon(output.Polygon, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetDocumentAnalysisResponse = function (output, context) {\n  return {\n    AnalyzeDocumentModelVersion: output.AnalyzeDocumentModelVersion !== undefined && output.AnalyzeDocumentModelVersion !== null ? output.AnalyzeDocumentModelVersion : undefined,\n    Blocks: output.Blocks !== undefined && output.Blocks !== null ? deserializeAws_json1_1BlockList(output.Blocks, context) : undefined,\n    DocumentMetadata: output.DocumentMetadata !== undefined && output.DocumentMetadata !== null ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context) : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StatusMessage: output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    Warnings: output.Warnings !== undefined && output.Warnings !== null ? deserializeAws_json1_1Warnings(output.Warnings, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetDocumentTextDetectionResponse = function (output, context) {\n  return {\n    Blocks: output.Blocks !== undefined && output.Blocks !== null ? deserializeAws_json1_1BlockList(output.Blocks, context) : undefined,\n    DetectDocumentTextModelVersion: output.DetectDocumentTextModelVersion !== undefined && output.DetectDocumentTextModelVersion !== null ? output.DetectDocumentTextModelVersion : undefined,\n    DocumentMetadata: output.DocumentMetadata !== undefined && output.DocumentMetadata !== null ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context) : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StatusMessage: output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    Warnings: output.Warnings !== undefined && output.Warnings !== null ? deserializeAws_json1_1Warnings(output.Warnings, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1HumanLoopActivationOutput = function (output, context) {\n  return {\n    HumanLoopActivationConditionsEvaluationResults: output.HumanLoopActivationConditionsEvaluationResults !== undefined && output.HumanLoopActivationConditionsEvaluationResults !== null ? new __LazyJsonString(output.HumanLoopActivationConditionsEvaluationResults) : undefined,\n    HumanLoopActivationReasons: output.HumanLoopActivationReasons !== undefined && output.HumanLoopActivationReasons !== null ? deserializeAws_json1_1HumanLoopActivationReasons(output.HumanLoopActivationReasons, context) : undefined,\n    HumanLoopArn: output.HumanLoopArn !== undefined && output.HumanLoopArn !== null ? output.HumanLoopArn : undefined\n  };\n};\n\nvar deserializeAws_json1_1HumanLoopActivationReasons = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1HumanLoopQuotaExceededException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    QuotaCode: output.QuotaCode !== undefined && output.QuotaCode !== null ? output.QuotaCode : undefined,\n    ResourceType: output.ResourceType !== undefined && output.ResourceType !== null ? output.ResourceType : undefined,\n    ServiceCode: output.ServiceCode !== undefined && output.ServiceCode !== null ? output.ServiceCode : undefined\n  };\n};\n\nvar deserializeAws_json1_1IdempotentParameterMismatchException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1IdList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1InternalServerError = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidJobIdException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidKMSKeyException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidParameterException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidS3ObjectException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1Pages = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1Point = function (output, context) {\n  return {\n    X: output.X !== undefined && output.X !== null ? output.X : undefined,\n    Y: output.Y !== undefined && output.Y !== null ? output.Y : undefined\n  };\n};\n\nvar deserializeAws_json1_1Polygon = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1Point(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1ProvisionedThroughputExceededException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1Relationship = function (output, context) {\n  return {\n    Ids: output.Ids !== undefined && output.Ids !== null ? deserializeAws_json1_1IdList(output.Ids, context) : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\n\nvar deserializeAws_json1_1RelationshipList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1Relationship(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1StartDocumentAnalysisResponse = function (output, context) {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined\n  };\n};\n\nvar deserializeAws_json1_1StartDocumentTextDetectionResponse = function (output, context) {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined\n  };\n};\n\nvar deserializeAws_json1_1ThrottlingException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1UnsupportedDocumentException = function (output, context) {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1Warning = function (output, context) {\n  return {\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    Pages: output.Pages !== undefined && output.Pages !== null ? deserializeAws_json1_1Pages(output.Pages, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1Warnings = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1Warning(entry, context);\n  });\n};\n\nvar deserializeMetadata = function (output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          contents = {\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            path: path,\n            headers: headers\n          };\n\n          if (resolvedHostname !== undefined) {\n            contents.hostname = resolvedHostname;\n          }\n\n          if (body !== undefined) {\n            contents.body = body;\n          }\n\n          return [2\n          /*return*/\n          , new __HttpRequest(contents)];\n      }\n    });\n  });\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\n\n\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":{"version":3,"mappings":"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","names":["HttpRequest","__HttpRequest","LazyJsonString","__LazyJsonString","serializeAws_json1_1AnalyzeDocumentCommand","input","context","headers","body","JSON","stringify","serializeAws_json1_1AnalyzeDocumentRequest","buildHttpRpcRequest","undefined","serializeAws_json1_1DetectDocumentTextCommand","serializeAws_json1_1DetectDocumentTextRequest","serializeAws_json1_1GetDocumentAnalysisCommand","serializeAws_json1_1GetDocumentAnalysisRequest","serializeAws_json1_1GetDocumentTextDetectionCommand","serializeAws_json1_1GetDocumentTextDetectionRequest","serializeAws_json1_1StartDocumentAnalysisCommand","serializeAws_json1_1StartDocumentAnalysisRequest","serializeAws_json1_1StartDocumentTextDetectionCommand","serializeAws_json1_1StartDocumentTextDetectionRequest","deserializeAws_json1_1AnalyzeDocumentCommand","output","statusCode","deserializeAws_json1_1AnalyzeDocumentCommandError","parseBody","data","_a","contents","deserializeAws_json1_1AnalyzeDocumentResponse","response","$metadata","deserializeMetadata","Promise","resolve","parsedOutput","_o","_p","errorCode","loadRestJsonErrorCode","_b","deserializeAws_json1_1AccessDeniedExceptionResponse","name","deserializeAws_json1_1BadDocumentExceptionResponse","deserializeAws_json1_1DocumentTooLargeExceptionResponse","deserializeAws_json1_1HumanLoopQuotaExceededExceptionResponse","deserializeAws_json1_1InternalServerErrorResponse","deserializeAws_json1_1InvalidParameterExceptionResponse","deserializeAws_json1_1InvalidS3ObjectExceptionResponse","deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse","deserializeAws_json1_1ThrottlingExceptionResponse","deserializeAws_json1_1UnsupportedDocumentExceptionResponse","parsedBody","code","Code","__assign","message","Message","$fault","reject","Object","assign","Error","deserializeAws_json1_1DetectDocumentTextCommand","deserializeAws_json1_1DetectDocumentTextCommandError","deserializeAws_json1_1DetectDocumentTextResponse","_m","deserializeAws_json1_1GetDocumentAnalysisCommand","deserializeAws_json1_1GetDocumentAnalysisCommandError","deserializeAws_json1_1GetDocumentAnalysisResponse","_k","_l","deserializeAws_json1_1InvalidJobIdExceptionResponse","deserializeAws_json1_1GetDocumentTextDetectionCommand","deserializeAws_json1_1GetDocumentTextDetectionCommandError","deserializeAws_json1_1GetDocumentTextDetectionResponse","deserializeAws_json1_1StartDocumentAnalysisCommand","deserializeAws_json1_1StartDocumentAnalysisCommandError","deserializeAws_json1_1StartDocumentAnalysisResponse","_q","_r","deserializeAws_json1_1IdempotentParameterMismatchExceptionResponse","deserializeAws_json1_1InvalidKMSKeyExceptionResponse","deserializeAws_json1_1LimitExceededExceptionResponse","deserializeAws_json1_1StartDocumentTextDetectionCommand","deserializeAws_json1_1StartDocumentTextDetectionCommandError","deserializeAws_json1_1StartDocumentTextDetectionResponse","deserialized","deserializeAws_json1_1AccessDeniedException","deserializeAws_json1_1BadDocumentException","deserializeAws_json1_1DocumentTooLargeException","deserializeAws_json1_1HumanLoopQuotaExceededException","deserializeAws_json1_1IdempotentParameterMismatchException","deserializeAws_json1_1InternalServerError","deserializeAws_json1_1InvalidJobIdException","deserializeAws_json1_1InvalidKMSKeyException","deserializeAws_json1_1InvalidParameterException","deserializeAws_json1_1InvalidS3ObjectException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1ProvisionedThroughputExceededException","deserializeAws_json1_1ThrottlingException","deserializeAws_json1_1UnsupportedDocumentException","Document","serializeAws_json1_1Document","FeatureTypes","serializeAws_json1_1FeatureTypes","HumanLoopConfig","serializeAws_json1_1HumanLoopConfig","serializeAws_json1_1ContentClassifiers","filter","e","map","entry","Bytes","base64Encoder","S3Object","serializeAws_json1_1S3Object","serializeAws_json1_1DocumentLocation","JobId","MaxResults","NextToken","DataAttributes","serializeAws_json1_1HumanLoopDataAttributes","FlowDefinitionArn","HumanLoopName","ContentClassifiers","serializeAws_json1_1NotificationChannel","RoleArn","SNSTopicArn","serializeAws_json1_1OutputConfig","S3Bucket","S3Prefix","Bucket","Name","Version","ClientRequestToken","DocumentLocation","JobTag","KMSKeyId","NotificationChannel","OutputConfig","AnalyzeDocumentModelVersion","Blocks","deserializeAws_json1_1BlockList","DocumentMetadata","deserializeAws_json1_1DocumentMetadata","HumanLoopActivationOutput","deserializeAws_json1_1HumanLoopActivationOutput","deserializeAws_json1_1Block","BlockType","ColumnIndex","ColumnSpan","Confidence","EntityTypes","deserializeAws_json1_1EntityTypes","Geometry","deserializeAws_json1_1Geometry","Id","Page","Relationships","deserializeAws_json1_1RelationshipList","RowIndex","RowSpan","SelectionStatus","Text","TextType","deserializeAws_json1_1BoundingBox","Height","Left","Top","Width","DetectDocumentTextModelVersion","Pages","BoundingBox","Polygon","deserializeAws_json1_1Polygon","JobStatus","StatusMessage","Warnings","deserializeAws_json1_1Warnings","HumanLoopActivationConditionsEvaluationResults","HumanLoopActivationReasons","deserializeAws_json1_1HumanLoopActivationReasons","HumanLoopArn","QuotaCode","ResourceType","ServiceCode","deserializeAws_json1_1IdList","deserializeAws_json1_1Pages","deserializeAws_json1_1Point","X","Y","deserializeAws_json1_1Relationship","Ids","Type","deserializeAws_json1_1Warning","ErrorCode","httpStatusCode","requestId","extendedRequestId","cfId","collectBody","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","path","resolvedHostname","endpoint","_c","hostname","protocol","port","method","encoded","length","parse","findKey","object","key","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\github\\resumeprojectsrepo\\resumeprojects\\EliteManaging\\node_modules\\@aws-sdk\\client-textract\\protocols\\Aws_json1_1.ts"],"sourcesContent":["import { AnalyzeDocumentCommandInput, AnalyzeDocumentCommandOutput } from \"../commands/AnalyzeDocumentCommand\";\nimport { DetectDocumentTextCommandInput, DetectDocumentTextCommandOutput } from \"../commands/DetectDocumentTextCommand\";\nimport {\n  GetDocumentAnalysisCommandInput,\n  GetDocumentAnalysisCommandOutput,\n} from \"../commands/GetDocumentAnalysisCommand\";\nimport {\n  GetDocumentTextDetectionCommandInput,\n  GetDocumentTextDetectionCommandOutput,\n} from \"../commands/GetDocumentTextDetectionCommand\";\nimport {\n  StartDocumentAnalysisCommandInput,\n  StartDocumentAnalysisCommandOutput,\n} from \"../commands/StartDocumentAnalysisCommand\";\nimport {\n  StartDocumentTextDetectionCommandInput,\n  StartDocumentTextDetectionCommandOutput,\n} from \"../commands/StartDocumentTextDetectionCommand\";\nimport {\n  AccessDeniedException,\n  AnalyzeDocumentRequest,\n  AnalyzeDocumentResponse,\n  BadDocumentException,\n  Block,\n  BoundingBox,\n  ContentClassifier,\n  DetectDocumentTextRequest,\n  DetectDocumentTextResponse,\n  Document,\n  DocumentLocation,\n  DocumentMetadata,\n  DocumentTooLargeException,\n  EntityType,\n  FeatureType,\n  Geometry,\n  GetDocumentAnalysisRequest,\n  GetDocumentAnalysisResponse,\n  GetDocumentTextDetectionRequest,\n  GetDocumentTextDetectionResponse,\n  HumanLoopActivationOutput,\n  HumanLoopConfig,\n  HumanLoopDataAttributes,\n  HumanLoopQuotaExceededException,\n  IdempotentParameterMismatchException,\n  InternalServerError,\n  InvalidJobIdException,\n  InvalidKMSKeyException,\n  InvalidParameterException,\n  InvalidS3ObjectException,\n  LimitExceededException,\n  NotificationChannel,\n  OutputConfig,\n  Point,\n  ProvisionedThroughputExceededException,\n  Relationship,\n  S3Object,\n  StartDocumentAnalysisRequest,\n  StartDocumentAnalysisResponse,\n  StartDocumentTextDetectionRequest,\n  StartDocumentTextDetectionResponse,\n  ThrottlingException,\n  UnsupportedDocumentException,\n  Warning,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { LazyJsonString as __LazyJsonString, SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_json1_1AnalyzeDocumentCommand = async (\n  input: AnalyzeDocumentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Textract.AnalyzeDocument\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1AnalyzeDocumentRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DetectDocumentTextCommand = async (\n  input: DetectDocumentTextCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Textract.DetectDocumentText\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DetectDocumentTextRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetDocumentAnalysisCommand = async (\n  input: GetDocumentAnalysisCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Textract.GetDocumentAnalysis\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetDocumentAnalysisRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetDocumentTextDetectionCommand = async (\n  input: GetDocumentTextDetectionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Textract.GetDocumentTextDetection\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetDocumentTextDetectionRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StartDocumentAnalysisCommand = async (\n  input: StartDocumentAnalysisCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Textract.StartDocumentAnalysis\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StartDocumentAnalysisRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StartDocumentTextDetectionCommand = async (\n  input: StartDocumentTextDetectionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Textract.StartDocumentTextDetection\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StartDocumentTextDetectionRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1AnalyzeDocumentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AnalyzeDocumentCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1AnalyzeDocumentCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1AnalyzeDocumentResponse(data, context);\n  const response: AnalyzeDocumentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1AnalyzeDocumentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AnalyzeDocumentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.textract#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"BadDocumentException\":\n    case \"com.amazonaws.textract#BadDocumentException\":\n      response = {\n        ...(await deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"DocumentTooLargeException\":\n    case \"com.amazonaws.textract#DocumentTooLargeException\":\n      response = {\n        ...(await deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"HumanLoopQuotaExceededException\":\n    case \"com.amazonaws.textract#HumanLoopQuotaExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1HumanLoopQuotaExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerError\":\n    case \"com.amazonaws.textract#InternalServerError\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.textract#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidS3ObjectException\":\n    case \"com.amazonaws.textract#InvalidS3ObjectException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.textract#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnsupportedDocumentException\":\n    case \"com.amazonaws.textract#UnsupportedDocumentException\":\n      response = {\n        ...(await deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DetectDocumentTextCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DetectDocumentTextCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DetectDocumentTextCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DetectDocumentTextResponse(data, context);\n  const response: DetectDocumentTextCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DetectDocumentTextCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DetectDocumentTextCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.textract#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"BadDocumentException\":\n    case \"com.amazonaws.textract#BadDocumentException\":\n      response = {\n        ...(await deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"DocumentTooLargeException\":\n    case \"com.amazonaws.textract#DocumentTooLargeException\":\n      response = {\n        ...(await deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerError\":\n    case \"com.amazonaws.textract#InternalServerError\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.textract#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidS3ObjectException\":\n    case \"com.amazonaws.textract#InvalidS3ObjectException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.textract#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnsupportedDocumentException\":\n    case \"com.amazonaws.textract#UnsupportedDocumentException\":\n      response = {\n        ...(await deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetDocumentAnalysisCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetDocumentAnalysisCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetDocumentAnalysisCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetDocumentAnalysisResponse(data, context);\n  const response: GetDocumentAnalysisCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetDocumentAnalysisCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetDocumentAnalysisCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.textract#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerError\":\n    case \"com.amazonaws.textract#InternalServerError\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidJobIdException\":\n    case \"com.amazonaws.textract#InvalidJobIdException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidJobIdExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.textract#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidS3ObjectException\":\n    case \"com.amazonaws.textract#InvalidS3ObjectException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.textract#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetDocumentTextDetectionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetDocumentTextDetectionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetDocumentTextDetectionCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetDocumentTextDetectionResponse(data, context);\n  const response: GetDocumentTextDetectionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetDocumentTextDetectionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetDocumentTextDetectionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.textract#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerError\":\n    case \"com.amazonaws.textract#InternalServerError\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidJobIdException\":\n    case \"com.amazonaws.textract#InvalidJobIdException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidJobIdExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.textract#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidS3ObjectException\":\n    case \"com.amazonaws.textract#InvalidS3ObjectException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.textract#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StartDocumentAnalysisCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartDocumentAnalysisCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StartDocumentAnalysisCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StartDocumentAnalysisResponse(data, context);\n  const response: StartDocumentAnalysisCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StartDocumentAnalysisCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartDocumentAnalysisCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.textract#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"BadDocumentException\":\n    case \"com.amazonaws.textract#BadDocumentException\":\n      response = {\n        ...(await deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"DocumentTooLargeException\":\n    case \"com.amazonaws.textract#DocumentTooLargeException\":\n      response = {\n        ...(await deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"IdempotentParameterMismatchException\":\n    case \"com.amazonaws.textract#IdempotentParameterMismatchException\":\n      response = {\n        ...(await deserializeAws_json1_1IdempotentParameterMismatchExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerError\":\n    case \"com.amazonaws.textract#InternalServerError\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidKMSKeyException\":\n    case \"com.amazonaws.textract#InvalidKMSKeyException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidKMSKeyExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.textract#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidS3ObjectException\":\n    case \"com.amazonaws.textract#InvalidS3ObjectException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.textract#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.textract#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnsupportedDocumentException\":\n    case \"com.amazonaws.textract#UnsupportedDocumentException\":\n      response = {\n        ...(await deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StartDocumentTextDetectionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartDocumentTextDetectionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StartDocumentTextDetectionCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StartDocumentTextDetectionResponse(data, context);\n  const response: StartDocumentTextDetectionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StartDocumentTextDetectionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartDocumentTextDetectionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"AccessDeniedException\":\n    case \"com.amazonaws.textract#AccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1AccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"BadDocumentException\":\n    case \"com.amazonaws.textract#BadDocumentException\":\n      response = {\n        ...(await deserializeAws_json1_1BadDocumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"DocumentTooLargeException\":\n    case \"com.amazonaws.textract#DocumentTooLargeException\":\n      response = {\n        ...(await deserializeAws_json1_1DocumentTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"IdempotentParameterMismatchException\":\n    case \"com.amazonaws.textract#IdempotentParameterMismatchException\":\n      response = {\n        ...(await deserializeAws_json1_1IdempotentParameterMismatchExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerError\":\n    case \"com.amazonaws.textract#InternalServerError\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerErrorResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidKMSKeyException\":\n    case \"com.amazonaws.textract#InvalidKMSKeyException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidKMSKeyExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterException\":\n    case \"com.amazonaws.textract#InvalidParameterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidS3ObjectException\":\n    case \"com.amazonaws.textract#InvalidS3ObjectException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidS3ObjectExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.textract#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.textract#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ThrottlingException\":\n    case \"com.amazonaws.textract#ThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1ThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnsupportedDocumentException\":\n    case \"com.amazonaws.textract#UnsupportedDocumentException\":\n      response = {\n        ...(await deserializeAws_json1_1UnsupportedDocumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1AccessDeniedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<AccessDeniedException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1AccessDeniedException(body, context);\n  const contents: AccessDeniedException = {\n    name: \"AccessDeniedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1BadDocumentExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<BadDocumentException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1BadDocumentException(body, context);\n  const contents: BadDocumentException = {\n    name: \"BadDocumentException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1DocumentTooLargeExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<DocumentTooLargeException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1DocumentTooLargeException(body, context);\n  const contents: DocumentTooLargeException = {\n    name: \"DocumentTooLargeException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1HumanLoopQuotaExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<HumanLoopQuotaExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1HumanLoopQuotaExceededException(body, context);\n  const contents: HumanLoopQuotaExceededException = {\n    name: \"HumanLoopQuotaExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1IdempotentParameterMismatchExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<IdempotentParameterMismatchException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1IdempotentParameterMismatchException(body, context);\n  const contents: IdempotentParameterMismatchException = {\n    name: \"IdempotentParameterMismatchException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InternalServerErrorResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InternalServerError> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InternalServerError(body, context);\n  const contents: InternalServerError = {\n    name: \"InternalServerError\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidJobIdExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidJobIdException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidJobIdException(body, context);\n  const contents: InvalidJobIdException = {\n    name: \"InvalidJobIdException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidKMSKeyExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidKMSKeyException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidKMSKeyException(body, context);\n  const contents: InvalidKMSKeyException = {\n    name: \"InvalidKMSKeyException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidParameterExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidParameterException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidParameterException(body, context);\n  const contents: InvalidParameterException = {\n    name: \"InvalidParameterException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidS3ObjectExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidS3ObjectException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidS3ObjectException(body, context);\n  const contents: InvalidS3ObjectException = {\n    name: \"InvalidS3ObjectException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ProvisionedThroughputExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n  const contents: ProvisionedThroughputExceededException = {\n    name: \"ProvisionedThroughputExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ThrottlingExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ThrottlingException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ThrottlingException(body, context);\n  const contents: ThrottlingException = {\n    name: \"ThrottlingException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1UnsupportedDocumentExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<UnsupportedDocumentException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1UnsupportedDocumentException(body, context);\n  const contents: UnsupportedDocumentException = {\n    name: \"UnsupportedDocumentException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1AnalyzeDocumentRequest = (input: AnalyzeDocumentRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Document !== undefined &&\n      input.Document !== null && { Document: serializeAws_json1_1Document(input.Document, context) }),\n    ...(input.FeatureTypes !== undefined &&\n      input.FeatureTypes !== null && { FeatureTypes: serializeAws_json1_1FeatureTypes(input.FeatureTypes, context) }),\n    ...(input.HumanLoopConfig !== undefined &&\n      input.HumanLoopConfig !== null && {\n        HumanLoopConfig: serializeAws_json1_1HumanLoopConfig(input.HumanLoopConfig, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1ContentClassifiers = (\n  input: (ContentClassifier | string)[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1DetectDocumentTextRequest = (\n  input: DetectDocumentTextRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Document !== undefined &&\n      input.Document !== null && { Document: serializeAws_json1_1Document(input.Document, context) }),\n  };\n};\n\nconst serializeAws_json1_1Document = (input: Document, context: __SerdeContext): any => {\n  return {\n    ...(input.Bytes !== undefined && input.Bytes !== null && { Bytes: context.base64Encoder(input.Bytes) }),\n    ...(input.S3Object !== undefined &&\n      input.S3Object !== null && { S3Object: serializeAws_json1_1S3Object(input.S3Object, context) }),\n  };\n};\n\nconst serializeAws_json1_1DocumentLocation = (input: DocumentLocation, context: __SerdeContext): any => {\n  return {\n    ...(input.S3Object !== undefined &&\n      input.S3Object !== null && { S3Object: serializeAws_json1_1S3Object(input.S3Object, context) }),\n  };\n};\n\nconst serializeAws_json1_1FeatureTypes = (input: (FeatureType | string)[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1GetDocumentAnalysisRequest = (\n  input: GetDocumentAnalysisRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.JobId !== undefined && input.JobId !== null && { JobId: input.JobId }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1GetDocumentTextDetectionRequest = (\n  input: GetDocumentTextDetectionRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.JobId !== undefined && input.JobId !== null && { JobId: input.JobId }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1HumanLoopConfig = (input: HumanLoopConfig, context: __SerdeContext): any => {\n  return {\n    ...(input.DataAttributes !== undefined &&\n      input.DataAttributes !== null && {\n        DataAttributes: serializeAws_json1_1HumanLoopDataAttributes(input.DataAttributes, context),\n      }),\n    ...(input.FlowDefinitionArn !== undefined &&\n      input.FlowDefinitionArn !== null && { FlowDefinitionArn: input.FlowDefinitionArn }),\n    ...(input.HumanLoopName !== undefined && input.HumanLoopName !== null && { HumanLoopName: input.HumanLoopName }),\n  };\n};\n\nconst serializeAws_json1_1HumanLoopDataAttributes = (input: HumanLoopDataAttributes, context: __SerdeContext): any => {\n  return {\n    ...(input.ContentClassifiers !== undefined &&\n      input.ContentClassifiers !== null && {\n        ContentClassifiers: serializeAws_json1_1ContentClassifiers(input.ContentClassifiers, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1NotificationChannel = (input: NotificationChannel, context: __SerdeContext): any => {\n  return {\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n    ...(input.SNSTopicArn !== undefined && input.SNSTopicArn !== null && { SNSTopicArn: input.SNSTopicArn }),\n  };\n};\n\nconst serializeAws_json1_1OutputConfig = (input: OutputConfig, context: __SerdeContext): any => {\n  return {\n    ...(input.S3Bucket !== undefined && input.S3Bucket !== null && { S3Bucket: input.S3Bucket }),\n    ...(input.S3Prefix !== undefined && input.S3Prefix !== null && { S3Prefix: input.S3Prefix }),\n  };\n};\n\nconst serializeAws_json1_1S3Object = (input: S3Object, context: __SerdeContext): any => {\n  return {\n    ...(input.Bucket !== undefined && input.Bucket !== null && { Bucket: input.Bucket }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.Version !== undefined && input.Version !== null && { Version: input.Version }),\n  };\n};\n\nconst serializeAws_json1_1StartDocumentAnalysisRequest = (\n  input: StartDocumentAnalysisRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ClientRequestToken !== undefined &&\n      input.ClientRequestToken !== null && { ClientRequestToken: input.ClientRequestToken }),\n    ...(input.DocumentLocation !== undefined &&\n      input.DocumentLocation !== null && {\n        DocumentLocation: serializeAws_json1_1DocumentLocation(input.DocumentLocation, context),\n      }),\n    ...(input.FeatureTypes !== undefined &&\n      input.FeatureTypes !== null && { FeatureTypes: serializeAws_json1_1FeatureTypes(input.FeatureTypes, context) }),\n    ...(input.JobTag !== undefined && input.JobTag !== null && { JobTag: input.JobTag }),\n    ...(input.KMSKeyId !== undefined && input.KMSKeyId !== null && { KMSKeyId: input.KMSKeyId }),\n    ...(input.NotificationChannel !== undefined &&\n      input.NotificationChannel !== null && {\n        NotificationChannel: serializeAws_json1_1NotificationChannel(input.NotificationChannel, context),\n      }),\n    ...(input.OutputConfig !== undefined &&\n      input.OutputConfig !== null && { OutputConfig: serializeAws_json1_1OutputConfig(input.OutputConfig, context) }),\n  };\n};\n\nconst serializeAws_json1_1StartDocumentTextDetectionRequest = (\n  input: StartDocumentTextDetectionRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ClientRequestToken !== undefined &&\n      input.ClientRequestToken !== null && { ClientRequestToken: input.ClientRequestToken }),\n    ...(input.DocumentLocation !== undefined &&\n      input.DocumentLocation !== null && {\n        DocumentLocation: serializeAws_json1_1DocumentLocation(input.DocumentLocation, context),\n      }),\n    ...(input.JobTag !== undefined && input.JobTag !== null && { JobTag: input.JobTag }),\n    ...(input.KMSKeyId !== undefined && input.KMSKeyId !== null && { KMSKeyId: input.KMSKeyId }),\n    ...(input.NotificationChannel !== undefined &&\n      input.NotificationChannel !== null && {\n        NotificationChannel: serializeAws_json1_1NotificationChannel(input.NotificationChannel, context),\n      }),\n    ...(input.OutputConfig !== undefined &&\n      input.OutputConfig !== null && { OutputConfig: serializeAws_json1_1OutputConfig(input.OutputConfig, context) }),\n  };\n};\n\nconst deserializeAws_json1_1AccessDeniedException = (output: any, context: __SerdeContext): AccessDeniedException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1AnalyzeDocumentResponse = (\n  output: any,\n  context: __SerdeContext\n): AnalyzeDocumentResponse => {\n  return {\n    AnalyzeDocumentModelVersion:\n      output.AnalyzeDocumentModelVersion !== undefined && output.AnalyzeDocumentModelVersion !== null\n        ? output.AnalyzeDocumentModelVersion\n        : undefined,\n    Blocks:\n      output.Blocks !== undefined && output.Blocks !== null\n        ? deserializeAws_json1_1BlockList(output.Blocks, context)\n        : undefined,\n    DocumentMetadata:\n      output.DocumentMetadata !== undefined && output.DocumentMetadata !== null\n        ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context)\n        : undefined,\n    HumanLoopActivationOutput:\n      output.HumanLoopActivationOutput !== undefined && output.HumanLoopActivationOutput !== null\n        ? deserializeAws_json1_1HumanLoopActivationOutput(output.HumanLoopActivationOutput, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1BadDocumentException = (output: any, context: __SerdeContext): BadDocumentException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Block = (output: any, context: __SerdeContext): Block => {\n  return {\n    BlockType: output.BlockType !== undefined && output.BlockType !== null ? output.BlockType : undefined,\n    ColumnIndex: output.ColumnIndex !== undefined && output.ColumnIndex !== null ? output.ColumnIndex : undefined,\n    ColumnSpan: output.ColumnSpan !== undefined && output.ColumnSpan !== null ? output.ColumnSpan : undefined,\n    Confidence: output.Confidence !== undefined && output.Confidence !== null ? output.Confidence : undefined,\n    EntityTypes:\n      output.EntityTypes !== undefined && output.EntityTypes !== null\n        ? deserializeAws_json1_1EntityTypes(output.EntityTypes, context)\n        : undefined,\n    Geometry:\n      output.Geometry !== undefined && output.Geometry !== null\n        ? deserializeAws_json1_1Geometry(output.Geometry, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Page: output.Page !== undefined && output.Page !== null ? output.Page : undefined,\n    Relationships:\n      output.Relationships !== undefined && output.Relationships !== null\n        ? deserializeAws_json1_1RelationshipList(output.Relationships, context)\n        : undefined,\n    RowIndex: output.RowIndex !== undefined && output.RowIndex !== null ? output.RowIndex : undefined,\n    RowSpan: output.RowSpan !== undefined && output.RowSpan !== null ? output.RowSpan : undefined,\n    SelectionStatus:\n      output.SelectionStatus !== undefined && output.SelectionStatus !== null ? output.SelectionStatus : undefined,\n    Text: output.Text !== undefined && output.Text !== null ? output.Text : undefined,\n    TextType: output.TextType !== undefined && output.TextType !== null ? output.TextType : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1BlockList = (output: any, context: __SerdeContext): Block[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Block(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1BoundingBox = (output: any, context: __SerdeContext): BoundingBox => {\n  return {\n    Height: output.Height !== undefined && output.Height !== null ? output.Height : undefined,\n    Left: output.Left !== undefined && output.Left !== null ? output.Left : undefined,\n    Top: output.Top !== undefined && output.Top !== null ? output.Top : undefined,\n    Width: output.Width !== undefined && output.Width !== null ? output.Width : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DetectDocumentTextResponse = (\n  output: any,\n  context: __SerdeContext\n): DetectDocumentTextResponse => {\n  return {\n    Blocks:\n      output.Blocks !== undefined && output.Blocks !== null\n        ? deserializeAws_json1_1BlockList(output.Blocks, context)\n        : undefined,\n    DetectDocumentTextModelVersion:\n      output.DetectDocumentTextModelVersion !== undefined && output.DetectDocumentTextModelVersion !== null\n        ? output.DetectDocumentTextModelVersion\n        : undefined,\n    DocumentMetadata:\n      output.DocumentMetadata !== undefined && output.DocumentMetadata !== null\n        ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DocumentMetadata = (output: any, context: __SerdeContext): DocumentMetadata => {\n  return {\n    Pages: output.Pages !== undefined && output.Pages !== null ? output.Pages : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DocumentTooLargeException = (\n  output: any,\n  context: __SerdeContext\n): DocumentTooLargeException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EntityTypes = (output: any, context: __SerdeContext): (EntityType | string)[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1Geometry = (output: any, context: __SerdeContext): Geometry => {\n  return {\n    BoundingBox:\n      output.BoundingBox !== undefined && output.BoundingBox !== null\n        ? deserializeAws_json1_1BoundingBox(output.BoundingBox, context)\n        : undefined,\n    Polygon:\n      output.Polygon !== undefined && output.Polygon !== null\n        ? deserializeAws_json1_1Polygon(output.Polygon, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetDocumentAnalysisResponse = (\n  output: any,\n  context: __SerdeContext\n): GetDocumentAnalysisResponse => {\n  return {\n    AnalyzeDocumentModelVersion:\n      output.AnalyzeDocumentModelVersion !== undefined && output.AnalyzeDocumentModelVersion !== null\n        ? output.AnalyzeDocumentModelVersion\n        : undefined,\n    Blocks:\n      output.Blocks !== undefined && output.Blocks !== null\n        ? deserializeAws_json1_1BlockList(output.Blocks, context)\n        : undefined,\n    DocumentMetadata:\n      output.DocumentMetadata !== undefined && output.DocumentMetadata !== null\n        ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context)\n        : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StatusMessage:\n      output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    Warnings:\n      output.Warnings !== undefined && output.Warnings !== null\n        ? deserializeAws_json1_1Warnings(output.Warnings, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetDocumentTextDetectionResponse = (\n  output: any,\n  context: __SerdeContext\n): GetDocumentTextDetectionResponse => {\n  return {\n    Blocks:\n      output.Blocks !== undefined && output.Blocks !== null\n        ? deserializeAws_json1_1BlockList(output.Blocks, context)\n        : undefined,\n    DetectDocumentTextModelVersion:\n      output.DetectDocumentTextModelVersion !== undefined && output.DetectDocumentTextModelVersion !== null\n        ? output.DetectDocumentTextModelVersion\n        : undefined,\n    DocumentMetadata:\n      output.DocumentMetadata !== undefined && output.DocumentMetadata !== null\n        ? deserializeAws_json1_1DocumentMetadata(output.DocumentMetadata, context)\n        : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StatusMessage:\n      output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    Warnings:\n      output.Warnings !== undefined && output.Warnings !== null\n        ? deserializeAws_json1_1Warnings(output.Warnings, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1HumanLoopActivationOutput = (\n  output: any,\n  context: __SerdeContext\n): HumanLoopActivationOutput => {\n  return {\n    HumanLoopActivationConditionsEvaluationResults:\n      output.HumanLoopActivationConditionsEvaluationResults !== undefined &&\n      output.HumanLoopActivationConditionsEvaluationResults !== null\n        ? new __LazyJsonString(output.HumanLoopActivationConditionsEvaluationResults)\n        : undefined,\n    HumanLoopActivationReasons:\n      output.HumanLoopActivationReasons !== undefined && output.HumanLoopActivationReasons !== null\n        ? deserializeAws_json1_1HumanLoopActivationReasons(output.HumanLoopActivationReasons, context)\n        : undefined,\n    HumanLoopArn: output.HumanLoopArn !== undefined && output.HumanLoopArn !== null ? output.HumanLoopArn : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1HumanLoopActivationReasons = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1HumanLoopQuotaExceededException = (\n  output: any,\n  context: __SerdeContext\n): HumanLoopQuotaExceededException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    QuotaCode: output.QuotaCode !== undefined && output.QuotaCode !== null ? output.QuotaCode : undefined,\n    ResourceType: output.ResourceType !== undefined && output.ResourceType !== null ? output.ResourceType : undefined,\n    ServiceCode: output.ServiceCode !== undefined && output.ServiceCode !== null ? output.ServiceCode : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1IdempotentParameterMismatchException = (\n  output: any,\n  context: __SerdeContext\n): IdempotentParameterMismatchException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1IdList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1InternalServerError = (output: any, context: __SerdeContext): InternalServerError => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidJobIdException = (output: any, context: __SerdeContext): InvalidJobIdException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidKMSKeyException = (output: any, context: __SerdeContext): InvalidKMSKeyException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidParameterException = (\n  output: any,\n  context: __SerdeContext\n): InvalidParameterException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidS3ObjectException = (\n  output: any,\n  context: __SerdeContext\n): InvalidS3ObjectException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Pages = (output: any, context: __SerdeContext): number[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1Point = (output: any, context: __SerdeContext): Point => {\n  return {\n    X: output.X !== undefined && output.X !== null ? output.X : undefined,\n    Y: output.Y !== undefined && output.Y !== null ? output.Y : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Polygon = (output: any, context: __SerdeContext): Point[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Point(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ProvisionedThroughputExceededException = (\n  output: any,\n  context: __SerdeContext\n): ProvisionedThroughputExceededException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Relationship = (output: any, context: __SerdeContext): Relationship => {\n  return {\n    Ids:\n      output.Ids !== undefined && output.Ids !== null ? deserializeAws_json1_1IdList(output.Ids, context) : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1RelationshipList = (output: any, context: __SerdeContext): Relationship[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Relationship(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1StartDocumentAnalysisResponse = (\n  output: any,\n  context: __SerdeContext\n): StartDocumentAnalysisResponse => {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StartDocumentTextDetectionResponse = (\n  output: any,\n  context: __SerdeContext\n): StartDocumentTextDetectionResponse => {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ThrottlingException = (output: any, context: __SerdeContext): ThrottlingException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UnsupportedDocumentException = (\n  output: any,\n  context: __SerdeContext\n): UnsupportedDocumentException => {\n  return {\n    Code: output.Code !== undefined && output.Code !== null ? output.Code : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Warning = (output: any, context: __SerdeContext): Warning => {\n  return {\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    Pages:\n      output.Pages !== undefined && output.Pages !== null\n        ? deserializeAws_json1_1Pages(output.Pages, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Warnings = (output: any, context: __SerdeContext): Warning[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Warning(entry, context);\n    });\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}