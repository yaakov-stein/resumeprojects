{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { SENSITIVE_STRING } from \"@aws-sdk/smithy-client\";\nexport var AbortIncompleteMultipartUpload;\n\n(function (AbortIncompleteMultipartUpload) {\n  AbortIncompleteMultipartUpload.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AbortIncompleteMultipartUpload || (AbortIncompleteMultipartUpload = {}));\n\nexport var AbortMultipartUploadOutput;\n\n(function (AbortMultipartUploadOutput) {\n  AbortMultipartUploadOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AbortMultipartUploadOutput || (AbortMultipartUploadOutput = {}));\n\nexport var AbortMultipartUploadRequest;\n\n(function (AbortMultipartUploadRequest) {\n  AbortMultipartUploadRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AbortMultipartUploadRequest || (AbortMultipartUploadRequest = {}));\n\nexport var NoSuchUpload;\n\n(function (NoSuchUpload) {\n  NoSuchUpload.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NoSuchUpload || (NoSuchUpload = {}));\n\nexport var AccelerateConfiguration;\n\n(function (AccelerateConfiguration) {\n  AccelerateConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AccelerateConfiguration || (AccelerateConfiguration = {}));\n\nexport var Grantee;\n\n(function (Grantee) {\n  Grantee.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Grantee || (Grantee = {}));\n\nexport var Grant;\n\n(function (Grant) {\n  Grant.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Grant || (Grant = {}));\n\nexport var Owner;\n\n(function (Owner) {\n  Owner.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Owner || (Owner = {}));\n\nexport var AccessControlPolicy;\n\n(function (AccessControlPolicy) {\n  AccessControlPolicy.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AccessControlPolicy || (AccessControlPolicy = {}));\n\nexport var AccessControlTranslation;\n\n(function (AccessControlTranslation) {\n  AccessControlTranslation.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AccessControlTranslation || (AccessControlTranslation = {}));\n\nexport var CompleteMultipartUploadOutput;\n\n(function (CompleteMultipartUploadOutput) {\n  CompleteMultipartUploadOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    });\n  };\n})(CompleteMultipartUploadOutput || (CompleteMultipartUploadOutput = {}));\n\nexport var CompletedPart;\n\n(function (CompletedPart) {\n  CompletedPart.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CompletedPart || (CompletedPart = {}));\n\nexport var CompletedMultipartUpload;\n\n(function (CompletedMultipartUpload) {\n  CompletedMultipartUpload.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CompletedMultipartUpload || (CompletedMultipartUpload = {}));\n\nexport var CompleteMultipartUploadRequest;\n\n(function (CompleteMultipartUploadRequest) {\n  CompleteMultipartUploadRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CompleteMultipartUploadRequest || (CompleteMultipartUploadRequest = {}));\n\nexport var CopyObjectResult;\n\n(function (CopyObjectResult) {\n  CopyObjectResult.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CopyObjectResult || (CopyObjectResult = {}));\n\nexport var CopyObjectOutput;\n\n(function (CopyObjectOutput) {\n  CopyObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    });\n  };\n})(CopyObjectOutput || (CopyObjectOutput = {}));\n\nexport var CopyObjectRequest;\n\n(function (CopyObjectRequest) {\n  CopyObjectRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign(__assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    }), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    }), obj.CopySourceSSECustomerKey && {\n      CopySourceSSECustomerKey: SENSITIVE_STRING\n    });\n  };\n})(CopyObjectRequest || (CopyObjectRequest = {}));\n\nexport var ObjectNotInActiveTierError;\n\n(function (ObjectNotInActiveTierError) {\n  ObjectNotInActiveTierError.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectNotInActiveTierError || (ObjectNotInActiveTierError = {}));\n\nexport var BucketAlreadyExists;\n\n(function (BucketAlreadyExists) {\n  BucketAlreadyExists.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(BucketAlreadyExists || (BucketAlreadyExists = {}));\n\nexport var BucketAlreadyOwnedByYou;\n\n(function (BucketAlreadyOwnedByYou) {\n  BucketAlreadyOwnedByYou.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(BucketAlreadyOwnedByYou || (BucketAlreadyOwnedByYou = {}));\n\nexport var CreateBucketOutput;\n\n(function (CreateBucketOutput) {\n  CreateBucketOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CreateBucketOutput || (CreateBucketOutput = {}));\n\nexport var CreateBucketConfiguration;\n\n(function (CreateBucketConfiguration) {\n  CreateBucketConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CreateBucketConfiguration || (CreateBucketConfiguration = {}));\n\nexport var CreateBucketRequest;\n\n(function (CreateBucketRequest) {\n  CreateBucketRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CreateBucketRequest || (CreateBucketRequest = {}));\n\nexport var CreateMultipartUploadOutput;\n\n(function (CreateMultipartUploadOutput) {\n  CreateMultipartUploadOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    });\n  };\n})(CreateMultipartUploadOutput || (CreateMultipartUploadOutput = {}));\n\nexport var CreateMultipartUploadRequest;\n\n(function (CreateMultipartUploadRequest) {\n  CreateMultipartUploadRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    }), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    });\n  };\n})(CreateMultipartUploadRequest || (CreateMultipartUploadRequest = {}));\n\nexport var DeleteBucketRequest;\n\n(function (DeleteBucketRequest) {\n  DeleteBucketRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketRequest || (DeleteBucketRequest = {}));\n\nexport var DeleteBucketAnalyticsConfigurationRequest;\n\n(function (DeleteBucketAnalyticsConfigurationRequest) {\n  DeleteBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketAnalyticsConfigurationRequest || (DeleteBucketAnalyticsConfigurationRequest = {}));\n\nexport var DeleteBucketCorsRequest;\n\n(function (DeleteBucketCorsRequest) {\n  DeleteBucketCorsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketCorsRequest || (DeleteBucketCorsRequest = {}));\n\nexport var DeleteBucketEncryptionRequest;\n\n(function (DeleteBucketEncryptionRequest) {\n  DeleteBucketEncryptionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketEncryptionRequest || (DeleteBucketEncryptionRequest = {}));\n\nexport var DeleteBucketIntelligentTieringConfigurationRequest;\n\n(function (DeleteBucketIntelligentTieringConfigurationRequest) {\n  DeleteBucketIntelligentTieringConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketIntelligentTieringConfigurationRequest || (DeleteBucketIntelligentTieringConfigurationRequest = {}));\n\nexport var DeleteBucketInventoryConfigurationRequest;\n\n(function (DeleteBucketInventoryConfigurationRequest) {\n  DeleteBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketInventoryConfigurationRequest || (DeleteBucketInventoryConfigurationRequest = {}));\n\nexport var DeleteBucketLifecycleRequest;\n\n(function (DeleteBucketLifecycleRequest) {\n  DeleteBucketLifecycleRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketLifecycleRequest || (DeleteBucketLifecycleRequest = {}));\n\nexport var DeleteBucketMetricsConfigurationRequest;\n\n(function (DeleteBucketMetricsConfigurationRequest) {\n  DeleteBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketMetricsConfigurationRequest || (DeleteBucketMetricsConfigurationRequest = {}));\n\nexport var DeleteBucketOwnershipControlsRequest;\n\n(function (DeleteBucketOwnershipControlsRequest) {\n  DeleteBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketOwnershipControlsRequest || (DeleteBucketOwnershipControlsRequest = {}));\n\nexport var DeleteBucketPolicyRequest;\n\n(function (DeleteBucketPolicyRequest) {\n  DeleteBucketPolicyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketPolicyRequest || (DeleteBucketPolicyRequest = {}));\n\nexport var DeleteBucketReplicationRequest;\n\n(function (DeleteBucketReplicationRequest) {\n  DeleteBucketReplicationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketReplicationRequest || (DeleteBucketReplicationRequest = {}));\n\nexport var DeleteBucketTaggingRequest;\n\n(function (DeleteBucketTaggingRequest) {\n  DeleteBucketTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketTaggingRequest || (DeleteBucketTaggingRequest = {}));\n\nexport var DeleteBucketWebsiteRequest;\n\n(function (DeleteBucketWebsiteRequest) {\n  DeleteBucketWebsiteRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteBucketWebsiteRequest || (DeleteBucketWebsiteRequest = {}));\n\nexport var DeleteObjectOutput;\n\n(function (DeleteObjectOutput) {\n  DeleteObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectOutput || (DeleteObjectOutput = {}));\n\nexport var DeleteObjectRequest;\n\n(function (DeleteObjectRequest) {\n  DeleteObjectRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectRequest || (DeleteObjectRequest = {}));\n\nexport var DeletedObject;\n\n(function (DeletedObject) {\n  DeletedObject.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeletedObject || (DeletedObject = {}));\n\nexport var _Error;\n\n(function (_Error) {\n  _Error.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(_Error || (_Error = {}));\n\nexport var DeleteObjectsOutput;\n\n(function (DeleteObjectsOutput) {\n  DeleteObjectsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectsOutput || (DeleteObjectsOutput = {}));\n\nexport var ObjectIdentifier;\n\n(function (ObjectIdentifier) {\n  ObjectIdentifier.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectIdentifier || (ObjectIdentifier = {}));\n\nexport var Delete;\n\n(function (Delete) {\n  Delete.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Delete || (Delete = {}));\n\nexport var DeleteObjectsRequest;\n\n(function (DeleteObjectsRequest) {\n  DeleteObjectsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectsRequest || (DeleteObjectsRequest = {}));\n\nexport var DeleteObjectTaggingOutput;\n\n(function (DeleteObjectTaggingOutput) {\n  DeleteObjectTaggingOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectTaggingOutput || (DeleteObjectTaggingOutput = {}));\n\nexport var DeleteObjectTaggingRequest;\n\n(function (DeleteObjectTaggingRequest) {\n  DeleteObjectTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteObjectTaggingRequest || (DeleteObjectTaggingRequest = {}));\n\nexport var DeletePublicAccessBlockRequest;\n\n(function (DeletePublicAccessBlockRequest) {\n  DeletePublicAccessBlockRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeletePublicAccessBlockRequest || (DeletePublicAccessBlockRequest = {}));\n\nexport var GetBucketAccelerateConfigurationOutput;\n\n(function (GetBucketAccelerateConfigurationOutput) {\n  GetBucketAccelerateConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketAccelerateConfigurationOutput || (GetBucketAccelerateConfigurationOutput = {}));\n\nexport var GetBucketAccelerateConfigurationRequest;\n\n(function (GetBucketAccelerateConfigurationRequest) {\n  GetBucketAccelerateConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketAccelerateConfigurationRequest || (GetBucketAccelerateConfigurationRequest = {}));\n\nexport var GetBucketAclOutput;\n\n(function (GetBucketAclOutput) {\n  GetBucketAclOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketAclOutput || (GetBucketAclOutput = {}));\n\nexport var GetBucketAclRequest;\n\n(function (GetBucketAclRequest) {\n  GetBucketAclRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketAclRequest || (GetBucketAclRequest = {}));\n\nexport var Tag;\n\n(function (Tag) {\n  Tag.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Tag || (Tag = {}));\n\nexport var AnalyticsAndOperator;\n\n(function (AnalyticsAndOperator) {\n  AnalyticsAndOperator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AnalyticsAndOperator || (AnalyticsAndOperator = {}));\n\nexport var AnalyticsFilter;\n\n(function (AnalyticsFilter) {\n  AnalyticsFilter.visit = function (value, visitor) {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  AnalyticsFilter.filterSensitiveLog = function (obj) {\n    var _a;\n\n    if (obj.Prefix !== undefined) return {\n      Prefix: obj.Prefix\n    };\n    if (obj.Tag !== undefined) return {\n      Tag: Tag.filterSensitiveLog(obj.Tag)\n    };\n    if (obj.And !== undefined) return {\n      And: AnalyticsAndOperator.filterSensitiveLog(obj.And)\n    };\n    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = \"UNKNOWN\", _a;\n  };\n})(AnalyticsFilter || (AnalyticsFilter = {}));\n\nexport var AnalyticsS3BucketDestination;\n\n(function (AnalyticsS3BucketDestination) {\n  AnalyticsS3BucketDestination.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AnalyticsS3BucketDestination || (AnalyticsS3BucketDestination = {}));\n\nexport var AnalyticsExportDestination;\n\n(function (AnalyticsExportDestination) {\n  AnalyticsExportDestination.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(AnalyticsExportDestination || (AnalyticsExportDestination = {}));\n\nexport var StorageClassAnalysisDataExport;\n\n(function (StorageClassAnalysisDataExport) {\n  StorageClassAnalysisDataExport.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(StorageClassAnalysisDataExport || (StorageClassAnalysisDataExport = {}));\n\nexport var StorageClassAnalysis;\n\n(function (StorageClassAnalysis) {\n  StorageClassAnalysis.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(StorageClassAnalysis || (StorageClassAnalysis = {}));\n\nexport var AnalyticsConfiguration;\n\n(function (AnalyticsConfiguration) {\n  AnalyticsConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Filter && {\n      Filter: AnalyticsFilter.filterSensitiveLog(obj.Filter)\n    });\n  };\n})(AnalyticsConfiguration || (AnalyticsConfiguration = {}));\n\nexport var GetBucketAnalyticsConfigurationOutput;\n\n(function (GetBucketAnalyticsConfigurationOutput) {\n  GetBucketAnalyticsConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.AnalyticsConfiguration && {\n      AnalyticsConfiguration: AnalyticsConfiguration.filterSensitiveLog(obj.AnalyticsConfiguration)\n    });\n  };\n})(GetBucketAnalyticsConfigurationOutput || (GetBucketAnalyticsConfigurationOutput = {}));\n\nexport var GetBucketAnalyticsConfigurationRequest;\n\n(function (GetBucketAnalyticsConfigurationRequest) {\n  GetBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketAnalyticsConfigurationRequest || (GetBucketAnalyticsConfigurationRequest = {}));\n\nexport var CORSRule;\n\n(function (CORSRule) {\n  CORSRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CORSRule || (CORSRule = {}));\n\nexport var GetBucketCorsOutput;\n\n(function (GetBucketCorsOutput) {\n  GetBucketCorsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketCorsOutput || (GetBucketCorsOutput = {}));\n\nexport var GetBucketCorsRequest;\n\n(function (GetBucketCorsRequest) {\n  GetBucketCorsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketCorsRequest || (GetBucketCorsRequest = {}));\n\nexport var ServerSideEncryptionByDefault;\n\n(function (ServerSideEncryptionByDefault) {\n  ServerSideEncryptionByDefault.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.KMSMasterKeyID && {\n      KMSMasterKeyID: SENSITIVE_STRING\n    });\n  };\n})(ServerSideEncryptionByDefault || (ServerSideEncryptionByDefault = {}));\n\nexport var ServerSideEncryptionRule;\n\n(function (ServerSideEncryptionRule) {\n  ServerSideEncryptionRule.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.ApplyServerSideEncryptionByDefault && {\n      ApplyServerSideEncryptionByDefault: ServerSideEncryptionByDefault.filterSensitiveLog(obj.ApplyServerSideEncryptionByDefault)\n    });\n  };\n})(ServerSideEncryptionRule || (ServerSideEncryptionRule = {}));\n\nexport var ServerSideEncryptionConfiguration;\n\n(function (ServerSideEncryptionConfiguration) {\n  ServerSideEncryptionConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Rules && {\n      Rules: obj.Rules.map(function (item) {\n        return ServerSideEncryptionRule.filterSensitiveLog(item);\n      })\n    });\n  };\n})(ServerSideEncryptionConfiguration || (ServerSideEncryptionConfiguration = {}));\n\nexport var GetBucketEncryptionOutput;\n\n(function (GetBucketEncryptionOutput) {\n  GetBucketEncryptionOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.ServerSideEncryptionConfiguration && {\n      ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration.filterSensitiveLog(obj.ServerSideEncryptionConfiguration)\n    });\n  };\n})(GetBucketEncryptionOutput || (GetBucketEncryptionOutput = {}));\n\nexport var GetBucketEncryptionRequest;\n\n(function (GetBucketEncryptionRequest) {\n  GetBucketEncryptionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketEncryptionRequest || (GetBucketEncryptionRequest = {}));\n\nexport var IntelligentTieringAndOperator;\n\n(function (IntelligentTieringAndOperator) {\n  IntelligentTieringAndOperator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IntelligentTieringAndOperator || (IntelligentTieringAndOperator = {}));\n\nexport var IntelligentTieringFilter;\n\n(function (IntelligentTieringFilter) {\n  IntelligentTieringFilter.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IntelligentTieringFilter || (IntelligentTieringFilter = {}));\n\nexport var Tiering;\n\n(function (Tiering) {\n  Tiering.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Tiering || (Tiering = {}));\n\nexport var IntelligentTieringConfiguration;\n\n(function (IntelligentTieringConfiguration) {\n  IntelligentTieringConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IntelligentTieringConfiguration || (IntelligentTieringConfiguration = {}));\n\nexport var GetBucketIntelligentTieringConfigurationOutput;\n\n(function (GetBucketIntelligentTieringConfigurationOutput) {\n  GetBucketIntelligentTieringConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketIntelligentTieringConfigurationOutput || (GetBucketIntelligentTieringConfigurationOutput = {}));\n\nexport var GetBucketIntelligentTieringConfigurationRequest;\n\n(function (GetBucketIntelligentTieringConfigurationRequest) {\n  GetBucketIntelligentTieringConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketIntelligentTieringConfigurationRequest || (GetBucketIntelligentTieringConfigurationRequest = {}));\n\nexport var SSEKMS;\n\n(function (SSEKMS) {\n  SSEKMS.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.KeyId && {\n      KeyId: SENSITIVE_STRING\n    });\n  };\n})(SSEKMS || (SSEKMS = {}));\n\nexport var SSES3;\n\n(function (SSES3) {\n  SSES3.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(SSES3 || (SSES3 = {}));\n\nexport var InventoryEncryption;\n\n(function (InventoryEncryption) {\n  InventoryEncryption.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSEKMS && {\n      SSEKMS: SSEKMS.filterSensitiveLog(obj.SSEKMS)\n    });\n  };\n})(InventoryEncryption || (InventoryEncryption = {}));\n\nexport var InventoryS3BucketDestination;\n\n(function (InventoryS3BucketDestination) {\n  InventoryS3BucketDestination.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Encryption && {\n      Encryption: InventoryEncryption.filterSensitiveLog(obj.Encryption)\n    });\n  };\n})(InventoryS3BucketDestination || (InventoryS3BucketDestination = {}));\n\nexport var InventoryDestination;\n\n(function (InventoryDestination) {\n  InventoryDestination.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.S3BucketDestination && {\n      S3BucketDestination: InventoryS3BucketDestination.filterSensitiveLog(obj.S3BucketDestination)\n    });\n  };\n})(InventoryDestination || (InventoryDestination = {}));\n\nexport var InventoryFilter;\n\n(function (InventoryFilter) {\n  InventoryFilter.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InventoryFilter || (InventoryFilter = {}));\n\nexport var InventorySchedule;\n\n(function (InventorySchedule) {\n  InventorySchedule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InventorySchedule || (InventorySchedule = {}));\n\nexport var InventoryConfiguration;\n\n(function (InventoryConfiguration) {\n  InventoryConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Destination && {\n      Destination: InventoryDestination.filterSensitiveLog(obj.Destination)\n    });\n  };\n})(InventoryConfiguration || (InventoryConfiguration = {}));\n\nexport var GetBucketInventoryConfigurationOutput;\n\n(function (GetBucketInventoryConfigurationOutput) {\n  GetBucketInventoryConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.InventoryConfiguration && {\n      InventoryConfiguration: InventoryConfiguration.filterSensitiveLog(obj.InventoryConfiguration)\n    });\n  };\n})(GetBucketInventoryConfigurationOutput || (GetBucketInventoryConfigurationOutput = {}));\n\nexport var GetBucketInventoryConfigurationRequest;\n\n(function (GetBucketInventoryConfigurationRequest) {\n  GetBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketInventoryConfigurationRequest || (GetBucketInventoryConfigurationRequest = {}));\n\nexport var LifecycleExpiration;\n\n(function (LifecycleExpiration) {\n  LifecycleExpiration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LifecycleExpiration || (LifecycleExpiration = {}));\n\nexport var LifecycleRuleAndOperator;\n\n(function (LifecycleRuleAndOperator) {\n  LifecycleRuleAndOperator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LifecycleRuleAndOperator || (LifecycleRuleAndOperator = {}));\n\nexport var LifecycleRuleFilter;\n\n(function (LifecycleRuleFilter) {\n  LifecycleRuleFilter.visit = function (value, visitor) {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  LifecycleRuleFilter.filterSensitiveLog = function (obj) {\n    var _a;\n\n    if (obj.Prefix !== undefined) return {\n      Prefix: obj.Prefix\n    };\n    if (obj.Tag !== undefined) return {\n      Tag: Tag.filterSensitiveLog(obj.Tag)\n    };\n    if (obj.And !== undefined) return {\n      And: LifecycleRuleAndOperator.filterSensitiveLog(obj.And)\n    };\n    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = \"UNKNOWN\", _a;\n  };\n})(LifecycleRuleFilter || (LifecycleRuleFilter = {}));\n\nexport var NoncurrentVersionExpiration;\n\n(function (NoncurrentVersionExpiration) {\n  NoncurrentVersionExpiration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NoncurrentVersionExpiration || (NoncurrentVersionExpiration = {}));\n\nexport var NoncurrentVersionTransition;\n\n(function (NoncurrentVersionTransition) {\n  NoncurrentVersionTransition.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NoncurrentVersionTransition || (NoncurrentVersionTransition = {}));\n\nexport var Transition;\n\n(function (Transition) {\n  Transition.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Transition || (Transition = {}));\n\nexport var LifecycleRule;\n\n(function (LifecycleRule) {\n  LifecycleRule.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Filter && {\n      Filter: LifecycleRuleFilter.filterSensitiveLog(obj.Filter)\n    });\n  };\n})(LifecycleRule || (LifecycleRule = {}));\n\nexport var GetBucketLifecycleConfigurationOutput;\n\n(function (GetBucketLifecycleConfigurationOutput) {\n  GetBucketLifecycleConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Rules && {\n      Rules: obj.Rules.map(function (item) {\n        return LifecycleRule.filterSensitiveLog(item);\n      })\n    });\n  };\n})(GetBucketLifecycleConfigurationOutput || (GetBucketLifecycleConfigurationOutput = {}));\n\nexport var GetBucketLifecycleConfigurationRequest;\n\n(function (GetBucketLifecycleConfigurationRequest) {\n  GetBucketLifecycleConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketLifecycleConfigurationRequest || (GetBucketLifecycleConfigurationRequest = {}));\n\nexport var GetBucketLocationOutput;\n\n(function (GetBucketLocationOutput) {\n  GetBucketLocationOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketLocationOutput || (GetBucketLocationOutput = {}));\n\nexport var GetBucketLocationRequest;\n\n(function (GetBucketLocationRequest) {\n  GetBucketLocationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketLocationRequest || (GetBucketLocationRequest = {}));\n\nexport var TargetGrant;\n\n(function (TargetGrant) {\n  TargetGrant.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(TargetGrant || (TargetGrant = {}));\n\nexport var LoggingEnabled;\n\n(function (LoggingEnabled) {\n  LoggingEnabled.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LoggingEnabled || (LoggingEnabled = {}));\n\nexport var GetBucketLoggingOutput;\n\n(function (GetBucketLoggingOutput) {\n  GetBucketLoggingOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketLoggingOutput || (GetBucketLoggingOutput = {}));\n\nexport var GetBucketLoggingRequest;\n\n(function (GetBucketLoggingRequest) {\n  GetBucketLoggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketLoggingRequest || (GetBucketLoggingRequest = {}));\n\nexport var MetricsAndOperator;\n\n(function (MetricsAndOperator) {\n  MetricsAndOperator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MetricsAndOperator || (MetricsAndOperator = {}));\n\nexport var MetricsFilter;\n\n(function (MetricsFilter) {\n  MetricsFilter.visit = function (value, visitor) {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  MetricsFilter.filterSensitiveLog = function (obj) {\n    var _a;\n\n    if (obj.Prefix !== undefined) return {\n      Prefix: obj.Prefix\n    };\n    if (obj.Tag !== undefined) return {\n      Tag: Tag.filterSensitiveLog(obj.Tag)\n    };\n    if (obj.And !== undefined) return {\n      And: MetricsAndOperator.filterSensitiveLog(obj.And)\n    };\n    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = \"UNKNOWN\", _a;\n  };\n})(MetricsFilter || (MetricsFilter = {}));\n\nexport var MetricsConfiguration;\n\n(function (MetricsConfiguration) {\n  MetricsConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Filter && {\n      Filter: MetricsFilter.filterSensitiveLog(obj.Filter)\n    });\n  };\n})(MetricsConfiguration || (MetricsConfiguration = {}));\n\nexport var GetBucketMetricsConfigurationOutput;\n\n(function (GetBucketMetricsConfigurationOutput) {\n  GetBucketMetricsConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.MetricsConfiguration && {\n      MetricsConfiguration: MetricsConfiguration.filterSensitiveLog(obj.MetricsConfiguration)\n    });\n  };\n})(GetBucketMetricsConfigurationOutput || (GetBucketMetricsConfigurationOutput = {}));\n\nexport var GetBucketMetricsConfigurationRequest;\n\n(function (GetBucketMetricsConfigurationRequest) {\n  GetBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketMetricsConfigurationRequest || (GetBucketMetricsConfigurationRequest = {}));\n\nexport var GetBucketNotificationConfigurationRequest;\n\n(function (GetBucketNotificationConfigurationRequest) {\n  GetBucketNotificationConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketNotificationConfigurationRequest || (GetBucketNotificationConfigurationRequest = {}));\n\nexport var FilterRule;\n\n(function (FilterRule) {\n  FilterRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(FilterRule || (FilterRule = {}));\n\nexport var S3KeyFilter;\n\n(function (S3KeyFilter) {\n  S3KeyFilter.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(S3KeyFilter || (S3KeyFilter = {}));\n\nexport var NotificationConfigurationFilter;\n\n(function (NotificationConfigurationFilter) {\n  NotificationConfigurationFilter.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NotificationConfigurationFilter || (NotificationConfigurationFilter = {}));\n\nexport var LambdaFunctionConfiguration;\n\n(function (LambdaFunctionConfiguration) {\n  LambdaFunctionConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LambdaFunctionConfiguration || (LambdaFunctionConfiguration = {}));\n\nexport var QueueConfiguration;\n\n(function (QueueConfiguration) {\n  QueueConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(QueueConfiguration || (QueueConfiguration = {}));\n\nexport var TopicConfiguration;\n\n(function (TopicConfiguration) {\n  TopicConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(TopicConfiguration || (TopicConfiguration = {}));\n\nexport var NotificationConfiguration;\n\n(function (NotificationConfiguration) {\n  NotificationConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NotificationConfiguration || (NotificationConfiguration = {}));\n\nexport var OwnershipControlsRule;\n\n(function (OwnershipControlsRule) {\n  OwnershipControlsRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(OwnershipControlsRule || (OwnershipControlsRule = {}));\n\nexport var OwnershipControls;\n\n(function (OwnershipControls) {\n  OwnershipControls.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(OwnershipControls || (OwnershipControls = {}));\n\nexport var GetBucketOwnershipControlsOutput;\n\n(function (GetBucketOwnershipControlsOutput) {\n  GetBucketOwnershipControlsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketOwnershipControlsOutput || (GetBucketOwnershipControlsOutput = {}));\n\nexport var GetBucketOwnershipControlsRequest;\n\n(function (GetBucketOwnershipControlsRequest) {\n  GetBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketOwnershipControlsRequest || (GetBucketOwnershipControlsRequest = {}));\n\nexport var GetBucketPolicyOutput;\n\n(function (GetBucketPolicyOutput) {\n  GetBucketPolicyOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketPolicyOutput || (GetBucketPolicyOutput = {}));\n\nexport var GetBucketPolicyRequest;\n\n(function (GetBucketPolicyRequest) {\n  GetBucketPolicyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketPolicyRequest || (GetBucketPolicyRequest = {}));\n\nexport var PolicyStatus;\n\n(function (PolicyStatus) {\n  PolicyStatus.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PolicyStatus || (PolicyStatus = {}));\n\nexport var GetBucketPolicyStatusOutput;\n\n(function (GetBucketPolicyStatusOutput) {\n  GetBucketPolicyStatusOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketPolicyStatusOutput || (GetBucketPolicyStatusOutput = {}));\n\nexport var GetBucketPolicyStatusRequest;\n\n(function (GetBucketPolicyStatusRequest) {\n  GetBucketPolicyStatusRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketPolicyStatusRequest || (GetBucketPolicyStatusRequest = {}));\n\nexport var DeleteMarkerReplication;\n\n(function (DeleteMarkerReplication) {\n  DeleteMarkerReplication.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteMarkerReplication || (DeleteMarkerReplication = {}));\n\nexport var EncryptionConfiguration;\n\n(function (EncryptionConfiguration) {\n  EncryptionConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(EncryptionConfiguration || (EncryptionConfiguration = {}));\n\nexport var ReplicationTimeValue;\n\n(function (ReplicationTimeValue) {\n  ReplicationTimeValue.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ReplicationTimeValue || (ReplicationTimeValue = {}));\n\nexport var Metrics;\n\n(function (Metrics) {\n  Metrics.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Metrics || (Metrics = {}));\n\nexport var ReplicationTime;\n\n(function (ReplicationTime) {\n  ReplicationTime.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ReplicationTime || (ReplicationTime = {}));\n\nexport var Destination;\n\n(function (Destination) {\n  Destination.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Destination || (Destination = {}));\n\nexport var ExistingObjectReplication;\n\n(function (ExistingObjectReplication) {\n  ExistingObjectReplication.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ExistingObjectReplication || (ExistingObjectReplication = {}));\n\nexport var ReplicationRuleAndOperator;\n\n(function (ReplicationRuleAndOperator) {\n  ReplicationRuleAndOperator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ReplicationRuleAndOperator || (ReplicationRuleAndOperator = {}));\n\nexport var ReplicationRuleFilter;\n\n(function (ReplicationRuleFilter) {\n  ReplicationRuleFilter.visit = function (value, visitor) {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  ReplicationRuleFilter.filterSensitiveLog = function (obj) {\n    var _a;\n\n    if (obj.Prefix !== undefined) return {\n      Prefix: obj.Prefix\n    };\n    if (obj.Tag !== undefined) return {\n      Tag: Tag.filterSensitiveLog(obj.Tag)\n    };\n    if (obj.And !== undefined) return {\n      And: ReplicationRuleAndOperator.filterSensitiveLog(obj.And)\n    };\n    if (obj.$unknown !== undefined) return _a = {}, _a[obj.$unknown[0]] = \"UNKNOWN\", _a;\n  };\n})(ReplicationRuleFilter || (ReplicationRuleFilter = {}));\n\nexport var ReplicaModifications;\n\n(function (ReplicaModifications) {\n  ReplicaModifications.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ReplicaModifications || (ReplicaModifications = {}));\n\nexport var SseKmsEncryptedObjects;\n\n(function (SseKmsEncryptedObjects) {\n  SseKmsEncryptedObjects.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(SseKmsEncryptedObjects || (SseKmsEncryptedObjects = {}));\n\nexport var SourceSelectionCriteria;\n\n(function (SourceSelectionCriteria) {\n  SourceSelectionCriteria.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(SourceSelectionCriteria || (SourceSelectionCriteria = {}));\n\nexport var ReplicationRule;\n\n(function (ReplicationRule) {\n  ReplicationRule.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Filter && {\n      Filter: ReplicationRuleFilter.filterSensitiveLog(obj.Filter)\n    });\n  };\n})(ReplicationRule || (ReplicationRule = {}));\n\nexport var ReplicationConfiguration;\n\n(function (ReplicationConfiguration) {\n  ReplicationConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Rules && {\n      Rules: obj.Rules.map(function (item) {\n        return ReplicationRule.filterSensitiveLog(item);\n      })\n    });\n  };\n})(ReplicationConfiguration || (ReplicationConfiguration = {}));\n\nexport var GetBucketReplicationOutput;\n\n(function (GetBucketReplicationOutput) {\n  GetBucketReplicationOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.ReplicationConfiguration && {\n      ReplicationConfiguration: ReplicationConfiguration.filterSensitiveLog(obj.ReplicationConfiguration)\n    });\n  };\n})(GetBucketReplicationOutput || (GetBucketReplicationOutput = {}));\n\nexport var GetBucketReplicationRequest;\n\n(function (GetBucketReplicationRequest) {\n  GetBucketReplicationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketReplicationRequest || (GetBucketReplicationRequest = {}));\n\nexport var GetBucketRequestPaymentOutput;\n\n(function (GetBucketRequestPaymentOutput) {\n  GetBucketRequestPaymentOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketRequestPaymentOutput || (GetBucketRequestPaymentOutput = {}));\n\nexport var GetBucketRequestPaymentRequest;\n\n(function (GetBucketRequestPaymentRequest) {\n  GetBucketRequestPaymentRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketRequestPaymentRequest || (GetBucketRequestPaymentRequest = {}));\n\nexport var GetBucketTaggingOutput;\n\n(function (GetBucketTaggingOutput) {\n  GetBucketTaggingOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketTaggingOutput || (GetBucketTaggingOutput = {}));\n\nexport var GetBucketTaggingRequest;\n\n(function (GetBucketTaggingRequest) {\n  GetBucketTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketTaggingRequest || (GetBucketTaggingRequest = {}));\n\nexport var GetBucketVersioningOutput;\n\n(function (GetBucketVersioningOutput) {\n  GetBucketVersioningOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketVersioningOutput || (GetBucketVersioningOutput = {}));\n\nexport var GetBucketVersioningRequest;\n\n(function (GetBucketVersioningRequest) {\n  GetBucketVersioningRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketVersioningRequest || (GetBucketVersioningRequest = {}));\n\nexport var ErrorDocument;\n\n(function (ErrorDocument) {\n  ErrorDocument.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ErrorDocument || (ErrorDocument = {}));\n\nexport var IndexDocument;\n\n(function (IndexDocument) {\n  IndexDocument.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IndexDocument || (IndexDocument = {}));\n\nexport var RedirectAllRequestsTo;\n\n(function (RedirectAllRequestsTo) {\n  RedirectAllRequestsTo.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RedirectAllRequestsTo || (RedirectAllRequestsTo = {}));\n\nexport var Condition;\n\n(function (Condition) {\n  Condition.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Condition || (Condition = {}));\n\nexport var Redirect;\n\n(function (Redirect) {\n  Redirect.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Redirect || (Redirect = {}));\n\nexport var RoutingRule;\n\n(function (RoutingRule) {\n  RoutingRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RoutingRule || (RoutingRule = {}));\n\nexport var GetBucketWebsiteOutput;\n\n(function (GetBucketWebsiteOutput) {\n  GetBucketWebsiteOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketWebsiteOutput || (GetBucketWebsiteOutput = {}));\n\nexport var GetBucketWebsiteRequest;\n\n(function (GetBucketWebsiteRequest) {\n  GetBucketWebsiteRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetBucketWebsiteRequest || (GetBucketWebsiteRequest = {}));\n\nexport var GetObjectOutput;\n\n(function (GetObjectOutput) {\n  GetObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    });\n  };\n})(GetObjectOutput || (GetObjectOutput = {}));\n\nexport var GetObjectRequest;\n\n(function (GetObjectRequest) {\n  GetObjectRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    });\n  };\n})(GetObjectRequest || (GetObjectRequest = {}));\n\nexport var InvalidObjectState;\n\n(function (InvalidObjectState) {\n  InvalidObjectState.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InvalidObjectState || (InvalidObjectState = {}));\n\nexport var NoSuchKey;\n\n(function (NoSuchKey) {\n  NoSuchKey.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NoSuchKey || (NoSuchKey = {}));\n\nexport var GetObjectAclOutput;\n\n(function (GetObjectAclOutput) {\n  GetObjectAclOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectAclOutput || (GetObjectAclOutput = {}));\n\nexport var GetObjectAclRequest;\n\n(function (GetObjectAclRequest) {\n  GetObjectAclRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectAclRequest || (GetObjectAclRequest = {}));\n\nexport var ObjectLockLegalHold;\n\n(function (ObjectLockLegalHold) {\n  ObjectLockLegalHold.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectLockLegalHold || (ObjectLockLegalHold = {}));\n\nexport var GetObjectLegalHoldOutput;\n\n(function (GetObjectLegalHoldOutput) {\n  GetObjectLegalHoldOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectLegalHoldOutput || (GetObjectLegalHoldOutput = {}));\n\nexport var GetObjectLegalHoldRequest;\n\n(function (GetObjectLegalHoldRequest) {\n  GetObjectLegalHoldRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectLegalHoldRequest || (GetObjectLegalHoldRequest = {}));\n\nexport var DefaultRetention;\n\n(function (DefaultRetention) {\n  DefaultRetention.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DefaultRetention || (DefaultRetention = {}));\n\nexport var ObjectLockRule;\n\n(function (ObjectLockRule) {\n  ObjectLockRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectLockRule || (ObjectLockRule = {}));\n\nexport var ObjectLockConfiguration;\n\n(function (ObjectLockConfiguration) {\n  ObjectLockConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectLockConfiguration || (ObjectLockConfiguration = {}));\n\nexport var GetObjectLockConfigurationOutput;\n\n(function (GetObjectLockConfigurationOutput) {\n  GetObjectLockConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectLockConfigurationOutput || (GetObjectLockConfigurationOutput = {}));\n\nexport var GetObjectLockConfigurationRequest;\n\n(function (GetObjectLockConfigurationRequest) {\n  GetObjectLockConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectLockConfigurationRequest || (GetObjectLockConfigurationRequest = {}));\n\nexport var ObjectLockRetention;\n\n(function (ObjectLockRetention) {\n  ObjectLockRetention.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectLockRetention || (ObjectLockRetention = {}));\n\nexport var GetObjectRetentionOutput;\n\n(function (GetObjectRetentionOutput) {\n  GetObjectRetentionOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectRetentionOutput || (GetObjectRetentionOutput = {}));\n\nexport var GetObjectRetentionRequest;\n\n(function (GetObjectRetentionRequest) {\n  GetObjectRetentionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectRetentionRequest || (GetObjectRetentionRequest = {}));\n\nexport var GetObjectTaggingOutput;\n\n(function (GetObjectTaggingOutput) {\n  GetObjectTaggingOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectTaggingOutput || (GetObjectTaggingOutput = {}));\n\nexport var GetObjectTaggingRequest;\n\n(function (GetObjectTaggingRequest) {\n  GetObjectTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectTaggingRequest || (GetObjectTaggingRequest = {}));\n\nexport var GetObjectTorrentOutput;\n\n(function (GetObjectTorrentOutput) {\n  GetObjectTorrentOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectTorrentOutput || (GetObjectTorrentOutput = {}));\n\nexport var GetObjectTorrentRequest;\n\n(function (GetObjectTorrentRequest) {\n  GetObjectTorrentRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetObjectTorrentRequest || (GetObjectTorrentRequest = {}));\n\nexport var PublicAccessBlockConfiguration;\n\n(function (PublicAccessBlockConfiguration) {\n  PublicAccessBlockConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PublicAccessBlockConfiguration || (PublicAccessBlockConfiguration = {}));\n\nexport var GetPublicAccessBlockOutput;\n\n(function (GetPublicAccessBlockOutput) {\n  GetPublicAccessBlockOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetPublicAccessBlockOutput || (GetPublicAccessBlockOutput = {}));\n\nexport var GetPublicAccessBlockRequest;\n\n(function (GetPublicAccessBlockRequest) {\n  GetPublicAccessBlockRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetPublicAccessBlockRequest || (GetPublicAccessBlockRequest = {}));\n\nexport var HeadBucketRequest;\n\n(function (HeadBucketRequest) {\n  HeadBucketRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(HeadBucketRequest || (HeadBucketRequest = {}));\n\nexport var NoSuchBucket;\n\n(function (NoSuchBucket) {\n  NoSuchBucket.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NoSuchBucket || (NoSuchBucket = {}));\n\nexport var HeadObjectOutput;\n\n(function (HeadObjectOutput) {\n  HeadObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    });\n  };\n})(HeadObjectOutput || (HeadObjectOutput = {}));\n\nexport var HeadObjectRequest;\n\n(function (HeadObjectRequest) {\n  HeadObjectRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    });\n  };\n})(HeadObjectRequest || (HeadObjectRequest = {}));\n\nexport var ListBucketAnalyticsConfigurationsOutput;\n\n(function (ListBucketAnalyticsConfigurationsOutput) {\n  ListBucketAnalyticsConfigurationsOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.AnalyticsConfigurationList && {\n      AnalyticsConfigurationList: obj.AnalyticsConfigurationList.map(function (item) {\n        return AnalyticsConfiguration.filterSensitiveLog(item);\n      })\n    });\n  };\n})(ListBucketAnalyticsConfigurationsOutput || (ListBucketAnalyticsConfigurationsOutput = {}));\n\nexport var ListBucketAnalyticsConfigurationsRequest;\n\n(function (ListBucketAnalyticsConfigurationsRequest) {\n  ListBucketAnalyticsConfigurationsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketAnalyticsConfigurationsRequest || (ListBucketAnalyticsConfigurationsRequest = {}));\n\nexport var ListBucketIntelligentTieringConfigurationsOutput;\n\n(function (ListBucketIntelligentTieringConfigurationsOutput) {\n  ListBucketIntelligentTieringConfigurationsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketIntelligentTieringConfigurationsOutput || (ListBucketIntelligentTieringConfigurationsOutput = {}));\n\nexport var ListBucketIntelligentTieringConfigurationsRequest;\n\n(function (ListBucketIntelligentTieringConfigurationsRequest) {\n  ListBucketIntelligentTieringConfigurationsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketIntelligentTieringConfigurationsRequest || (ListBucketIntelligentTieringConfigurationsRequest = {}));\n\nexport var ListBucketInventoryConfigurationsOutput;\n\n(function (ListBucketInventoryConfigurationsOutput) {\n  ListBucketInventoryConfigurationsOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.InventoryConfigurationList && {\n      InventoryConfigurationList: obj.InventoryConfigurationList.map(function (item) {\n        return InventoryConfiguration.filterSensitiveLog(item);\n      })\n    });\n  };\n})(ListBucketInventoryConfigurationsOutput || (ListBucketInventoryConfigurationsOutput = {}));\n\nexport var ListBucketInventoryConfigurationsRequest;\n\n(function (ListBucketInventoryConfigurationsRequest) {\n  ListBucketInventoryConfigurationsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketInventoryConfigurationsRequest || (ListBucketInventoryConfigurationsRequest = {}));\n\nexport var ListBucketMetricsConfigurationsOutput;\n\n(function (ListBucketMetricsConfigurationsOutput) {\n  ListBucketMetricsConfigurationsOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.MetricsConfigurationList && {\n      MetricsConfigurationList: obj.MetricsConfigurationList.map(function (item) {\n        return MetricsConfiguration.filterSensitiveLog(item);\n      })\n    });\n  };\n})(ListBucketMetricsConfigurationsOutput || (ListBucketMetricsConfigurationsOutput = {}));\n\nexport var ListBucketMetricsConfigurationsRequest;\n\n(function (ListBucketMetricsConfigurationsRequest) {\n  ListBucketMetricsConfigurationsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketMetricsConfigurationsRequest || (ListBucketMetricsConfigurationsRequest = {}));\n\nexport var Bucket;\n\n(function (Bucket) {\n  Bucket.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Bucket || (Bucket = {}));\n\nexport var ListBucketsOutput;\n\n(function (ListBucketsOutput) {\n  ListBucketsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListBucketsOutput || (ListBucketsOutput = {}));\n\nexport var CommonPrefix;\n\n(function (CommonPrefix) {\n  CommonPrefix.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CommonPrefix || (CommonPrefix = {}));\n\nexport var Initiator;\n\n(function (Initiator) {\n  Initiator.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Initiator || (Initiator = {}));\n\nexport var MultipartUpload;\n\n(function (MultipartUpload) {\n  MultipartUpload.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MultipartUpload || (MultipartUpload = {}));\n\nexport var ListMultipartUploadsOutput;\n\n(function (ListMultipartUploadsOutput) {\n  ListMultipartUploadsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListMultipartUploadsOutput || (ListMultipartUploadsOutput = {}));\n\nexport var ListMultipartUploadsRequest;\n\n(function (ListMultipartUploadsRequest) {\n  ListMultipartUploadsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListMultipartUploadsRequest || (ListMultipartUploadsRequest = {}));\n\nexport var _Object;\n\n(function (_Object) {\n  _Object.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(_Object || (_Object = {}));\n\nexport var ListObjectsOutput;\n\n(function (ListObjectsOutput) {\n  ListObjectsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectsOutput || (ListObjectsOutput = {}));\n\nexport var ListObjectsRequest;\n\n(function (ListObjectsRequest) {\n  ListObjectsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectsRequest || (ListObjectsRequest = {}));\n\nexport var ListObjectsV2Output;\n\n(function (ListObjectsV2Output) {\n  ListObjectsV2Output.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectsV2Output || (ListObjectsV2Output = {}));\n\nexport var ListObjectsV2Request;\n\n(function (ListObjectsV2Request) {\n  ListObjectsV2Request.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectsV2Request || (ListObjectsV2Request = {}));\n\nexport var DeleteMarkerEntry;\n\n(function (DeleteMarkerEntry) {\n  DeleteMarkerEntry.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteMarkerEntry || (DeleteMarkerEntry = {}));\n\nexport var ObjectVersion;\n\n(function (ObjectVersion) {\n  ObjectVersion.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectVersion || (ObjectVersion = {}));\n\nexport var ListObjectVersionsOutput;\n\n(function (ListObjectVersionsOutput) {\n  ListObjectVersionsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectVersionsOutput || (ListObjectVersionsOutput = {}));\n\nexport var ListObjectVersionsRequest;\n\n(function (ListObjectVersionsRequest) {\n  ListObjectVersionsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListObjectVersionsRequest || (ListObjectVersionsRequest = {}));\n\nexport var Part;\n\n(function (Part) {\n  Part.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Part || (Part = {}));\n\nexport var ListPartsOutput;\n\n(function (ListPartsOutput) {\n  ListPartsOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListPartsOutput || (ListPartsOutput = {}));\n\nexport var ListPartsRequest;\n\n(function (ListPartsRequest) {\n  ListPartsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListPartsRequest || (ListPartsRequest = {}));\n\nexport var PutBucketAccelerateConfigurationRequest;\n\n(function (PutBucketAccelerateConfigurationRequest) {\n  PutBucketAccelerateConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketAccelerateConfigurationRequest || (PutBucketAccelerateConfigurationRequest = {}));\n\nexport var PutBucketAclRequest;\n\n(function (PutBucketAclRequest) {\n  PutBucketAclRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketAclRequest || (PutBucketAclRequest = {}));\n\nexport var PutBucketAnalyticsConfigurationRequest;\n\n(function (PutBucketAnalyticsConfigurationRequest) {\n  PutBucketAnalyticsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.AnalyticsConfiguration && {\n      AnalyticsConfiguration: AnalyticsConfiguration.filterSensitiveLog(obj.AnalyticsConfiguration)\n    });\n  };\n})(PutBucketAnalyticsConfigurationRequest || (PutBucketAnalyticsConfigurationRequest = {}));\n\nexport var CORSConfiguration;\n\n(function (CORSConfiguration) {\n  CORSConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CORSConfiguration || (CORSConfiguration = {}));\n\nexport var PutBucketCorsRequest;\n\n(function (PutBucketCorsRequest) {\n  PutBucketCorsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketCorsRequest || (PutBucketCorsRequest = {}));\n\nexport var PutBucketEncryptionRequest;\n\n(function (PutBucketEncryptionRequest) {\n  PutBucketEncryptionRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.ServerSideEncryptionConfiguration && {\n      ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration.filterSensitiveLog(obj.ServerSideEncryptionConfiguration)\n    });\n  };\n})(PutBucketEncryptionRequest || (PutBucketEncryptionRequest = {}));\n\nexport var PutBucketIntelligentTieringConfigurationRequest;\n\n(function (PutBucketIntelligentTieringConfigurationRequest) {\n  PutBucketIntelligentTieringConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketIntelligentTieringConfigurationRequest || (PutBucketIntelligentTieringConfigurationRequest = {}));\n\nexport var PutBucketInventoryConfigurationRequest;\n\n(function (PutBucketInventoryConfigurationRequest) {\n  PutBucketInventoryConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.InventoryConfiguration && {\n      InventoryConfiguration: InventoryConfiguration.filterSensitiveLog(obj.InventoryConfiguration)\n    });\n  };\n})(PutBucketInventoryConfigurationRequest || (PutBucketInventoryConfigurationRequest = {}));\n\nexport var BucketLifecycleConfiguration;\n\n(function (BucketLifecycleConfiguration) {\n  BucketLifecycleConfiguration.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.Rules && {\n      Rules: obj.Rules.map(function (item) {\n        return LifecycleRule.filterSensitiveLog(item);\n      })\n    });\n  };\n})(BucketLifecycleConfiguration || (BucketLifecycleConfiguration = {}));\n\nexport var PutBucketLifecycleConfigurationRequest;\n\n(function (PutBucketLifecycleConfigurationRequest) {\n  PutBucketLifecycleConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.LifecycleConfiguration && {\n      LifecycleConfiguration: BucketLifecycleConfiguration.filterSensitiveLog(obj.LifecycleConfiguration)\n    });\n  };\n})(PutBucketLifecycleConfigurationRequest || (PutBucketLifecycleConfigurationRequest = {}));\n\nexport var BucketLoggingStatus;\n\n(function (BucketLoggingStatus) {\n  BucketLoggingStatus.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(BucketLoggingStatus || (BucketLoggingStatus = {}));\n\nexport var PutBucketLoggingRequest;\n\n(function (PutBucketLoggingRequest) {\n  PutBucketLoggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketLoggingRequest || (PutBucketLoggingRequest = {}));\n\nexport var PutBucketMetricsConfigurationRequest;\n\n(function (PutBucketMetricsConfigurationRequest) {\n  PutBucketMetricsConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.MetricsConfiguration && {\n      MetricsConfiguration: MetricsConfiguration.filterSensitiveLog(obj.MetricsConfiguration)\n    });\n  };\n})(PutBucketMetricsConfigurationRequest || (PutBucketMetricsConfigurationRequest = {}));\n\nexport var PutBucketNotificationConfigurationRequest;\n\n(function (PutBucketNotificationConfigurationRequest) {\n  PutBucketNotificationConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketNotificationConfigurationRequest || (PutBucketNotificationConfigurationRequest = {}));\n\nexport var PutBucketOwnershipControlsRequest;\n\n(function (PutBucketOwnershipControlsRequest) {\n  PutBucketOwnershipControlsRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketOwnershipControlsRequest || (PutBucketOwnershipControlsRequest = {}));\n\nexport var PutBucketPolicyRequest;\n\n(function (PutBucketPolicyRequest) {\n  PutBucketPolicyRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketPolicyRequest || (PutBucketPolicyRequest = {}));\n\nexport var PutBucketReplicationRequest;\n\n(function (PutBucketReplicationRequest) {\n  PutBucketReplicationRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.ReplicationConfiguration && {\n      ReplicationConfiguration: ReplicationConfiguration.filterSensitiveLog(obj.ReplicationConfiguration)\n    });\n  };\n})(PutBucketReplicationRequest || (PutBucketReplicationRequest = {}));\n\nexport var RequestPaymentConfiguration;\n\n(function (RequestPaymentConfiguration) {\n  RequestPaymentConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RequestPaymentConfiguration || (RequestPaymentConfiguration = {}));\n\nexport var PutBucketRequestPaymentRequest;\n\n(function (PutBucketRequestPaymentRequest) {\n  PutBucketRequestPaymentRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketRequestPaymentRequest || (PutBucketRequestPaymentRequest = {}));\n\nexport var Tagging;\n\n(function (Tagging) {\n  Tagging.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Tagging || (Tagging = {}));\n\nexport var PutBucketTaggingRequest;\n\n(function (PutBucketTaggingRequest) {\n  PutBucketTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketTaggingRequest || (PutBucketTaggingRequest = {}));\n\nexport var VersioningConfiguration;\n\n(function (VersioningConfiguration) {\n  VersioningConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(VersioningConfiguration || (VersioningConfiguration = {}));\n\nexport var PutBucketVersioningRequest;\n\n(function (PutBucketVersioningRequest) {\n  PutBucketVersioningRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketVersioningRequest || (PutBucketVersioningRequest = {}));\n\nexport var WebsiteConfiguration;\n\n(function (WebsiteConfiguration) {\n  WebsiteConfiguration.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(WebsiteConfiguration || (WebsiteConfiguration = {}));\n\nexport var PutBucketWebsiteRequest;\n\n(function (PutBucketWebsiteRequest) {\n  PutBucketWebsiteRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutBucketWebsiteRequest || (PutBucketWebsiteRequest = {}));\n\nexport var PutObjectOutput;\n\n(function (PutObjectOutput) {\n  PutObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign({}, obj), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    });\n  };\n})(PutObjectOutput || (PutObjectOutput = {}));\n\nexport var PutObjectRequest;\n\n(function (PutObjectRequest) {\n  PutObjectRequest.filterSensitiveLog = function (obj) {\n    return __assign(__assign(__assign(__assign({}, obj), obj.SSECustomerKey && {\n      SSECustomerKey: SENSITIVE_STRING\n    }), obj.SSEKMSKeyId && {\n      SSEKMSKeyId: SENSITIVE_STRING\n    }), obj.SSEKMSEncryptionContext && {\n      SSEKMSEncryptionContext: SENSITIVE_STRING\n    });\n  };\n})(PutObjectRequest || (PutObjectRequest = {}));\n\nexport var PutObjectAclOutput;\n\n(function (PutObjectAclOutput) {\n  PutObjectAclOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectAclOutput || (PutObjectAclOutput = {}));\n\nexport var PutObjectAclRequest;\n\n(function (PutObjectAclRequest) {\n  PutObjectAclRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectAclRequest || (PutObjectAclRequest = {}));\n\nexport var PutObjectLegalHoldOutput;\n\n(function (PutObjectLegalHoldOutput) {\n  PutObjectLegalHoldOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectLegalHoldOutput || (PutObjectLegalHoldOutput = {}));\n\nexport var PutObjectLegalHoldRequest;\n\n(function (PutObjectLegalHoldRequest) {\n  PutObjectLegalHoldRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectLegalHoldRequest || (PutObjectLegalHoldRequest = {}));\n\nexport var PutObjectLockConfigurationOutput;\n\n(function (PutObjectLockConfigurationOutput) {\n  PutObjectLockConfigurationOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectLockConfigurationOutput || (PutObjectLockConfigurationOutput = {}));\n\nexport var PutObjectLockConfigurationRequest;\n\n(function (PutObjectLockConfigurationRequest) {\n  PutObjectLockConfigurationRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectLockConfigurationRequest || (PutObjectLockConfigurationRequest = {}));\n\nexport var PutObjectRetentionOutput;\n\n(function (PutObjectRetentionOutput) {\n  PutObjectRetentionOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectRetentionOutput || (PutObjectRetentionOutput = {}));\n\nexport var PutObjectRetentionRequest;\n\n(function (PutObjectRetentionRequest) {\n  PutObjectRetentionRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectRetentionRequest || (PutObjectRetentionRequest = {}));\n\nexport var PutObjectTaggingOutput;\n\n(function (PutObjectTaggingOutput) {\n  PutObjectTaggingOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectTaggingOutput || (PutObjectTaggingOutput = {}));\n\nexport var PutObjectTaggingRequest;\n\n(function (PutObjectTaggingRequest) {\n  PutObjectTaggingRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutObjectTaggingRequest || (PutObjectTaggingRequest = {}));\n\nexport var PutPublicAccessBlockRequest;\n\n(function (PutPublicAccessBlockRequest) {\n  PutPublicAccessBlockRequest.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(PutPublicAccessBlockRequest || (PutPublicAccessBlockRequest = {}));\n\nexport var ObjectAlreadyInActiveTierError;\n\n(function (ObjectAlreadyInActiveTierError) {\n  ObjectAlreadyInActiveTierError.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ObjectAlreadyInActiveTierError || (ObjectAlreadyInActiveTierError = {}));\n\nexport var RestoreObjectOutput;\n\n(function (RestoreObjectOutput) {\n  RestoreObjectOutput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RestoreObjectOutput || (RestoreObjectOutput = {}));\n\nexport var GlacierJobParameters;\n\n(function (GlacierJobParameters) {\n  GlacierJobParameters.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GlacierJobParameters || (GlacierJobParameters = {}));\n\nexport var Encryption;\n\n(function (Encryption) {\n  Encryption.filterSensitiveLog = function (obj) {\n    return __assign(__assign({}, obj), obj.KMSKeyId && {\n      KMSKeyId: SENSITIVE_STRING\n    });\n  };\n})(Encryption || (Encryption = {}));","map":{"version":3,"mappings":"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","names":["SENSITIVE_STRING","AbortIncompleteMultipartUpload","obj","AbortMultipartUploadOutput","AbortMultipartUploadRequest","NoSuchUpload","AccelerateConfiguration","Grantee","Grant","Owner","AccessControlPolicy","AccessControlTranslation","CompleteMultipartUploadOutput","SSEKMSKeyId","CompletedPart","CompletedMultipartUpload","CompleteMultipartUploadRequest","CopyObjectResult","CopyObjectOutput","SSEKMSEncryptionContext","CopyObjectRequest","SSECustomerKey","CopySourceSSECustomerKey","ObjectNotInActiveTierError","BucketAlreadyExists","BucketAlreadyOwnedByYou","CreateBucketOutput","CreateBucketConfiguration","CreateBucketRequest","CreateMultipartUploadOutput","CreateMultipartUploadRequest","DeleteBucketRequest","DeleteBucketAnalyticsConfigurationRequest","DeleteBucketCorsRequest","DeleteBucketEncryptionRequest","DeleteBucketIntelligentTieringConfigurationRequest","DeleteBucketInventoryConfigurationRequest","DeleteBucketLifecycleRequest","DeleteBucketMetricsConfigurationRequest","DeleteBucketOwnershipControlsRequest","DeleteBucketPolicyRequest","DeleteBucketReplicationRequest","DeleteBucketTaggingRequest","DeleteBucketWebsiteRequest","DeleteObjectOutput","DeleteObjectRequest","DeletedObject","_Error","DeleteObjectsOutput","ObjectIdentifier","Delete","DeleteObjectsRequest","DeleteObjectTaggingOutput","DeleteObjectTaggingRequest","DeletePublicAccessBlockRequest","GetBucketAccelerateConfigurationOutput","GetBucketAccelerateConfigurationRequest","GetBucketAclOutput","GetBucketAclRequest","Tag","AnalyticsAndOperator","AnalyticsFilter","value","visitor","Prefix","undefined","And","_","$unknown","filterSensitiveLog","_a","AnalyticsS3BucketDestination","AnalyticsExportDestination","StorageClassAnalysisDataExport","StorageClassAnalysis","AnalyticsConfiguration","Filter","GetBucketAnalyticsConfigurationOutput","GetBucketAnalyticsConfigurationRequest","CORSRule","GetBucketCorsOutput","GetBucketCorsRequest","ServerSideEncryptionByDefault","KMSMasterKeyID","ServerSideEncryptionRule","ApplyServerSideEncryptionByDefault","ServerSideEncryptionConfiguration","Rules","map","item","GetBucketEncryptionOutput","GetBucketEncryptionRequest","IntelligentTieringAndOperator","IntelligentTieringFilter","Tiering","IntelligentTieringConfiguration","GetBucketIntelligentTieringConfigurationOutput","GetBucketIntelligentTieringConfigurationRequest","SSEKMS","KeyId","SSES3","InventoryEncryption","InventoryS3BucketDestination","Encryption","InventoryDestination","S3BucketDestination","InventoryFilter","InventorySchedule","InventoryConfiguration","Destination","GetBucketInventoryConfigurationOutput","GetBucketInventoryConfigurationRequest","LifecycleExpiration","LifecycleRuleAndOperator","LifecycleRuleFilter","NoncurrentVersionExpiration","NoncurrentVersionTransition","Transition","LifecycleRule","GetBucketLifecycleConfigurationOutput","GetBucketLifecycleConfigurationRequest","GetBucketLocationOutput","GetBucketLocationRequest","TargetGrant","LoggingEnabled","GetBucketLoggingOutput","GetBucketLoggingRequest","MetricsAndOperator","MetricsFilter","MetricsConfiguration","GetBucketMetricsConfigurationOutput","GetBucketMetricsConfigurationRequest","GetBucketNotificationConfigurationRequest","FilterRule","S3KeyFilter","NotificationConfigurationFilter","LambdaFunctionConfiguration","QueueConfiguration","TopicConfiguration","NotificationConfiguration","OwnershipControlsRule","OwnershipControls","GetBucketOwnershipControlsOutput","GetBucketOwnershipControlsRequest","GetBucketPolicyOutput","GetBucketPolicyRequest","PolicyStatus","GetBucketPolicyStatusOutput","GetBucketPolicyStatusRequest","DeleteMarkerReplication","EncryptionConfiguration","ReplicationTimeValue","Metrics","ReplicationTime","ExistingObjectReplication","ReplicationRuleAndOperator","ReplicationRuleFilter","ReplicaModifications","SseKmsEncryptedObjects","SourceSelectionCriteria","ReplicationRule","ReplicationConfiguration","GetBucketReplicationOutput","GetBucketReplicationRequest","GetBucketRequestPaymentOutput","GetBucketRequestPaymentRequest","GetBucketTaggingOutput","GetBucketTaggingRequest","GetBucketVersioningOutput","GetBucketVersioningRequest","ErrorDocument","IndexDocument","RedirectAllRequestsTo","Condition","Redirect","RoutingRule","GetBucketWebsiteOutput","GetBucketWebsiteRequest","GetObjectOutput","GetObjectRequest","InvalidObjectState","NoSuchKey","GetObjectAclOutput","GetObjectAclRequest","ObjectLockLegalHold","GetObjectLegalHoldOutput","GetObjectLegalHoldRequest","DefaultRetention","ObjectLockRule","ObjectLockConfiguration","GetObjectLockConfigurationOutput","GetObjectLockConfigurationRequest","ObjectLockRetention","GetObjectRetentionOutput","GetObjectRetentionRequest","GetObjectTaggingOutput","GetObjectTaggingRequest","GetObjectTorrentOutput","GetObjectTorrentRequest","PublicAccessBlockConfiguration","GetPublicAccessBlockOutput","GetPublicAccessBlockRequest","HeadBucketRequest","NoSuchBucket","HeadObjectOutput","HeadObjectRequest","ListBucketAnalyticsConfigurationsOutput","AnalyticsConfigurationList","ListBucketAnalyticsConfigurationsRequest","ListBucketIntelligentTieringConfigurationsOutput","ListBucketIntelligentTieringConfigurationsRequest","ListBucketInventoryConfigurationsOutput","InventoryConfigurationList","ListBucketInventoryConfigurationsRequest","ListBucketMetricsConfigurationsOutput","MetricsConfigurationList","ListBucketMetricsConfigurationsRequest","Bucket","ListBucketsOutput","CommonPrefix","Initiator","MultipartUpload","ListMultipartUploadsOutput","ListMultipartUploadsRequest","_Object","ListObjectsOutput","ListObjectsRequest","ListObjectsV2Output","ListObjectsV2Request","DeleteMarkerEntry","ObjectVersion","ListObjectVersionsOutput","ListObjectVersionsRequest","Part","ListPartsOutput","ListPartsRequest","PutBucketAccelerateConfigurationRequest","PutBucketAclRequest","PutBucketAnalyticsConfigurationRequest","CORSConfiguration","PutBucketCorsRequest","PutBucketEncryptionRequest","PutBucketIntelligentTieringConfigurationRequest","PutBucketInventoryConfigurationRequest","BucketLifecycleConfiguration","PutBucketLifecycleConfigurationRequest","LifecycleConfiguration","BucketLoggingStatus","PutBucketLoggingRequest","PutBucketMetricsConfigurationRequest","PutBucketNotificationConfigurationRequest","PutBucketOwnershipControlsRequest","PutBucketPolicyRequest","PutBucketReplicationRequest","RequestPaymentConfiguration","PutBucketRequestPaymentRequest","Tagging","PutBucketTaggingRequest","VersioningConfiguration","PutBucketVersioningRequest","WebsiteConfiguration","PutBucketWebsiteRequest","PutObjectOutput","PutObjectRequest","PutObjectAclOutput","PutObjectAclRequest","PutObjectLegalHoldOutput","PutObjectLegalHoldRequest","PutObjectLockConfigurationOutput","PutObjectLockConfigurationRequest","PutObjectRetentionOutput","PutObjectRetentionRequest","PutObjectTaggingOutput","PutObjectTaggingRequest","PutPublicAccessBlockRequest","ObjectAlreadyInActiveTierError","RestoreObjectOutput","GlacierJobParameters","KMSKeyId"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\github\\resumeprojectsrepo\\resumeprojects\\EliteManaging\\node_modules\\@aws-sdk\\client-s3\\models\\models_0.ts"],"sourcesContent":["import { SENSITIVE_STRING, SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport { MetadataBearer as $MetadataBearer } from \"@aws-sdk/types\";\nimport { Readable } from \"stream\";\n\n/**\n * <p>Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will\n *          wait before permanently removing all parts of the upload. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config\">\n *             Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a> in the\n *             <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n */\nexport interface AbortIncompleteMultipartUpload {\n  /**\n   * <p>Specifies the number of days after which Amazon S3 aborts an incomplete multipart\n   *          upload.</p>\n   */\n  DaysAfterInitiation?: number;\n}\n\nexport namespace AbortIncompleteMultipartUpload {\n  export const filterSensitiveLog = (obj: AbortIncompleteMultipartUpload): any => ({\n    ...obj,\n  });\n}\n\nexport type RequestCharged = \"requester\";\n\nexport interface AbortMultipartUploadOutput {\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace AbortMultipartUploadOutput {\n  export const filterSensitiveLog = (obj: AbortMultipartUploadOutput): any => ({\n    ...obj,\n  });\n}\n\nexport type RequestPayer = \"requester\";\n\nexport interface AbortMultipartUploadRequest {\n  /**\n   * <p>The bucket name to which the upload was taking place. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Key of the object for which the multipart upload was initiated.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>Upload ID that identifies the multipart upload.</p>\n   */\n  UploadId: string | undefined;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace AbortMultipartUploadRequest {\n  export const filterSensitiveLog = (obj: AbortMultipartUploadRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The specified multipart upload does not exist.</p>\n */\nexport interface NoSuchUpload extends __SmithyException, $MetadataBearer {\n  name: \"NoSuchUpload\";\n  $fault: \"client\";\n}\n\nexport namespace NoSuchUpload {\n  export const filterSensitiveLog = (obj: NoSuchUpload): any => ({\n    ...obj,\n  });\n}\n\nexport type BucketAccelerateStatus = \"Enabled\" | \"Suspended\";\n\n/**\n * <p>Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see\n *             <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html\">Amazon S3\n *             Transfer Acceleration</a> in the <i>Amazon Simple Storage Service Developer\n *          Guide</i>.</p>\n */\nexport interface AccelerateConfiguration {\n  /**\n   * <p>Specifies the transfer acceleration status of the bucket.</p>\n   */\n  Status?: BucketAccelerateStatus | string;\n}\n\nexport namespace AccelerateConfiguration {\n  export const filterSensitiveLog = (obj: AccelerateConfiguration): any => ({\n    ...obj,\n  });\n}\n\nexport type Type = \"AmazonCustomerByEmail\" | \"CanonicalUser\" | \"Group\";\n\n/**\n * <p>Container for the person being granted permissions.</p>\n */\nexport interface Grantee {\n  /**\n   * <p>Screen name of the grantee.</p>\n   */\n  DisplayName?: string;\n\n  /**\n   * <p>Email address of the grantee.</p>\n   *          <note>\n   *             <p>Using email addresses to specify a grantee is only supported in the following AWS Regions: </p>\n   *             <ul>\n   *                <li>\n   *                   <p>US East (N. Virginia)</p>\n   *                </li>\n   *                <li>\n   *                   <p>US West (N. California)</p>\n   *                </li>\n   *                <li>\n   *                   <p> US West (Oregon)</p>\n   *                </li>\n   *                <li>\n   *                   <p> Asia Pacific (Singapore)</p>\n   *                </li>\n   *                <li>\n   *                   <p>Asia Pacific (Sydney)</p>\n   *                </li>\n   *                <li>\n   *                   <p>Asia Pacific (Tokyo)</p>\n   *                </li>\n   *                <li>\n   *                   <p>Europe (Ireland)</p>\n   *                </li>\n   *                <li>\n   *                   <p>South America (São Paulo)</p>\n   *                </li>\n   *             </ul>\n   *             <p>For a list of all the Amazon S3 supported Regions and endpoints, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a> in the AWS General Reference.</p>\n   *          </note>\n   */\n  EmailAddress?: string;\n\n  /**\n   * <p>The canonical user ID of the grantee.</p>\n   */\n  ID?: string;\n\n  /**\n   * <p>URI of the grantee group.</p>\n   */\n  URI?: string;\n\n  /**\n   * <p>Type of grantee</p>\n   */\n  Type: Type | string | undefined;\n}\n\nexport namespace Grantee {\n  export const filterSensitiveLog = (obj: Grantee): any => ({\n    ...obj,\n  });\n}\n\nexport type Permission = \"FULL_CONTROL\" | \"READ\" | \"READ_ACP\" | \"WRITE\" | \"WRITE_ACP\";\n\n/**\n * <p>Container for grant information.</p>\n */\nexport interface Grant {\n  /**\n   * <p>The person being granted permissions.</p>\n   */\n  Grantee?: Grantee;\n\n  /**\n   * <p>Specifies the permission given to the grantee.</p>\n   */\n  Permission?: Permission | string;\n}\n\nexport namespace Grant {\n  export const filterSensitiveLog = (obj: Grant): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Container for the owner's display name and ID.</p>\n */\nexport interface Owner {\n  /**\n   * <p>Container for the display name of the owner.</p>\n   */\n  DisplayName?: string;\n\n  /**\n   * <p>Container for the ID of the owner.</p>\n   */\n  ID?: string;\n}\n\nexport namespace Owner {\n  export const filterSensitiveLog = (obj: Owner): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Contains the elements that set the ACL permissions for an object per grantee.</p>\n */\nexport interface AccessControlPolicy {\n  /**\n   * <p>A list of grants.</p>\n   */\n  Grants?: Grant[];\n\n  /**\n   * <p>Container for the bucket owner's display name and ID.</p>\n   */\n  Owner?: Owner;\n}\n\nexport namespace AccessControlPolicy {\n  export const filterSensitiveLog = (obj: AccessControlPolicy): any => ({\n    ...obj,\n  });\n}\n\nexport type OwnerOverride = \"Destination\";\n\n/**\n * <p>A container for information about access control for replicas.</p>\n */\nexport interface AccessControlTranslation {\n  /**\n   * <p>Specifies the replica ownership. For default and valid values, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html\">PUT bucket\n   *             replication</a> in the <i>Amazon Simple Storage Service API Reference</i>.</p>\n   */\n  Owner: OwnerOverride | string | undefined;\n}\n\nexport namespace AccessControlTranslation {\n  export const filterSensitiveLog = (obj: AccessControlTranslation): any => ({\n    ...obj,\n  });\n}\n\nexport type ServerSideEncryption = \"AES256\" | \"aws:kms\";\n\nexport interface CompleteMultipartUploadOutput {\n  /**\n   * <p>The URI that identifies the newly created object.</p>\n   */\n  Location?: string;\n\n  /**\n   * <p>The name of the bucket that contains the newly created object.</p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket?: string;\n\n  /**\n   * <p>The object key of the newly created object.</p>\n   */\n  Key?: string;\n\n  /**\n   * <p>If the object expiration is configured, this will contain the expiration date\n   *          (expiry-date) and rule ID (rule-id). The value of rule-id is URL encoded.</p>\n   */\n  Expiration?: string;\n\n  /**\n   * <p>Entity tag that identifies the newly created object's data. Objects with different\n   *          object data will have different entity tags. The entity tag is an opaque string. The entity\n   *          tag may or may not be an MD5 digest of the object data. If the entity tag is not an MD5\n   *          digest of the object data, it will contain one or more nonhexadecimal characters and/or\n   *          will consist of less than 32 or more than 32 hexadecimal digits.</p>\n   */\n  ETag?: string;\n\n  /**\n   * <p>If you specified server-side encryption either with an Amazon S3-managed encryption key or an\n   *          AWS KMS customer master key (CMK) in your initiate multipart upload request, the response\n   *          includes this header. It confirms the encryption algorithm that Amazon S3 used to encrypt the\n   *          object.</p>\n   */\n  ServerSideEncryption?: ServerSideEncryption | string;\n\n  /**\n   * <p>Version ID of the newly created object, in case the bucket has versioning turned\n   *          on.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>If present, specifies the ID of the AWS Key Management Service (AWS KMS) symmetric\n   *          customer managed customer master key (CMK) that was used for the object.</p>\n   */\n  SSEKMSKeyId?: string;\n\n  /**\n   * <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption with AWS KMS (SSE-KMS).</p>\n   */\n  BucketKeyEnabled?: boolean;\n\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace CompleteMultipartUploadOutput {\n  export const filterSensitiveLog = (obj: CompleteMultipartUploadOutput): any => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n  });\n}\n\n/**\n * <p>Details of the parts that were uploaded.</p>\n */\nexport interface CompletedPart {\n  /**\n   * <p>Entity tag returned when the part was uploaded.</p>\n   */\n  ETag?: string;\n\n  /**\n   * <p>Part number that identifies the part. This is a positive integer between 1 and\n   *          10,000.</p>\n   */\n  PartNumber?: number;\n}\n\nexport namespace CompletedPart {\n  export const filterSensitiveLog = (obj: CompletedPart): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The container for the completed multipart upload details.</p>\n */\nexport interface CompletedMultipartUpload {\n  /**\n   * <p>Array of CompletedPart data types.</p>\n   */\n  Parts?: CompletedPart[];\n}\n\nexport namespace CompletedMultipartUpload {\n  export const filterSensitiveLog = (obj: CompletedMultipartUpload): any => ({\n    ...obj,\n  });\n}\n\nexport interface CompleteMultipartUploadRequest {\n  /**\n   * <p>Name of the bucket to which the multipart upload was initiated.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Object key for which the multipart upload was initiated.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>The container for the multipart upload request information.</p>\n   */\n  MultipartUpload?: CompletedMultipartUpload;\n\n  /**\n   * <p>ID for the initiated multipart upload.</p>\n   */\n  UploadId: string | undefined;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace CompleteMultipartUploadRequest {\n  export const filterSensitiveLog = (obj: CompleteMultipartUploadRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Container for all response elements.</p>\n */\nexport interface CopyObjectResult {\n  /**\n   * <p>Returns the ETag of the new object. The ETag reflects only changes to the contents of an\n   *          object, not its metadata. The source and destination ETag is identical for a successfully\n   *          copied object.</p>\n   */\n  ETag?: string;\n\n  /**\n   * <p>Returns the date that the object was last modified.</p>\n   */\n  LastModified?: Date;\n}\n\nexport namespace CopyObjectResult {\n  export const filterSensitiveLog = (obj: CopyObjectResult): any => ({\n    ...obj,\n  });\n}\n\nexport interface CopyObjectOutput {\n  /**\n   * <p>Container for all response elements.</p>\n   */\n  CopyObjectResult?: CopyObjectResult;\n\n  /**\n   * <p>If the object expiration is configured, the response includes this header.</p>\n   */\n  Expiration?: string;\n\n  /**\n   * <p>Version of the copied object in the destination bucket.</p>\n   */\n  CopySourceVersionId?: string;\n\n  /**\n   * <p>Version ID of the newly created copy.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,\n   *          AES256, aws:kms).</p>\n   */\n  ServerSideEncryption?: ServerSideEncryption | string;\n\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header confirming the encryption algorithm used.</p>\n   */\n  SSECustomerAlgorithm?: string;\n\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header to provide round-trip message integrity verification of\n   *          the customer-provided encryption key.</p>\n   */\n  SSECustomerKeyMD5?: string;\n\n  /**\n   * <p>If present, specifies the ID of the AWS Key Management Service (AWS KMS) symmetric\n   *          customer managed customer master key (CMK) that was used for the object.</p>\n   */\n  SSEKMSKeyId?: string;\n\n  /**\n   * <p>If present, specifies the AWS KMS Encryption Context to use for object encryption. The\n   *          value of this header is a base64-encoded UTF-8 string holding JSON with the encryption\n   *          context key-value pairs.</p>\n   */\n  SSEKMSEncryptionContext?: string;\n\n  /**\n   * <p>Indicates whether the copied object uses an S3 Bucket Key for server-side encryption with AWS KMS (SSE-KMS).</p>\n   */\n  BucketKeyEnabled?: boolean;\n\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace CopyObjectOutput {\n  export const filterSensitiveLog = (obj: CopyObjectOutput): any => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n  });\n}\n\nexport type ObjectCannedACL =\n  | \"authenticated-read\"\n  | \"aws-exec-read\"\n  | \"bucket-owner-full-control\"\n  | \"bucket-owner-read\"\n  | \"private\"\n  | \"public-read\"\n  | \"public-read-write\";\n\nexport type MetadataDirective = \"COPY\" | \"REPLACE\";\n\nexport type ObjectLockLegalHoldStatus = \"OFF\" | \"ON\";\n\nexport type ObjectLockMode = \"COMPLIANCE\" | \"GOVERNANCE\";\n\nexport type StorageClass =\n  | \"DEEP_ARCHIVE\"\n  | \"GLACIER\"\n  | \"INTELLIGENT_TIERING\"\n  | \"ONEZONE_IA\"\n  | \"OUTPOSTS\"\n  | \"REDUCED_REDUNDANCY\"\n  | \"STANDARD\"\n  | \"STANDARD_IA\";\n\nexport type TaggingDirective = \"COPY\" | \"REPLACE\";\n\nexport interface CopyObjectRequest {\n  /**\n   * <p>The canned ACL to apply to the object.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  ACL?: ObjectCannedACL | string;\n\n  /**\n   * <p>The name of the destination bucket.</p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Specifies caching behavior along the request/reply chain.</p>\n   */\n  CacheControl?: string;\n\n  /**\n   * <p>Specifies presentational information for the object.</p>\n   */\n  ContentDisposition?: string;\n\n  /**\n   * <p>Specifies what content encodings have been applied to the object and thus what decoding\n   *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header\n   *          field.</p>\n   */\n  ContentEncoding?: string;\n\n  /**\n   * <p>The language the content is in.</p>\n   */\n  ContentLanguage?: string;\n\n  /**\n   * <p>A standard MIME type describing the format of the object data.</p>\n   */\n  ContentType?: string;\n\n  /**\n   * <p>Specifies the source object for the copy operation. You specify the value in one of two\n   *          formats, depending on whether you want to access the source object through an <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-points.html\">access\n   *          point</a>:</p>\n   *          <ul>\n   *             <li>\n   *                <p>For objects not accessed through an access point, specify the name of the source\n   *                bucket and the key of the source object, separated by a slash (/). For example, to\n   *                copy the object <code>reports/january.pdf</code> from the bucket\n   *                   <code>awsexamplebucket</code>, use\n   *                   <code>awsexamplebucket/reports/january.pdf</code>. The value must be URL\n   *                encoded.</p>\n   *             </li>\n   *             <li>\n   *                <p>For objects accessed through access points, specify the Amazon Resource Name (ARN) of the object as accessed through the access point, in the format <code>arn:aws:s3:<Region>:<account-id>:accesspoint/<access-point-name>/object/<key></code>. For example, to copy the object <code>reports/january.pdf</code> through access point <code>my-access-point</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3:us-west-2:123456789012:accesspoint/my-access-point/object/reports/january.pdf</code>. The value must be URL encoded.</p>\n   *                <note>\n   *                   <p>Amazon S3 supports copy operations using access points only when the source and destination buckets are in the same AWS Region.</p>\n   *                </note>\n   *                <p>Alternatively, for objects accessed through Amazon S3 on Outposts, specify the ARN of the object as accessed in the format <code>arn:aws:s3-outposts:<Region>:<account-id>:outpost/<outpost-id>/object/<key></code>. For example, to copy the object <code>reports/january.pdf</code> through outpost <code>my-outpost</code> owned by account <code>123456789012</code> in Region <code>us-west-2</code>, use the URL encoding of <code>arn:aws:s3-outposts:us-west-2:123456789012:outpost/my-outpost/object/reports/january.pdf</code>. The value must be URL encoded.  </p>\n   *             </li>\n   *          </ul>\n   *          <p>To copy a specific version of an object, append <code>?versionId=<version-id></code>\n   *          to the value (for example,\n   *             <code>awsexamplebucket/reports/january.pdf?versionId=QUpfdndhfd8438MNFDN93jdnJFkdmqnh893</code>).\n   *          If you don't specify a version ID, Amazon S3 copies the latest version of the source\n   *          object.</p>\n   */\n  CopySource: string | undefined;\n\n  /**\n   * <p>Copies the object if its entity tag (ETag) matches the specified tag.</p>\n   */\n  CopySourceIfMatch?: string;\n\n  /**\n   * <p>Copies the object if it has been modified since the specified time.</p>\n   */\n  CopySourceIfModifiedSince?: Date;\n\n  /**\n   * <p>Copies the object if its entity tag (ETag) is different than the specified ETag.</p>\n   */\n  CopySourceIfNoneMatch?: string;\n\n  /**\n   * <p>Copies the object if it hasn't been modified since the specified time.</p>\n   */\n  CopySourceIfUnmodifiedSince?: Date;\n\n  /**\n   * <p>The date and time at which the object is no longer cacheable.</p>\n   */\n  Expires?: Date;\n\n  /**\n   * <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the\n   *       object.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantFullControl?: string;\n\n  /**\n   * <p>Allows grantee to read the object data and its\n   *       metadata.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantRead?: string;\n\n  /**\n   * <p>Allows grantee to read the object ACL.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantReadACP?: string;\n\n  /**\n   * <p>Allows grantee to write the ACL for the applicable\n   *       object.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantWriteACP?: string;\n\n  /**\n   * <p>The key of the destination object.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>A map of metadata to store with the object in S3.</p>\n   */\n  Metadata?: { [key: string]: string };\n\n  /**\n   * <p>Specifies whether the metadata is copied from the source object or replaced with\n   *          metadata provided in the request.</p>\n   */\n  MetadataDirective?: MetadataDirective | string;\n\n  /**\n   * <p>Specifies whether the object tag-set are copied from the source object or replaced with\n   *          tag-set provided in the request.</p>\n   */\n  TaggingDirective?: TaggingDirective | string;\n\n  /**\n   * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,\n   *          AES256, aws:kms).</p>\n   */\n  ServerSideEncryption?: ServerSideEncryption | string;\n\n  /**\n   * <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The\n   *          STANDARD storage class provides high durability and high availability. Depending on\n   *          performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses\n   *          the OUTPOSTS Storage Class. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage Classes</a> in the <i>Amazon S3\n   *             Service Developer Guide</i>.</p>\n   */\n  StorageClass?: StorageClass | string;\n\n  /**\n   * <p>If the bucket is configured as a website, redirects requests for this object to another\n   *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in\n   *          the object metadata.</p>\n   */\n  WebsiteRedirectLocation?: string;\n\n  /**\n   * <p>Specifies the algorithm to use to when encrypting the object (for example,\n   *          AES256).</p>\n   */\n  SSECustomerAlgorithm?: string;\n\n  /**\n   * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This\n   *          value is used to store the object and then it is discarded; Amazon S3 does not store the\n   *          encryption key. The key must be appropriate for use with the algorithm specified in the\n   *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>\n   */\n  SSECustomerKey?: string;\n\n  /**\n   * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses\n   *          this header for a message integrity check to ensure that the encryption key was transmitted\n   *          without error.</p>\n   */\n  SSECustomerKeyMD5?: string;\n\n  /**\n   * <p>Specifies the AWS KMS key ID to use for object encryption. All GET and PUT requests for\n   *          an object protected by AWS KMS will fail if not made via SSL or using SigV4. For\n   *          information about configuring using any of the officially supported AWS SDKs and AWS CLI,\n   *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version\">Specifying the\n   *             Signature Version in Request Authentication</a> in the <i>Amazon S3 Developer\n   *             Guide</i>.</p>\n   */\n  SSEKMSKeyId?: string;\n\n  /**\n   * <p>Specifies the AWS KMS Encryption Context to use for object encryption. The value of this\n   *          header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value\n   *          pairs.</p>\n   */\n  SSEKMSEncryptionContext?: string;\n\n  /**\n   * <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS. </p>\n   *          <p>Specifying this header with a COPY operation doesn’t affect bucket-level settings for S3 Bucket Key.</p>\n   */\n  BucketKeyEnabled?: boolean;\n\n  /**\n   * <p>Specifies the algorithm to use when decrypting the source object (for example,\n   *          AES256).</p>\n   */\n  CopySourceSSECustomerAlgorithm?: string;\n\n  /**\n   * <p>Specifies the customer-provided encryption key for Amazon S3 to use to decrypt the source\n   *          object. The encryption key provided in this header must be one that was used when the\n   *          source object was created.</p>\n   */\n  CopySourceSSECustomerKey?: string;\n\n  /**\n   * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses\n   *          this header for a message integrity check to ensure that the encryption key was transmitted\n   *          without error.</p>\n   */\n  CopySourceSSECustomerKeyMD5?: string;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The tag-set for the object destination object this value must be used in conjunction\n   *          with the <code>TaggingDirective</code>. The tag-set must be encoded as URL Query\n   *          parameters.</p>\n   */\n  Tagging?: string;\n\n  /**\n   * <p>The Object Lock mode that you want to apply to the copied object.</p>\n   */\n  ObjectLockMode?: ObjectLockMode | string;\n\n  /**\n   * <p>The date and time when you want the copied object's Object Lock to expire.</p>\n   */\n  ObjectLockRetainUntilDate?: Date;\n\n  /**\n   * <p>Specifies whether you want to apply a Legal Hold to the copied object.</p>\n   */\n  ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;\n\n  /**\n   * <p>The account id of the expected destination bucket owner. If the destination bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n\n  /**\n   * <p>The account id of the expected source bucket owner. If the source bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedSourceBucketOwner?: string;\n}\n\nexport namespace CopyObjectRequest {\n  export const filterSensitiveLog = (obj: CopyObjectRequest): any => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n    ...(obj.CopySourceSSECustomerKey && { CopySourceSSECustomerKey: SENSITIVE_STRING }),\n  });\n}\n\n/**\n * <p>The source object of the COPY operation is not in the active tier and is only stored in\n *          Amazon S3 Glacier.</p>\n */\nexport interface ObjectNotInActiveTierError extends __SmithyException, $MetadataBearer {\n  name: \"ObjectNotInActiveTierError\";\n  $fault: \"client\";\n}\n\nexport namespace ObjectNotInActiveTierError {\n  export const filterSensitiveLog = (obj: ObjectNotInActiveTierError): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The requested bucket name is not available. The bucket namespace is shared by all users\n *          of the system. Select a different name and try again.</p>\n */\nexport interface BucketAlreadyExists extends __SmithyException, $MetadataBearer {\n  name: \"BucketAlreadyExists\";\n  $fault: \"client\";\n}\n\nexport namespace BucketAlreadyExists {\n  export const filterSensitiveLog = (obj: BucketAlreadyExists): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The bucket you tried to create already exists, and you own it. Amazon S3 returns this error\n *          in all AWS Regions except in the North Virginia Region. For legacy compatibility, if you\n *          re-create an existing bucket that you already own in the North Virginia Region, Amazon S3\n *          returns 200 OK and resets the bucket access control lists (ACLs).</p>\n */\nexport interface BucketAlreadyOwnedByYou extends __SmithyException, $MetadataBearer {\n  name: \"BucketAlreadyOwnedByYou\";\n  $fault: \"client\";\n}\n\nexport namespace BucketAlreadyOwnedByYou {\n  export const filterSensitiveLog = (obj: BucketAlreadyOwnedByYou): any => ({\n    ...obj,\n  });\n}\n\nexport interface CreateBucketOutput {\n  /**\n   * <p>Specifies the Region where the bucket will be created. If you are creating a bucket on\n   *          the US East (N. Virginia) Region (us-east-1), you do not need to specify the\n   *          location.</p>\n   */\n  Location?: string;\n}\n\nexport namespace CreateBucketOutput {\n  export const filterSensitiveLog = (obj: CreateBucketOutput): any => ({\n    ...obj,\n  });\n}\n\nexport type BucketCannedACL = \"authenticated-read\" | \"private\" | \"public-read\" | \"public-read-write\";\n\nexport type BucketLocationConstraint =\n  | \"EU\"\n  | \"af-south-1\"\n  | \"ap-east-1\"\n  | \"ap-northeast-1\"\n  | \"ap-northeast-2\"\n  | \"ap-northeast-3\"\n  | \"ap-south-1\"\n  | \"ap-southeast-1\"\n  | \"ap-southeast-2\"\n  | \"ca-central-1\"\n  | \"cn-north-1\"\n  | \"cn-northwest-1\"\n  | \"eu-central-1\"\n  | \"eu-north-1\"\n  | \"eu-south-1\"\n  | \"eu-west-1\"\n  | \"eu-west-2\"\n  | \"eu-west-3\"\n  | \"me-south-1\"\n  | \"sa-east-1\"\n  | \"us-east-2\"\n  | \"us-gov-east-1\"\n  | \"us-gov-west-1\"\n  | \"us-west-1\"\n  | \"us-west-2\";\n\n/**\n * <p>The configuration information for the bucket.</p>\n */\nexport interface CreateBucketConfiguration {\n  /**\n   * <p>Specifies the Region where the bucket will be created. If you don't specify a Region,\n   *          the bucket is created in the US East (N. Virginia) Region (us-east-1).</p>\n   */\n  LocationConstraint?: BucketLocationConstraint | string;\n}\n\nexport namespace CreateBucketConfiguration {\n  export const filterSensitiveLog = (obj: CreateBucketConfiguration): any => ({\n    ...obj,\n  });\n}\n\nexport interface CreateBucketRequest {\n  /**\n   * <p>The canned ACL to apply to the bucket.</p>\n   */\n  ACL?: BucketCannedACL | string;\n\n  /**\n   * <p>The name of the bucket to create.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The configuration information for the bucket.</p>\n   */\n  CreateBucketConfiguration?: CreateBucketConfiguration;\n\n  /**\n   * <p>Allows grantee the read, write, read ACP, and write ACP permissions on the\n   *          bucket.</p>\n   */\n  GrantFullControl?: string;\n\n  /**\n   * <p>Allows grantee to list the objects in the bucket.</p>\n   */\n  GrantRead?: string;\n\n  /**\n   * <p>Allows grantee to read the bucket ACL.</p>\n   */\n  GrantReadACP?: string;\n\n  /**\n   * <p>Allows grantee to create, overwrite, and delete any object in the bucket.</p>\n   */\n  GrantWrite?: string;\n\n  /**\n   * <p>Allows grantee to write the ACL for the applicable bucket.</p>\n   */\n  GrantWriteACP?: string;\n\n  /**\n   * <p>Specifies whether you want S3 Object Lock to be enabled for the new bucket.</p>\n   */\n  ObjectLockEnabledForBucket?: boolean;\n}\n\nexport namespace CreateBucketRequest {\n  export const filterSensitiveLog = (obj: CreateBucketRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface CreateMultipartUploadOutput {\n  /**\n   * <p>If the bucket has a lifecycle rule configured with an action to abort incomplete\n   *          multipart uploads and the prefix in the lifecycle rule matches the object name in the\n   *          request, the response includes this header. The header indicates when the initiated\n   *          multipart upload becomes eligible for an abort operation. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config\">\n   *             Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a>.</p>\n   *\n   *          <p>The response also includes the <code>x-amz-abort-rule-id</code> header that provides the\n   *          ID of the lifecycle configuration rule that defines this action.</p>\n   */\n  AbortDate?: Date;\n\n  /**\n   * <p>This header is returned along with the <code>x-amz-abort-date</code> header. It\n   *          identifies the applicable lifecycle configuration rule that defines the action to abort\n   *          incomplete multipart uploads.</p>\n   */\n  AbortRuleId?: string;\n\n  /**\n   * <p>The name of the bucket to which the multipart upload was initiated. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket?: string;\n\n  /**\n   * <p>Object key for which the multipart upload was initiated.</p>\n   */\n  Key?: string;\n\n  /**\n   * <p>ID for the initiated multipart upload.</p>\n   */\n  UploadId?: string;\n\n  /**\n   * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,\n   *          AES256, aws:kms).</p>\n   */\n  ServerSideEncryption?: ServerSideEncryption | string;\n\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header confirming the encryption algorithm used.</p>\n   */\n  SSECustomerAlgorithm?: string;\n\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header to provide round-trip message integrity verification of\n   *          the customer-provided encryption key.</p>\n   */\n  SSECustomerKeyMD5?: string;\n\n  /**\n   * <p>If present, specifies the ID of the AWS Key Management Service (AWS KMS) symmetric\n   *          customer managed customer master key (CMK) that was used for the object.</p>\n   */\n  SSEKMSKeyId?: string;\n\n  /**\n   * <p>If present, specifies the AWS KMS Encryption Context to use for object encryption. The\n   *          value of this header is a base64-encoded UTF-8 string holding JSON with the encryption\n   *          context key-value pairs.</p>\n   */\n  SSEKMSEncryptionContext?: string;\n\n  /**\n   * <p>Indicates whether the multipart upload uses an S3 Bucket Key for server-side encryption with AWS KMS (SSE-KMS).</p>\n   */\n  BucketKeyEnabled?: boolean;\n\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace CreateMultipartUploadOutput {\n  export const filterSensitiveLog = (obj: CreateMultipartUploadOutput): any => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n  });\n}\n\nexport interface CreateMultipartUploadRequest {\n  /**\n   * <p>The canned ACL to apply to the object.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  ACL?: ObjectCannedACL | string;\n\n  /**\n   * <p>The name of the bucket to which to initiate the upload</p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Specifies caching behavior along the request/reply chain.</p>\n   */\n  CacheControl?: string;\n\n  /**\n   * <p>Specifies presentational information for the object.</p>\n   */\n  ContentDisposition?: string;\n\n  /**\n   * <p>Specifies what content encodings have been applied to the object and thus what decoding\n   *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header\n   *          field.</p>\n   */\n  ContentEncoding?: string;\n\n  /**\n   * <p>The language the content is in.</p>\n   */\n  ContentLanguage?: string;\n\n  /**\n   * <p>A standard MIME type describing the format of the object data.</p>\n   */\n  ContentType?: string;\n\n  /**\n   * <p>The date and time at which the object is no longer cacheable.</p>\n   */\n  Expires?: Date;\n\n  /**\n   * <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the\n   *       object.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantFullControl?: string;\n\n  /**\n   * <p>Allows grantee to read the object data and its\n   *       metadata.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantRead?: string;\n\n  /**\n   * <p>Allows grantee to read the object ACL.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantReadACP?: string;\n\n  /**\n   * <p>Allows grantee to write the ACL for the applicable\n   *       object.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantWriteACP?: string;\n\n  /**\n   * <p>Object key for which the multipart upload is to be initiated.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>A map of metadata to store with the object in S3.</p>\n   */\n  Metadata?: { [key: string]: string };\n\n  /**\n   * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,\n   *          AES256, aws:kms).</p>\n   */\n  ServerSideEncryption?: ServerSideEncryption | string;\n\n  /**\n   * <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The\n   *          STANDARD storage class provides high durability and high availability. Depending on\n   *          performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses\n   *          the OUTPOSTS Storage Class. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage Classes</a> in the <i>Amazon S3\n   *             Service Developer Guide</i>.</p>\n   */\n  StorageClass?: StorageClass | string;\n\n  /**\n   * <p>If the bucket is configured as a website, redirects requests for this object to another\n   *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in\n   *          the object metadata.</p>\n   */\n  WebsiteRedirectLocation?: string;\n\n  /**\n   * <p>Specifies the algorithm to use to when encrypting the object (for example,\n   *          AES256).</p>\n   */\n  SSECustomerAlgorithm?: string;\n\n  /**\n   * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This\n   *          value is used to store the object and then it is discarded; Amazon S3 does not store the\n   *          encryption key. The key must be appropriate for use with the algorithm specified in the\n   *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>\n   */\n  SSECustomerKey?: string;\n\n  /**\n   * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses\n   *          this header for a message integrity check to ensure that the encryption key was transmitted\n   *          without error.</p>\n   */\n  SSECustomerKeyMD5?: string;\n\n  /**\n   * <p>Specifies the ID of the symmetric customer managed AWS KMS CMK to use for object\n   *          encryption. All GET and PUT requests for an object protected by AWS KMS will fail if not\n   *          made via SSL or using SigV4. For information about configuring using any of the officially\n   *          supported AWS SDKs and AWS CLI, see <a href=\"https://docs.aws.amazon.com/http:/docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version\">Specifying the Signature Version in Request Authentication</a>\n   *          in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  SSEKMSKeyId?: string;\n\n  /**\n   * <p>Specifies the AWS KMS Encryption Context to use for object encryption. The value of this\n   *          header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value\n   *          pairs.</p>\n   */\n  SSEKMSEncryptionContext?: string;\n\n  /**\n   * <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p>\n   *          <p>Specifying this header with an object operation doesn’t affect bucket-level settings for S3 Bucket Key.</p>\n   */\n  BucketKeyEnabled?: boolean;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The tag-set for the object. The tag-set must be encoded as URL Query parameters.</p>\n   */\n  Tagging?: string;\n\n  /**\n   * <p>Specifies the Object Lock mode that you want to apply to the uploaded object.</p>\n   */\n  ObjectLockMode?: ObjectLockMode | string;\n\n  /**\n   * <p>Specifies the date and time when you want the Object Lock to expire.</p>\n   */\n  ObjectLockRetainUntilDate?: Date;\n\n  /**\n   * <p>Specifies whether you want to apply a Legal Hold to the uploaded object.</p>\n   */\n  ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace CreateMultipartUploadRequest {\n  export const filterSensitiveLog = (obj: CreateMultipartUploadRequest): any => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n  });\n}\n\nexport interface DeleteBucketRequest {\n  /**\n   * <p>Specifies the bucket being deleted.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketAnalyticsConfigurationRequest {\n  /**\n   * <p>The name of the bucket from which an analytics configuration is deleted.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID that identifies the analytics configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketAnalyticsConfigurationRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketAnalyticsConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketCorsRequest {\n  /**\n   * <p>Specifies the bucket whose <code>cors</code> configuration is being deleted.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketCorsRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketCorsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketEncryptionRequest {\n  /**\n   * <p>The name of the bucket containing the server-side encryption configuration to\n   *          delete.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketEncryptionRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketEncryptionRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketIntelligentTieringConfigurationRequest {\n  /**\n   * <p>The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID used to identify the S3 Intelligent-Tiering configuration.</p>\n   */\n  Id: string | undefined;\n}\n\nexport namespace DeleteBucketIntelligentTieringConfigurationRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketIntelligentTieringConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketInventoryConfigurationRequest {\n  /**\n   * <p>The name of the bucket containing the inventory configuration to delete.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID used to identify the inventory configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketInventoryConfigurationRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketInventoryConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketLifecycleRequest {\n  /**\n   * <p>The bucket name of the lifecycle to delete.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketLifecycleRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketLifecycleRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketMetricsConfigurationRequest {\n  /**\n   * <p>The name of the bucket containing the metrics configuration to delete.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID used to identify the metrics configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketMetricsConfigurationRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketMetricsConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketOwnershipControlsRequest {\n  /**\n   * <p>The Amazon S3 bucket whose <code>OwnershipControls</code> you want to delete. </p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketOwnershipControlsRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketOwnershipControlsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketPolicyRequest {\n  /**\n   * <p>The bucket name.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketPolicyRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketPolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketReplicationRequest {\n  /**\n   * <p> The bucket name. </p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketReplicationRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketReplicationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketTaggingRequest {\n  /**\n   * <p>The bucket that has the tag set to be removed.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketTaggingRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketTaggingRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteBucketWebsiteRequest {\n  /**\n   * <p>The bucket name for which you want to remove the website configuration. </p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteBucketWebsiteRequest {\n  export const filterSensitiveLog = (obj: DeleteBucketWebsiteRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteObjectOutput {\n  /**\n   * <p>Specifies whether the versioned object that was permanently deleted was (true) or was\n   *          not (false) a delete marker.</p>\n   */\n  DeleteMarker?: boolean;\n\n  /**\n   * <p>Returns the version ID of the delete marker created as a result of the DELETE\n   *          operation.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace DeleteObjectOutput {\n  export const filterSensitiveLog = (obj: DeleteObjectOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteObjectRequest {\n  /**\n   * <p>The bucket name of the bucket containing the object. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Key name of the object to delete.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>The concatenation of the authentication device's serial number, a space, and the value\n   *          that is displayed on your authentication device. Required to permanently delete a versioned\n   *          object if versioning is configured with MFA delete enabled.</p>\n   */\n  MFA?: string;\n\n  /**\n   * <p>VersionId used to reference a specific version of the object.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>Indicates whether S3 Object Lock should bypass Governance-mode restrictions to process\n   *          this operation.</p>\n   */\n  BypassGovernanceRetention?: boolean;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteObjectRequest {\n  export const filterSensitiveLog = (obj: DeleteObjectRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Information about the deleted object.</p>\n */\nexport interface DeletedObject {\n  /**\n   * <p>The name of the deleted object.</p>\n   */\n  Key?: string;\n\n  /**\n   * <p>The version ID of the deleted object.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Specifies whether the versioned object that was permanently deleted was (true) or was\n   *          not (false) a delete marker. In a simple DELETE, this header indicates whether (true) or\n   *          not (false) a delete marker was created.</p>\n   */\n  DeleteMarker?: boolean;\n\n  /**\n   * <p>The version ID of the delete marker created as a result of the DELETE operation. If you\n   *          delete a specific object version, the value returned by this header is the version ID of\n   *          the object version deleted.</p>\n   */\n  DeleteMarkerVersionId?: string;\n}\n\nexport namespace DeletedObject {\n  export const filterSensitiveLog = (obj: DeletedObject): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Container for all error elements.</p>\n */\nexport interface _Error {\n  /**\n   * <p>The error key.</p>\n   */\n  Key?: string;\n\n  /**\n   * <p>The version ID of the error.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>The error code is a string that uniquely identifies an error condition. It is meant to\n   *          be read and understood by programs that detect and handle errors by type. </p>\n   *          <p class=\"title\">\n   *             <b>Amazon S3 error codes</b>\n   *          </p>\n   *          <ul>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> AccessDenied </p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Access Denied</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 403 Forbidden</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> AccountProblem</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> There is a problem with your AWS account\n   *                      that prevents the operation from completing successfully. Contact AWS Support\n   *                      for further assistance.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 403 Forbidden</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> AllAccessDisabled</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> All access to this Amazon S3 resource has been\n   *                      disabled. Contact AWS Support for further assistance.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 403 Forbidden</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> AmbiguousGrantByEmailAddress</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The email address you provided is\n   *                      associated with more than one account.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> AuthorizationHeaderMalformed</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The authorization header you provided is\n   *                      invalid.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> N/A</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> BadDigest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The Content-MD5 you specified did not\n   *                      match what we received.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> BucketAlreadyExists</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The requested bucket name is not\n   *                      available. The bucket namespace is shared by all users of the system. Please\n   *                      select a different name and try again.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 409 Conflict</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> BucketAlreadyOwnedByYou</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The bucket you tried to create already\n   *                      exists, and you own it. Amazon S3 returns this error in all AWS Regions except in\n   *                      the North Virginia Region. For legacy compatibility, if you re-create an\n   *                      existing bucket that you already own in the North Virginia Region, Amazon S3 returns\n   *                      200 OK and resets the bucket access control lists (ACLs).</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> 409 Conflict (in all Regions except the North\n   *                      Virginia Region) </p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> BucketNotEmpty</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The bucket you tried to delete is not\n   *                      empty.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 409 Conflict</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> CredentialsNotSupported</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> This request does not support\n   *                      credentials.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> CrossLocationLoggingProhibited</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Cross-location logging not allowed.\n   *                      Buckets in one geographic location cannot log information to a bucket in\n   *                      another location.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 403 Forbidden</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> EntityTooSmall</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Your proposed upload is smaller than the\n   *                      minimum allowed object size.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> EntityTooLarge</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Your proposed upload exceeds the maximum\n   *                      allowed object size.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> ExpiredToken</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The provided token has expired.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> IllegalVersioningConfigurationException </p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Indicates that the versioning\n   *                      configuration specified in the request is invalid.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> IncompleteBody</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> You did not provide the number of bytes\n   *                      specified by the Content-Length HTTP header</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> IncorrectNumberOfFilesInPostRequest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> POST requires exactly one file upload per\n   *                      request.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InlineDataTooLarge</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Inline data exceeds the maximum allowed\n   *                      size.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InternalError</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> We encountered an internal error. Please\n   *                      try again.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 500 Internal Server Error</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Server</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidAccessKeyId</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The AWS access key ID you provided does\n   *                      not exist in our records.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 403 Forbidden</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidAddressingHeader</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> You must specify the Anonymous\n   *                      role.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> N/A</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidArgument</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Invalid Argument</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidBucketName</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The specified bucket is not valid.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidBucketState</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The request is not valid with the current\n   *                      state of the bucket.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 409 Conflict</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidDigest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The Content-MD5 you specified is not\n   *                      valid.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidEncryptionAlgorithmError</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The encryption request you specified is\n   *                      not valid. The valid value is AES256.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidLocationConstraint</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The specified location constraint is not\n   *                      valid. For more information about Regions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro\">How to Select a\n   *                         Region for Your Buckets</a>. </p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidObjectState</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The operation is not valid for the current\n   *                      state of the object.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 403 Forbidden</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidPart</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> One or more of the specified parts could\n   *                      not be found. The part might not have been uploaded, or the specified entity\n   *                      tag might not have matched the part's entity tag.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidPartOrder</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The list of parts was not in ascending\n   *                      order. Parts list must be specified in order by part number.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidPayer</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> All access to this object has been\n   *                      disabled. Please contact AWS Support for further assistance.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 403 Forbidden</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidPolicyDocument</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The content of the form does not meet the\n   *                      conditions specified in the policy document.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidRange</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The requested range cannot be\n   *                      satisfied.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 416 Requested Range Not\n   *                      Satisfiable</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidRequest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Please use AWS4-HMAC-SHA256.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> N/A</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidRequest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> SOAP requests must be made over an HTTPS\n   *                      connection.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidRequest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Amazon S3 Transfer Acceleration is not\n   *                      supported for buckets with non-DNS compliant names.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> N/A</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidRequest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Amazon S3 Transfer Acceleration is not\n   *                      supported for buckets with periods (.) in their names.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> N/A</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidRequest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Amazon S3 Transfer Accelerate endpoint only\n   *                      supports virtual style requests.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> N/A</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidRequest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Amazon S3 Transfer Accelerate is not configured\n   *                      on this bucket.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> N/A</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidRequest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Amazon S3 Transfer Accelerate is disabled on\n   *                      this bucket.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> N/A</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidRequest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Amazon S3 Transfer Acceleration is not\n   *                      supported on this bucket. Contact AWS Support for more information.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> N/A</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidRequest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Amazon S3 Transfer Acceleration cannot be\n   *                      enabled on this bucket. Contact AWS Support for more information.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> N/A</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidSecurity</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The provided security credentials are not\n   *                      valid.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 403 Forbidden</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidSOAPRequest</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The SOAP request body is invalid.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidStorageClass</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The storage class you specified is not\n   *                      valid.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidTargetBucketForLogging</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The target bucket for logging does not\n   *                      exist, is not owned by you, or does not have the appropriate grants for the\n   *                      log-delivery group. </p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidToken</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The provided token is malformed or\n   *                      otherwise invalid.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> InvalidURI</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Couldn't parse the specified URI.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> KeyTooLongError</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Your key is too long.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MalformedACLError</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The XML you provided was not well-formed\n   *                      or did not validate against our published schema.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MalformedPOSTRequest </p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The body of your POST request is not\n   *                      well-formed multipart/form-data.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MalformedXML</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> This happens when the user sends malformed\n   *                      XML (XML that doesn't conform to the published XSD) for the configuration. The\n   *                      error message is, \"The XML you provided was not well-formed or did not validate\n   *                      against our published schema.\" </p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MaxMessageLengthExceeded</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Your request was too big.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MaxPostPreDataLengthExceededError</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Your POST request fields preceding the\n   *                      upload file were too large.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MetadataTooLarge</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Your metadata headers exceed the maximum\n   *                      allowed metadata size.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MethodNotAllowed</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The specified method is not allowed\n   *                      against this resource.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 405 Method Not Allowed</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MissingAttachment</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> A SOAP attachment was expected, but none\n   *                      were found.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> N/A</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MissingContentLength</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> You must provide the Content-Length HTTP\n   *                      header.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 411 Length Required</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MissingRequestBodyError</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> This happens when the user sends an empty\n   *                      XML document as a request. The error message is, \"Request body is empty.\"\n   *                   </p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MissingSecurityElement</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The SOAP 1.1 request is missing a security\n   *                      element.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> MissingSecurityHeader</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Your request is missing a required\n   *                      header.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> NoLoggingStatusForKey</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> There is no such thing as a logging status\n   *                      subresource for a key.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> NoSuchBucket</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The specified bucket does not\n   *                      exist.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 404 Not Found</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> NoSuchBucketPolicy</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The specified bucket does not have a\n   *                      bucket policy.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 404 Not Found</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> NoSuchKey</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The specified key does not exist.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 404 Not Found</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> NoSuchLifecycleConfiguration</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The lifecycle configuration does not\n   *                      exist. </p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 404 Not Found</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> NoSuchUpload</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The specified multipart upload does not\n   *                      exist. The upload ID might be invalid, or the multipart upload might have been\n   *                      aborted or completed.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 404 Not Found</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> NoSuchVersion </p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Indicates that the version ID specified in\n   *                      the request does not match an existing version.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 404 Not Found</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> NotImplemented</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> A header you provided implies\n   *                      functionality that is not implemented.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 501 Not Implemented</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Server</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> NotSignedUp</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Your account is not signed up for the Amazon S3\n   *                      service. You must sign up before you can use Amazon S3. You can sign up at the\n   *                      following URL: https://aws.amazon.com/s3</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 403 Forbidden</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> OperationAborted</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> A conflicting conditional operation is\n   *                      currently in progress against this resource. Try again.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 409 Conflict</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> PermanentRedirect</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The bucket you are attempting to access\n   *                      must be addressed using the specified endpoint. Send all future requests to\n   *                      this endpoint.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 301 Moved Permanently</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> PreconditionFailed</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> At least one of the preconditions you\n   *                      specified did not hold.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 412 Precondition Failed</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> Redirect</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Temporary redirect.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 307 Moved Temporarily</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> RestoreAlreadyInProgress</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Object restore is already in\n   *                      progress.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 409 Conflict</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> RequestIsNotMultiPartContent</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Bucket POST must be of the enclosure-type\n   *                      multipart/form-data.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> RequestTimeout</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Your socket connection to the server was\n   *                      not read from or written to within the timeout period.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> RequestTimeTooSkewed</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The difference between the request time\n   *                      and the server's time is too large.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 403 Forbidden</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> RequestTorrentOfBucketError</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Requesting the torrent file of a bucket is\n   *                      not permitted.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> SignatureDoesNotMatch</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The request signature we calculated does\n   *                      not match the signature you provided. Check your AWS secret access key and\n   *                      signing method. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\">REST Authentication</a> and\n   *                         <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/SOAPAuthentication.html\">SOAP Authentication</a>\n   *                      for details.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 403 Forbidden</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> ServiceUnavailable</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Reduce your request rate.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 503 Service Unavailable</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Server</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> SlowDown</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> Reduce your request rate.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 503 Slow Down</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Server</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> TemporaryRedirect</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> You are being redirected to the bucket\n   *                      while DNS updates.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 307 Moved Temporarily</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> TokenRefreshRequired</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The provided token must be\n   *                      refreshed.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> TooManyBuckets</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> You have attempted to create more buckets\n   *                      than allowed.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> UnexpectedContent</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> This request does not support\n   *                      content.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> UnresolvableGrantByEmailAddress</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The email address you provided does not\n   *                      match any account on record.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *             <li>\n   *                <ul>\n   *                   <li>\n   *                      <p>\n   *                         <i>Code:</i> UserKeyMustBeSpecified</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>Description:</i> The bucket POST must contain the specified\n   *                      field name. If it is specified, check the order of the fields.</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>HTTP Status Code:</i> 400 Bad Request</p>\n   *                   </li>\n   *                   <li>\n   *                      <p>\n   *                         <i>SOAP Fault Code Prefix:</i> Client</p>\n   *                   </li>\n   *                </ul>\n   *             </li>\n   *          </ul>\n   *          <p></p>\n   */\n  Code?: string;\n\n  /**\n   * <p>The error message contains a generic description of the error condition in English. It\n   *          is intended for a human audience. Simple programs display the message directly to the end\n   *          user if they encounter an error condition they don't know how or don't care to handle.\n   *          Sophisticated programs with more exhaustive error handling and proper internationalization\n   *          are more likely to ignore the error message.</p>\n   */\n  Message?: string;\n}\n\nexport namespace _Error {\n  export const filterSensitiveLog = (obj: _Error): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteObjectsOutput {\n  /**\n   * <p>Container element for a successful delete. It identifies the object that was\n   *          successfully deleted.</p>\n   */\n  Deleted?: DeletedObject[];\n\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n\n  /**\n   * <p>Container for a failed delete operation that describes the object that Amazon S3 attempted to\n   *          delete and the error it encountered.</p>\n   */\n  Errors?: _Error[];\n}\n\nexport namespace DeleteObjectsOutput {\n  export const filterSensitiveLog = (obj: DeleteObjectsOutput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Object Identifier is unique value to identify objects.</p>\n */\nexport interface ObjectIdentifier {\n  /**\n   * <p>Key name of the object to delete.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>VersionId for the specific version of the object to delete.</p>\n   */\n  VersionId?: string;\n}\n\nexport namespace ObjectIdentifier {\n  export const filterSensitiveLog = (obj: ObjectIdentifier): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Container for the objects to delete.</p>\n */\nexport interface Delete {\n  /**\n   * <p>The objects to delete.</p>\n   */\n  Objects: ObjectIdentifier[] | undefined;\n\n  /**\n   * <p>Element to enable quiet mode for the request. When you add this element, you must set\n   *          its value to true.</p>\n   */\n  Quiet?: boolean;\n}\n\nexport namespace Delete {\n  export const filterSensitiveLog = (obj: Delete): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteObjectsRequest {\n  /**\n   * <p>The bucket name containing the objects to delete. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Container for the request.</p>\n   */\n  Delete: Delete | undefined;\n\n  /**\n   * <p>The concatenation of the authentication device's serial number, a space, and the value\n   *          that is displayed on your authentication device. Required to permanently delete a versioned\n   *          object if versioning is configured with MFA delete enabled.</p>\n   */\n  MFA?: string;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>Specifies whether you want to delete this object even if it has a Governance-type Object\n   *          Lock in place. You must have sufficient permissions to perform this operation.</p>\n   */\n  BypassGovernanceRetention?: boolean;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteObjectsRequest {\n  export const filterSensitiveLog = (obj: DeleteObjectsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteObjectTaggingOutput {\n  /**\n   * <p>The versionId of the object the tag-set was removed from.</p>\n   */\n  VersionId?: string;\n}\n\nexport namespace DeleteObjectTaggingOutput {\n  export const filterSensitiveLog = (obj: DeleteObjectTaggingOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeleteObjectTaggingRequest {\n  /**\n   * <p>The bucket name containing the objects from which to remove the tags. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Name of the object key.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>The versionId of the object that the tag-set will be removed from.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeleteObjectTaggingRequest {\n  export const filterSensitiveLog = (obj: DeleteObjectTaggingRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface DeletePublicAccessBlockRequest {\n  /**\n   * <p>The Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want to delete.\n   *       </p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace DeletePublicAccessBlockRequest {\n  export const filterSensitiveLog = (obj: DeletePublicAccessBlockRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketAccelerateConfigurationOutput {\n  /**\n   * <p>The accelerate configuration of the bucket.</p>\n   */\n  Status?: BucketAccelerateStatus | string;\n}\n\nexport namespace GetBucketAccelerateConfigurationOutput {\n  export const filterSensitiveLog = (obj: GetBucketAccelerateConfigurationOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketAccelerateConfigurationRequest {\n  /**\n   * <p>The name of the bucket for which the accelerate configuration is retrieved.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketAccelerateConfigurationRequest {\n  export const filterSensitiveLog = (obj: GetBucketAccelerateConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketAclOutput {\n  /**\n   * <p>Container for the bucket owner's display name and ID.</p>\n   */\n  Owner?: Owner;\n\n  /**\n   * <p>A list of grants.</p>\n   */\n  Grants?: Grant[];\n}\n\nexport namespace GetBucketAclOutput {\n  export const filterSensitiveLog = (obj: GetBucketAclOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketAclRequest {\n  /**\n   * <p>Specifies the S3 bucket whose ACL is being requested.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketAclRequest {\n  export const filterSensitiveLog = (obj: GetBucketAclRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container of a key value name pair.</p>\n */\nexport interface Tag {\n  /**\n   * <p>Name of the object key.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>Value of the tag.</p>\n   */\n  Value: string | undefined;\n}\n\nexport namespace Tag {\n  export const filterSensitiveLog = (obj: Tag): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter.\n *          The operator must have at least two predicates in any combination, and an object must match\n *          all of the predicates for the filter to apply.</p>\n */\nexport interface AnalyticsAndOperator {\n  /**\n   * <p>The prefix to use when evaluating an AND predicate: The prefix that an object must have\n   *          to be included in the metrics results.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>The list of tags to use when evaluating an AND predicate.</p>\n   */\n  Tags?: Tag[];\n}\n\nexport namespace AnalyticsAndOperator {\n  export const filterSensitiveLog = (obj: AnalyticsAndOperator): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The filter used to describe a set of objects for analyses. A filter must have exactly\n *          one prefix, one tag, or one conjunction (AnalyticsAndOperator). If no filter is provided,\n *          all objects will be considered in any analysis.</p>\n */\nexport type AnalyticsFilter =\n  | AnalyticsFilter.AndMember\n  | AnalyticsFilter.PrefixMember\n  | AnalyticsFilter.TagMember\n  | AnalyticsFilter.$UnknownMember;\n\nexport namespace AnalyticsFilter {\n  /**\n   * <p>The prefix to use when evaluating an analytics filter.</p>\n   */\n  export interface PrefixMember {\n    Prefix: string;\n    Tag?: never;\n    And?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>The tag to use when evaluating an analytics filter.</p>\n   */\n  export interface TagMember {\n    Prefix?: never;\n    Tag: Tag;\n    And?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>A conjunction (logical AND) of predicates, which is used in evaluating an analytics\n   *          filter. The operator must have at least two predicates.</p>\n   */\n  export interface AndMember {\n    Prefix?: never;\n    Tag?: never;\n    And: AnalyticsAndOperator;\n    $unknown?: never;\n  }\n\n  export interface $UnknownMember {\n    Prefix?: never;\n    Tag?: never;\n    And?: never;\n    $unknown: [string, any];\n  }\n\n  export interface Visitor<T> {\n    Prefix: (value: string) => T;\n    Tag: (value: Tag) => T;\n    And: (value: AnalyticsAndOperator) => T;\n    _: (name: string, value: any) => T;\n  }\n\n  export const visit = <T>(value: AnalyticsFilter, visitor: Visitor<T>): T => {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  export const filterSensitiveLog = (obj: AnalyticsFilter): any => {\n    if (obj.Prefix !== undefined) return { Prefix: obj.Prefix };\n    if (obj.Tag !== undefined) return { Tag: Tag.filterSensitiveLog(obj.Tag) };\n    if (obj.And !== undefined) return { And: AnalyticsAndOperator.filterSensitiveLog(obj.And) };\n    if (obj.$unknown !== undefined) return { [obj.$unknown[0]]: \"UNKNOWN\" };\n  };\n}\n\nexport type AnalyticsS3ExportFileFormat = \"CSV\";\n\n/**\n * <p>Contains information about where to publish the analytics results.</p>\n */\nexport interface AnalyticsS3BucketDestination {\n  /**\n   * <p>Specifies the file format used when exporting data to Amazon S3.</p>\n   */\n  Format: AnalyticsS3ExportFileFormat | string | undefined;\n\n  /**\n   * <p>The account ID that owns the destination S3 bucket. If no account ID is provided, the\n   *          owner is not validated before exporting data.</p>\n   *          <note>\n   *             <p> Although this value is optional, we strongly recommend that you set it to help\n   *             prevent problems if the destination bucket ownership changes. </p>\n   *          </note>\n   */\n  BucketAccountId?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the bucket to which data is exported.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The prefix to use when exporting data. The prefix is prepended to all results.</p>\n   */\n  Prefix?: string;\n}\n\nexport namespace AnalyticsS3BucketDestination {\n  export const filterSensitiveLog = (obj: AnalyticsS3BucketDestination): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Where to publish the analytics results.</p>\n */\nexport interface AnalyticsExportDestination {\n  /**\n   * <p>A destination signifying output to an S3 bucket.</p>\n   */\n  S3BucketDestination: AnalyticsS3BucketDestination | undefined;\n}\n\nexport namespace AnalyticsExportDestination {\n  export const filterSensitiveLog = (obj: AnalyticsExportDestination): any => ({\n    ...obj,\n  });\n}\n\nexport type StorageClassAnalysisSchemaVersion = \"V_1\";\n\n/**\n * <p>Container for data related to the storage class analysis for an Amazon S3 bucket for\n *          export.</p>\n */\nexport interface StorageClassAnalysisDataExport {\n  /**\n   * <p>The version of the output schema to use when exporting data. Must be\n   *          <code>V_1</code>.</p>\n   */\n  OutputSchemaVersion: StorageClassAnalysisSchemaVersion | string | undefined;\n\n  /**\n   * <p>The place to store the data for an analysis.</p>\n   */\n  Destination: AnalyticsExportDestination | undefined;\n}\n\nexport namespace StorageClassAnalysisDataExport {\n  export const filterSensitiveLog = (obj: StorageClassAnalysisDataExport): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies data related to access patterns to be collected and made available to analyze\n *          the tradeoffs between different storage classes for an Amazon S3 bucket.</p>\n */\nexport interface StorageClassAnalysis {\n  /**\n   * <p>Specifies how data related to the storage class analysis for an Amazon S3 bucket should be\n   *          exported.</p>\n   */\n  DataExport?: StorageClassAnalysisDataExport;\n}\n\nexport namespace StorageClassAnalysis {\n  export const filterSensitiveLog = (obj: StorageClassAnalysis): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p> Specifies the configuration and any analyses for the analytics filter of an Amazon S3\n *          bucket.</p>\n */\nexport interface AnalyticsConfiguration {\n  /**\n   * <p>The ID that identifies the analytics configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>The filter used to describe a set of objects for analyses. A filter must have exactly\n   *          one prefix, one tag, or one conjunction (AnalyticsAndOperator). If no filter is provided,\n   *          all objects will be considered in any analysis.</p>\n   */\n  Filter?: AnalyticsFilter;\n\n  /**\n   * <p> Contains data related to access patterns to be collected and made available to analyze\n   *          the tradeoffs between different storage classes. </p>\n   */\n  StorageClassAnalysis: StorageClassAnalysis | undefined;\n}\n\nexport namespace AnalyticsConfiguration {\n  export const filterSensitiveLog = (obj: AnalyticsConfiguration): any => ({\n    ...obj,\n    ...(obj.Filter && { Filter: AnalyticsFilter.filterSensitiveLog(obj.Filter) }),\n  });\n}\n\nexport interface GetBucketAnalyticsConfigurationOutput {\n  /**\n   * <p>The configuration and any analyses for the analytics filter.</p>\n   */\n  AnalyticsConfiguration?: AnalyticsConfiguration;\n}\n\nexport namespace GetBucketAnalyticsConfigurationOutput {\n  export const filterSensitiveLog = (obj: GetBucketAnalyticsConfigurationOutput): any => ({\n    ...obj,\n    ...(obj.AnalyticsConfiguration && {\n      AnalyticsConfiguration: AnalyticsConfiguration.filterSensitiveLog(obj.AnalyticsConfiguration),\n    }),\n  });\n}\n\nexport interface GetBucketAnalyticsConfigurationRequest {\n  /**\n   * <p>The name of the bucket from which an analytics configuration is retrieved.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID that identifies the analytics configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketAnalyticsConfigurationRequest {\n  export const filterSensitiveLog = (obj: GetBucketAnalyticsConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies a cross-origin access rule for an Amazon S3 bucket.</p>\n */\nexport interface CORSRule {\n  /**\n   * <p>Headers that are specified in the <code>Access-Control-Request-Headers</code> header.\n   *          These headers are allowed in a preflight OPTIONS request. In response to any preflight\n   *          OPTIONS request, Amazon S3 returns any requested headers that are allowed.</p>\n   */\n  AllowedHeaders?: string[];\n\n  /**\n   * <p>An HTTP method that you allow the origin to execute. Valid values are <code>GET</code>,\n   *             <code>PUT</code>, <code>HEAD</code>, <code>POST</code>, and <code>DELETE</code>.</p>\n   */\n  AllowedMethods: string[] | undefined;\n\n  /**\n   * <p>One or more origins you want customers to be able to access the bucket from.</p>\n   */\n  AllowedOrigins: string[] | undefined;\n\n  /**\n   * <p>One or more headers in the response that you want customers to be able to access from\n   *          their applications (for example, from a JavaScript <code>XMLHttpRequest</code>\n   *          object).</p>\n   */\n  ExposeHeaders?: string[];\n\n  /**\n   * <p>The time in seconds that your browser is to cache the preflight response for the\n   *          specified resource.</p>\n   */\n  MaxAgeSeconds?: number;\n}\n\nexport namespace CORSRule {\n  export const filterSensitiveLog = (obj: CORSRule): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketCorsOutput {\n  /**\n   * <p>A set of origins and methods (cross-origin access that you want to allow). You can add\n   *          up to 100 rules to the configuration.</p>\n   */\n  CORSRules?: CORSRule[];\n}\n\nexport namespace GetBucketCorsOutput {\n  export const filterSensitiveLog = (obj: GetBucketCorsOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketCorsRequest {\n  /**\n   * <p>The bucket name for which to get the cors configuration.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketCorsRequest {\n  export const filterSensitiveLog = (obj: GetBucketCorsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Describes the default server-side encryption to apply to new objects in the bucket. If a\n *          PUT Object request doesn't specify any server-side encryption, this default encryption will\n *          be applied. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html\">PUT Bucket encryption</a> in\n *          the <i>Amazon Simple Storage Service API Reference</i>.</p>\n */\nexport interface ServerSideEncryptionByDefault {\n  /**\n   * <p>Server-side encryption algorithm to use for the default encryption.</p>\n   */\n  SSEAlgorithm: ServerSideEncryption | string | undefined;\n\n  /**\n   * <p>AWS Key Management Service (KMS) customer master key ID to use for the default\n   *          encryption. This parameter is allowed if and only if <code>SSEAlgorithm</code> is set to\n   *             <code>aws:kms</code>.</p>\n   *          <p>You can specify the key ID or the Amazon Resource Name (ARN) of the CMK. However, if you\n   *          are using encryption with cross-account operations, you must use a fully qualified CMK ARN.\n   *          For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy\">Using encryption for cross-account operations</a>. </p>\n   *          <p>\n   *             <b>For example:</b>\n   *          </p>\n   *          <ul>\n   *             <li>\n   *                <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Key ARN:\n   *                   <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   *          <important>\n   *             <p>Amazon S3 only supports symmetric CMKs and not asymmetric CMKs. For more information, see\n   *                <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using Symmetric and\n   *                Asymmetric Keys</a> in the <i>AWS Key Management Service Developer\n   *                Guide</i>.</p>\n   *          </important>\n   */\n  KMSMasterKeyID?: string;\n}\n\nexport namespace ServerSideEncryptionByDefault {\n  export const filterSensitiveLog = (obj: ServerSideEncryptionByDefault): any => ({\n    ...obj,\n    ...(obj.KMSMasterKeyID && { KMSMasterKeyID: SENSITIVE_STRING }),\n  });\n}\n\n/**\n * <p>Specifies the default server-side encryption configuration.</p>\n */\nexport interface ServerSideEncryptionRule {\n  /**\n   * <p>Specifies the default server-side encryption to apply to new objects in the bucket. If a\n   *          PUT Object request doesn't specify any server-side encryption, this default encryption will\n   *          be applied.</p>\n   */\n  ApplyServerSideEncryptionByDefault?: ServerSideEncryptionByDefault;\n\n  /**\n   * <p>Specifies whether Amazon S3 should use an S3 Bucket Key with server-side encryption using KMS (SSE-KMS) for new objects in the bucket. Existing objects are not affected. Setting the <code>BucketKeyEnabled</code> element to <code>true</code> causes Amazon S3 to use an S3 Bucket Key. By default, S3 Bucket Key is not enabled.</p>\n   *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html\">Amazon S3 Bucket Keys</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  BucketKeyEnabled?: boolean;\n}\n\nexport namespace ServerSideEncryptionRule {\n  export const filterSensitiveLog = (obj: ServerSideEncryptionRule): any => ({\n    ...obj,\n    ...(obj.ApplyServerSideEncryptionByDefault && {\n      ApplyServerSideEncryptionByDefault: ServerSideEncryptionByDefault.filterSensitiveLog(\n        obj.ApplyServerSideEncryptionByDefault\n      ),\n    }),\n  });\n}\n\n/**\n * <p>Specifies the default server-side-encryption configuration.</p>\n */\nexport interface ServerSideEncryptionConfiguration {\n  /**\n   * <p>Container for information about a particular server-side encryption configuration\n   *          rule.</p>\n   */\n  Rules: ServerSideEncryptionRule[] | undefined;\n}\n\nexport namespace ServerSideEncryptionConfiguration {\n  export const filterSensitiveLog = (obj: ServerSideEncryptionConfiguration): any => ({\n    ...obj,\n    ...(obj.Rules && { Rules: obj.Rules.map((item) => ServerSideEncryptionRule.filterSensitiveLog(item)) }),\n  });\n}\n\nexport interface GetBucketEncryptionOutput {\n  /**\n   * <p>Specifies the default server-side-encryption configuration.</p>\n   */\n  ServerSideEncryptionConfiguration?: ServerSideEncryptionConfiguration;\n}\n\nexport namespace GetBucketEncryptionOutput {\n  export const filterSensitiveLog = (obj: GetBucketEncryptionOutput): any => ({\n    ...obj,\n    ...(obj.ServerSideEncryptionConfiguration && {\n      ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration.filterSensitiveLog(\n        obj.ServerSideEncryptionConfiguration\n      ),\n    }),\n  });\n}\n\nexport interface GetBucketEncryptionRequest {\n  /**\n   * <p>The name of the bucket from which the server-side encryption configuration is\n   *          retrieved.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketEncryptionRequest {\n  export const filterSensitiveLog = (obj: GetBucketEncryptionRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container for specifying S3 Intelligent-Tiering filters. The filters determine the\n *          subset of objects to which the rule applies.</p>\n */\nexport interface IntelligentTieringAndOperator {\n  /**\n   * <p>An object key name prefix that identifies the subset of objects to which the\n   *          configuration applies.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>All of these tags must exist in the object's tag set in order for the configuration to\n   *          apply.</p>\n   */\n  Tags?: Tag[];\n}\n\nexport namespace IntelligentTieringAndOperator {\n  export const filterSensitiveLog = (obj: IntelligentTieringAndOperator): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The <code>Filter</code> is used to identify objects that the S3 Intelligent-Tiering\n *          configuration applies to.</p>\n */\nexport interface IntelligentTieringFilter {\n  /**\n   * <p>An object key name prefix that identifies the subset of objects to which the rule\n   *          applies.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>A container of a key value name pair.</p>\n   */\n  Tag?: Tag;\n\n  /**\n   * <p>A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter.\n   *          The operator must have at least two predicates, and an object must match all of the\n   *          predicates in order for the filter to apply.</p>\n   */\n  And?: IntelligentTieringAndOperator;\n}\n\nexport namespace IntelligentTieringFilter {\n  export const filterSensitiveLog = (obj: IntelligentTieringFilter): any => ({\n    ...obj,\n  });\n}\n\nexport type IntelligentTieringStatus = \"Disabled\" | \"Enabled\";\n\nexport type IntelligentTieringAccessTier = \"ARCHIVE_ACCESS\" | \"DEEP_ARCHIVE_ACCESS\";\n\n/**\n * <p>The S3 Intelligent-Tiering storage class is designed to optimize storage costs by\n *          automatically moving data to the most cost-effective storage access tier, without\n *          additional operational overhead.</p>\n */\nexport interface Tiering {\n  /**\n   * <p>The number of consecutive days of no access after which an object will be eligible to be\n   *          transitioned to the corresponding tier. The minimum number of days specified for\n   *          Archive Access tier must be at least 90 days and Deep Archive Access tier must be at least\n   *          180 days. The maximum can be up to 2 years (730 days).</p>\n   */\n  Days: number | undefined;\n\n  /**\n   * <p>S3 Intelligent-Tiering access tier. See <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access\">Storage class for\n   *             automatically optimizing frequently and infrequently accessed objects</a> for a list\n   *          of access tiers in the S3 Intelligent-Tiering storage class.</p>\n   */\n  AccessTier: IntelligentTieringAccessTier | string | undefined;\n}\n\nexport namespace Tiering {\n  export const filterSensitiveLog = (obj: Tiering): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.</p>\n *          <p>For information about the S3 Intelligent-Tiering storage class, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access\">Storage class for\n *             automatically optimizing frequently and infrequently accessed objects</a>.</p>\n */\nexport interface IntelligentTieringConfiguration {\n  /**\n   * <p>The ID used to identify the S3 Intelligent-Tiering configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>Specifies a bucket filter. The configuration only includes objects that meet the\n   *          filter's criteria.</p>\n   */\n  Filter?: IntelligentTieringFilter;\n\n  /**\n   * <p>Specifies the status of the configuration.</p>\n   */\n  Status: IntelligentTieringStatus | string | undefined;\n\n  /**\n   * <p>Specifies the S3 Intelligent-Tiering storage class tier of the configuration.</p>\n   */\n  Tierings: Tiering[] | undefined;\n}\n\nexport namespace IntelligentTieringConfiguration {\n  export const filterSensitiveLog = (obj: IntelligentTieringConfiguration): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketIntelligentTieringConfigurationOutput {\n  /**\n   * <p>Container for S3 Intelligent-Tiering configuration.</p>\n   */\n  IntelligentTieringConfiguration?: IntelligentTieringConfiguration;\n}\n\nexport namespace GetBucketIntelligentTieringConfigurationOutput {\n  export const filterSensitiveLog = (obj: GetBucketIntelligentTieringConfigurationOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketIntelligentTieringConfigurationRequest {\n  /**\n   * <p>The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID used to identify the S3 Intelligent-Tiering configuration.</p>\n   */\n  Id: string | undefined;\n}\n\nexport namespace GetBucketIntelligentTieringConfigurationRequest {\n  export const filterSensitiveLog = (obj: GetBucketIntelligentTieringConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the use of SSE-KMS to encrypt delivered inventory reports.</p>\n */\nexport interface SSEKMS {\n  /**\n   * <p>Specifies the ID of the AWS Key Management Service (AWS KMS) symmetric customer managed\n   *          customer master key (CMK) to use for encrypting inventory reports.</p>\n   */\n  KeyId: string | undefined;\n}\n\nexport namespace SSEKMS {\n  export const filterSensitiveLog = (obj: SSEKMS): any => ({\n    ...obj,\n    ...(obj.KeyId && { KeyId: SENSITIVE_STRING }),\n  });\n}\n\n/**\n * <p>Specifies the use of SSE-S3 to encrypt delivered inventory reports.</p>\n */\nexport interface SSES3 {}\n\nexport namespace SSES3 {\n  export const filterSensitiveLog = (obj: SSES3): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Contains the type of server-side encryption used to encrypt the inventory\n *          results.</p>\n */\nexport interface InventoryEncryption {\n  /**\n   * <p>Specifies the use of SSE-S3 to encrypt delivered inventory reports.</p>\n   */\n  SSES3?: SSES3;\n\n  /**\n   * <p>Specifies the use of SSE-KMS to encrypt delivered inventory reports.</p>\n   */\n  SSEKMS?: SSEKMS;\n}\n\nexport namespace InventoryEncryption {\n  export const filterSensitiveLog = (obj: InventoryEncryption): any => ({\n    ...obj,\n    ...(obj.SSEKMS && { SSEKMS: SSEKMS.filterSensitiveLog(obj.SSEKMS) }),\n  });\n}\n\nexport type InventoryFormat = \"CSV\" | \"ORC\" | \"Parquet\";\n\n/**\n * <p>Contains the bucket name, file format, bucket owner (optional), and prefix (optional)\n *          where inventory results are published.</p>\n */\nexport interface InventoryS3BucketDestination {\n  /**\n   * <p>The account ID that owns the destination S3 bucket. If no account ID is provided, the\n   *          owner is not validated before exporting data. </p>\n   *          <note>\n   *             <p> Although this value is optional, we strongly recommend that you set it to help\n   *             prevent problems if the destination bucket ownership changes. </p>\n   *          </note>\n   */\n  AccountId?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the bucket where inventory results will be\n   *          published.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Specifies the output format of the inventory results.</p>\n   */\n  Format: InventoryFormat | string | undefined;\n\n  /**\n   * <p>The prefix that is prepended to all inventory results.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>Contains the type of server-side encryption used to encrypt the inventory\n   *          results.</p>\n   */\n  Encryption?: InventoryEncryption;\n}\n\nexport namespace InventoryS3BucketDestination {\n  export const filterSensitiveLog = (obj: InventoryS3BucketDestination): any => ({\n    ...obj,\n    ...(obj.Encryption && { Encryption: InventoryEncryption.filterSensitiveLog(obj.Encryption) }),\n  });\n}\n\n/**\n * <p>Specifies the inventory configuration for an Amazon S3 bucket.</p>\n */\nexport interface InventoryDestination {\n  /**\n   * <p>Contains the bucket name, file format, bucket owner (optional), and prefix (optional)\n   *          where inventory results are published.</p>\n   */\n  S3BucketDestination: InventoryS3BucketDestination | undefined;\n}\n\nexport namespace InventoryDestination {\n  export const filterSensitiveLog = (obj: InventoryDestination): any => ({\n    ...obj,\n    ...(obj.S3BucketDestination && {\n      S3BucketDestination: InventoryS3BucketDestination.filterSensitiveLog(obj.S3BucketDestination),\n    }),\n  });\n}\n\n/**\n * <p>Specifies an inventory filter. The inventory only includes objects that meet the\n *          filter's criteria.</p>\n */\nexport interface InventoryFilter {\n  /**\n   * <p>The prefix that an object must have to be included in the inventory results.</p>\n   */\n  Prefix: string | undefined;\n}\n\nexport namespace InventoryFilter {\n  export const filterSensitiveLog = (obj: InventoryFilter): any => ({\n    ...obj,\n  });\n}\n\nexport type InventoryIncludedObjectVersions = \"All\" | \"Current\";\n\nexport type InventoryOptionalField =\n  | \"ETag\"\n  | \"EncryptionStatus\"\n  | \"IntelligentTieringAccessTier\"\n  | \"IsMultipartUploaded\"\n  | \"LastModifiedDate\"\n  | \"ObjectLockLegalHoldStatus\"\n  | \"ObjectLockMode\"\n  | \"ObjectLockRetainUntilDate\"\n  | \"ReplicationStatus\"\n  | \"Size\"\n  | \"StorageClass\";\n\nexport type InventoryFrequency = \"Daily\" | \"Weekly\";\n\n/**\n * <p>Specifies the schedule for generating inventory results.</p>\n */\nexport interface InventorySchedule {\n  /**\n   * <p>Specifies how frequently inventory results are produced.</p>\n   */\n  Frequency: InventoryFrequency | string | undefined;\n}\n\nexport namespace InventorySchedule {\n  export const filterSensitiveLog = (obj: InventorySchedule): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the inventory configuration for an Amazon S3 bucket. For more information, see\n *             <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html\">GET Bucket inventory</a> in the <i>Amazon Simple Storage Service API Reference</i>.\n *       </p>\n */\nexport interface InventoryConfiguration {\n  /**\n   * <p>Contains information about where to publish the inventory results.</p>\n   */\n  Destination: InventoryDestination | undefined;\n\n  /**\n   * <p>Specifies whether the inventory is enabled or disabled. If set to <code>True</code>, an\n   *          inventory list is generated. If set to <code>False</code>, no inventory list is\n   *          generated.</p>\n   */\n  IsEnabled: boolean | undefined;\n\n  /**\n   * <p>Specifies an inventory filter. The inventory only includes objects that meet the\n   *          filter's criteria.</p>\n   */\n  Filter?: InventoryFilter;\n\n  /**\n   * <p>The ID used to identify the inventory configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>Object versions to include in the inventory list. If set to <code>All</code>, the list\n   *          includes all the object versions, which adds the version-related fields\n   *             <code>VersionId</code>, <code>IsLatest</code>, and <code>DeleteMarker</code> to the\n   *          list. If set to <code>Current</code>, the list does not contain these version-related\n   *          fields.</p>\n   */\n  IncludedObjectVersions: InventoryIncludedObjectVersions | string | undefined;\n\n  /**\n   * <p>Contains the optional fields that are included in the inventory results.</p>\n   */\n  OptionalFields?: (InventoryOptionalField | string)[];\n\n  /**\n   * <p>Specifies the schedule for generating inventory results.</p>\n   */\n  Schedule: InventorySchedule | undefined;\n}\n\nexport namespace InventoryConfiguration {\n  export const filterSensitiveLog = (obj: InventoryConfiguration): any => ({\n    ...obj,\n    ...(obj.Destination && { Destination: InventoryDestination.filterSensitiveLog(obj.Destination) }),\n  });\n}\n\nexport interface GetBucketInventoryConfigurationOutput {\n  /**\n   * <p>Specifies the inventory configuration.</p>\n   */\n  InventoryConfiguration?: InventoryConfiguration;\n}\n\nexport namespace GetBucketInventoryConfigurationOutput {\n  export const filterSensitiveLog = (obj: GetBucketInventoryConfigurationOutput): any => ({\n    ...obj,\n    ...(obj.InventoryConfiguration && {\n      InventoryConfiguration: InventoryConfiguration.filterSensitiveLog(obj.InventoryConfiguration),\n    }),\n  });\n}\n\nexport interface GetBucketInventoryConfigurationRequest {\n  /**\n   * <p>The name of the bucket containing the inventory configuration to retrieve.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID used to identify the inventory configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketInventoryConfigurationRequest {\n  export const filterSensitiveLog = (obj: GetBucketInventoryConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Container for the expiration for the lifecycle of the object.</p>\n */\nexport interface LifecycleExpiration {\n  /**\n   * <p>Indicates at what date the object is to be moved or deleted. Should be in GMT ISO 8601\n   *          Format.</p>\n   */\n  Date?: Date;\n\n  /**\n   * <p>Indicates the lifetime, in days, of the objects that are subject to the rule. The value\n   *          must be a non-zero positive integer.</p>\n   */\n  Days?: number;\n\n  /**\n   * <p>Indicates whether Amazon S3 will remove a delete marker with no noncurrent versions. If set\n   *          to true, the delete marker will be expired; if set to false the policy takes no action.\n   *          This cannot be specified with Days or Date in a Lifecycle Expiration Policy.</p>\n   */\n  ExpiredObjectDeleteMarker?: boolean;\n}\n\nexport namespace LifecycleExpiration {\n  export const filterSensitiveLog = (obj: LifecycleExpiration): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>This is used in a Lifecycle Rule Filter to apply a logical AND to two or more\n *          predicates. The Lifecycle Rule will apply to any object matching all of the predicates\n *          configured inside the And operator.</p>\n */\nexport interface LifecycleRuleAndOperator {\n  /**\n   * <p>Prefix identifying one or more objects to which the rule applies.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>All of these tags must exist in the object's tag set in order for the rule to\n   *          apply.</p>\n   */\n  Tags?: Tag[];\n}\n\nexport namespace LifecycleRuleAndOperator {\n  export const filterSensitiveLog = (obj: LifecycleRuleAndOperator): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The <code>Filter</code> is used to identify objects that a Lifecycle Rule applies to. A\n *             <code>Filter</code> must have exactly one of <code>Prefix</code>, <code>Tag</code>, or\n *             <code>And</code> specified.</p>\n */\nexport type LifecycleRuleFilter =\n  | LifecycleRuleFilter.AndMember\n  | LifecycleRuleFilter.PrefixMember\n  | LifecycleRuleFilter.TagMember\n  | LifecycleRuleFilter.$UnknownMember;\n\nexport namespace LifecycleRuleFilter {\n  /**\n   * <p>Prefix identifying one or more objects to which the rule applies.</p>\n   */\n  export interface PrefixMember {\n    Prefix: string;\n    Tag?: never;\n    And?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>This tag must exist in the object's tag set in order for the rule to apply.</p>\n   */\n  export interface TagMember {\n    Prefix?: never;\n    Tag: Tag;\n    And?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>This is used in a Lifecycle Rule Filter to apply a logical AND to two or more\n   *          predicates. The Lifecycle Rule will apply to any object matching all of the predicates\n   *          configured inside the And operator.</p>\n   */\n  export interface AndMember {\n    Prefix?: never;\n    Tag?: never;\n    And: LifecycleRuleAndOperator;\n    $unknown?: never;\n  }\n\n  export interface $UnknownMember {\n    Prefix?: never;\n    Tag?: never;\n    And?: never;\n    $unknown: [string, any];\n  }\n\n  export interface Visitor<T> {\n    Prefix: (value: string) => T;\n    Tag: (value: Tag) => T;\n    And: (value: LifecycleRuleAndOperator) => T;\n    _: (name: string, value: any) => T;\n  }\n\n  export const visit = <T>(value: LifecycleRuleFilter, visitor: Visitor<T>): T => {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  export const filterSensitiveLog = (obj: LifecycleRuleFilter): any => {\n    if (obj.Prefix !== undefined) return { Prefix: obj.Prefix };\n    if (obj.Tag !== undefined) return { Tag: Tag.filterSensitiveLog(obj.Tag) };\n    if (obj.And !== undefined) return { And: LifecycleRuleAndOperator.filterSensitiveLog(obj.And) };\n    if (obj.$unknown !== undefined) return { [obj.$unknown[0]]: \"UNKNOWN\" };\n  };\n}\n\n/**\n * <p>Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently\n *          deletes the noncurrent object versions. You set this lifecycle configuration action on a\n *          bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent\n *          object versions at a specific period in the object's lifetime.</p>\n */\nexport interface NoncurrentVersionExpiration {\n  /**\n   * <p>Specifies the number of days an object is noncurrent before Amazon S3 can perform the\n   *          associated action. For information about the noncurrent days calculations, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations\">How\n   *             Amazon S3 Calculates When an Object Became Noncurrent</a> in the <i>Amazon Simple\n   *             Storage Service Developer Guide</i>.</p>\n   */\n  NoncurrentDays?: number;\n}\n\nexport namespace NoncurrentVersionExpiration {\n  export const filterSensitiveLog = (obj: NoncurrentVersionExpiration): any => ({\n    ...obj,\n  });\n}\n\nexport type TransitionStorageClass = \"DEEP_ARCHIVE\" | \"GLACIER\" | \"INTELLIGENT_TIERING\" | \"ONEZONE_IA\" | \"STANDARD_IA\";\n\n/**\n * <p>Container for the transition rule that describes when noncurrent objects transition to\n *          the <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>,\n *             <code>GLACIER</code>, or <code>DEEP_ARCHIVE</code> storage class. If your bucket is\n *          versioning-enabled (or versioning is suspended), you can set this action to request that\n *          Amazon S3 transition noncurrent object versions to the <code>STANDARD_IA</code>,\n *             <code>ONEZONE_IA</code>, <code>INTELLIGENT_TIERING</code>, <code>GLACIER</code>, or\n *             <code>DEEP_ARCHIVE</code> storage class at a specific period in the object's\n *          lifetime.</p>\n */\nexport interface NoncurrentVersionTransition {\n  /**\n   * <p>Specifies the number of days an object is noncurrent before Amazon S3 can perform the\n   *          associated action. For information about the noncurrent days calculations, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#non-current-days-calculations\">How\n   *             Amazon S3 Calculates How Long an Object Has Been Noncurrent</a> in the\n   *             <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  NoncurrentDays?: number;\n\n  /**\n   * <p>The class of storage used to store the object.</p>\n   */\n  StorageClass?: TransitionStorageClass | string;\n}\n\nexport namespace NoncurrentVersionTransition {\n  export const filterSensitiveLog = (obj: NoncurrentVersionTransition): any => ({\n    ...obj,\n  });\n}\n\nexport type ExpirationStatus = \"Disabled\" | \"Enabled\";\n\n/**\n * <p>Specifies when an object transitions to a specified storage class. For more information\n *          about Amazon S3 lifecycle configuration rules, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html\">Transitioning\n *             Objects Using Amazon S3 Lifecycle</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n */\nexport interface Transition {\n  /**\n   * <p>Indicates when objects are transitioned to the specified storage class. The date value\n   *          must be in ISO 8601 format. The time is always midnight UTC.</p>\n   */\n  Date?: Date;\n\n  /**\n   * <p>Indicates the number of days after creation when objects are transitioned to the\n   *          specified storage class. The value must be a positive integer.</p>\n   */\n  Days?: number;\n\n  /**\n   * <p>The storage class to which you want the object to transition.</p>\n   */\n  StorageClass?: TransitionStorageClass | string;\n}\n\nexport namespace Transition {\n  export const filterSensitiveLog = (obj: Transition): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A lifecycle rule for individual objects in an Amazon S3 bucket.</p>\n */\nexport interface LifecycleRule {\n  /**\n   * <p>Specifies the expiration for the lifecycle of the object in the form of date, days and,\n   *          whether the object has a delete marker.</p>\n   */\n  Expiration?: LifecycleExpiration;\n\n  /**\n   * <p>Unique identifier for the rule. The value cannot be longer than 255 characters.</p>\n   */\n  ID?: string;\n\n  /**\n   * @deprecated\n   *\n   * <p>Prefix identifying one or more objects to which the rule applies. This is\n   *          No longer used; use <code>Filter</code> instead.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>The <code>Filter</code> is used to identify objects that a Lifecycle Rule applies to. A\n   *             <code>Filter</code> must have exactly one of <code>Prefix</code>, <code>Tag</code>, or\n   *             <code>And</code> specified.</p>\n   */\n  Filter?: LifecycleRuleFilter;\n\n  /**\n   * <p>If 'Enabled', the rule is currently being applied. If 'Disabled', the rule is not\n   *          currently being applied.</p>\n   */\n  Status: ExpirationStatus | string | undefined;\n\n  /**\n   * <p>Specifies when an Amazon S3 object transitions to a specified storage class.</p>\n   */\n  Transitions?: Transition[];\n\n  /**\n   * <p> Specifies the transition rule for the lifecycle rule that describes when noncurrent\n   *          objects transition to a specific storage class. If your bucket is versioning-enabled (or\n   *          versioning is suspended), you can set this action to request that Amazon S3 transition\n   *          noncurrent object versions to a specific storage class at a set period in the object's\n   *          lifetime. </p>\n   */\n  NoncurrentVersionTransitions?: NoncurrentVersionTransition[];\n\n  /**\n   * <p>Specifies when noncurrent object versions expire. Upon expiration, Amazon S3 permanently\n   *          deletes the noncurrent object versions. You set this lifecycle configuration action on a\n   *          bucket that has versioning enabled (or suspended) to request that Amazon S3 delete noncurrent\n   *          object versions at a specific period in the object's lifetime.</p>\n   */\n  NoncurrentVersionExpiration?: NoncurrentVersionExpiration;\n\n  /**\n   * <p>Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will\n   *          wait before permanently removing all parts of the upload. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config\">\n   *             Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a> in the\n   *             <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  AbortIncompleteMultipartUpload?: AbortIncompleteMultipartUpload;\n}\n\nexport namespace LifecycleRule {\n  export const filterSensitiveLog = (obj: LifecycleRule): any => ({\n    ...obj,\n    ...(obj.Filter && { Filter: LifecycleRuleFilter.filterSensitiveLog(obj.Filter) }),\n  });\n}\n\nexport interface GetBucketLifecycleConfigurationOutput {\n  /**\n   * <p>Container for a lifecycle rule.</p>\n   */\n  Rules?: LifecycleRule[];\n}\n\nexport namespace GetBucketLifecycleConfigurationOutput {\n  export const filterSensitiveLog = (obj: GetBucketLifecycleConfigurationOutput): any => ({\n    ...obj,\n    ...(obj.Rules && { Rules: obj.Rules.map((item) => LifecycleRule.filterSensitiveLog(item)) }),\n  });\n}\n\nexport interface GetBucketLifecycleConfigurationRequest {\n  /**\n   * <p>The name of the bucket for which to get the lifecycle information.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketLifecycleConfigurationRequest {\n  export const filterSensitiveLog = (obj: GetBucketLifecycleConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketLocationOutput {\n  /**\n   * <p>Specifies the Region where the bucket resides. For a list of all the Amazon S3 supported\n   *          location constraints by Region, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a>.\n   *          Buckets in Region <code>us-east-1</code> have a LocationConstraint of\n   *          <code>null</code>.</p>\n   */\n  LocationConstraint?: BucketLocationConstraint | string;\n}\n\nexport namespace GetBucketLocationOutput {\n  export const filterSensitiveLog = (obj: GetBucketLocationOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketLocationRequest {\n  /**\n   * <p>The name of the bucket for which to get the location.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketLocationRequest {\n  export const filterSensitiveLog = (obj: GetBucketLocationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport type BucketLogsPermission = \"FULL_CONTROL\" | \"READ\" | \"WRITE\";\n\n/**\n * <p>Container for granting information.</p>\n */\nexport interface TargetGrant {\n  /**\n   * <p>Container for the person being granted permissions.</p>\n   */\n  Grantee?: Grantee;\n\n  /**\n   * <p>Logging permissions assigned to the grantee for the bucket.</p>\n   */\n  Permission?: BucketLogsPermission | string;\n}\n\nexport namespace TargetGrant {\n  export const filterSensitiveLog = (obj: TargetGrant): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys\n *          for a bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html\">PUT Bucket logging</a> in the\n *             <i>Amazon Simple Storage Service API Reference</i>.</p>\n */\nexport interface LoggingEnabled {\n  /**\n   * <p>Specifies the bucket where you want Amazon S3 to store server access logs. You can have your\n   *          logs delivered to any bucket that you own, including the same bucket that is being logged.\n   *          You can also configure multiple buckets to deliver their logs to the same target bucket. In\n   *          this case, you should choose a different <code>TargetPrefix</code> for each source bucket\n   *          so that the delivered log files can be distinguished by key.</p>\n   */\n  TargetBucket: string | undefined;\n\n  /**\n   * <p>Container for granting information.</p>\n   */\n  TargetGrants?: TargetGrant[];\n\n  /**\n   * <p>A prefix for all log object keys. If you store log files from multiple Amazon S3 buckets in a\n   *          single bucket, you can use a prefix to distinguish which log files came from which\n   *          bucket.</p>\n   */\n  TargetPrefix: string | undefined;\n}\n\nexport namespace LoggingEnabled {\n  export const filterSensitiveLog = (obj: LoggingEnabled): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketLoggingOutput {\n  /**\n   * <p>Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys\n   *          for a bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html\">PUT Bucket logging</a> in the\n   *             <i>Amazon Simple Storage Service API Reference</i>.</p>\n   */\n  LoggingEnabled?: LoggingEnabled;\n}\n\nexport namespace GetBucketLoggingOutput {\n  export const filterSensitiveLog = (obj: GetBucketLoggingOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketLoggingRequest {\n  /**\n   * <p>The bucket name for which to get the logging information.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketLoggingRequest {\n  export const filterSensitiveLog = (obj: GetBucketLoggingRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter.\n *          The operator must have at least two predicates, and an object must match all of the\n *          predicates in order for the filter to apply.</p>\n */\nexport interface MetricsAndOperator {\n  /**\n   * <p>The prefix used when evaluating an AND predicate.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>The list of tags used when evaluating an AND predicate.</p>\n   */\n  Tags?: Tag[];\n}\n\nexport namespace MetricsAndOperator {\n  export const filterSensitiveLog = (obj: MetricsAndOperator): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies a metrics configuration filter. The metrics configuration only includes\n *          objects that meet the filter's criteria. A filter must be a prefix, a tag, or a conjunction\n *          (MetricsAndOperator).</p>\n */\nexport type MetricsFilter =\n  | MetricsFilter.AndMember\n  | MetricsFilter.PrefixMember\n  | MetricsFilter.TagMember\n  | MetricsFilter.$UnknownMember;\n\nexport namespace MetricsFilter {\n  /**\n   * <p>The prefix used when evaluating a metrics filter.</p>\n   */\n  export interface PrefixMember {\n    Prefix: string;\n    Tag?: never;\n    And?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>The tag used when evaluating a metrics filter.</p>\n   */\n  export interface TagMember {\n    Prefix?: never;\n    Tag: Tag;\n    And?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>A conjunction (logical AND) of predicates, which is used in evaluating a metrics filter.\n   *          The operator must have at least two predicates, and an object must match all of the\n   *          predicates in order for the filter to apply.</p>\n   */\n  export interface AndMember {\n    Prefix?: never;\n    Tag?: never;\n    And: MetricsAndOperator;\n    $unknown?: never;\n  }\n\n  export interface $UnknownMember {\n    Prefix?: never;\n    Tag?: never;\n    And?: never;\n    $unknown: [string, any];\n  }\n\n  export interface Visitor<T> {\n    Prefix: (value: string) => T;\n    Tag: (value: Tag) => T;\n    And: (value: MetricsAndOperator) => T;\n    _: (name: string, value: any) => T;\n  }\n\n  export const visit = <T>(value: MetricsFilter, visitor: Visitor<T>): T => {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  export const filterSensitiveLog = (obj: MetricsFilter): any => {\n    if (obj.Prefix !== undefined) return { Prefix: obj.Prefix };\n    if (obj.Tag !== undefined) return { Tag: Tag.filterSensitiveLog(obj.Tag) };\n    if (obj.And !== undefined) return { And: MetricsAndOperator.filterSensitiveLog(obj.And) };\n    if (obj.$unknown !== undefined) return { [obj.$unknown[0]]: \"UNKNOWN\" };\n  };\n}\n\n/**\n * <p>Specifies a metrics configuration for the CloudWatch request metrics (specified by the\n *          metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics\n *          configuration, note that this is a full replacement of the existing metrics configuration.\n *          If you don't include the elements you want to keep, they are erased. For more information,\n *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html\"> PUT Bucket\n *             metrics</a> in the <i>Amazon Simple Storage Service API Reference</i>.</p>\n */\nexport interface MetricsConfiguration {\n  /**\n   * <p>The ID used to identify the metrics configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>Specifies a metrics configuration filter. The metrics configuration will only include\n   *          objects that meet the filter's criteria. A filter must be a prefix, a tag, or a conjunction\n   *          (MetricsAndOperator).</p>\n   */\n  Filter?: MetricsFilter;\n}\n\nexport namespace MetricsConfiguration {\n  export const filterSensitiveLog = (obj: MetricsConfiguration): any => ({\n    ...obj,\n    ...(obj.Filter && { Filter: MetricsFilter.filterSensitiveLog(obj.Filter) }),\n  });\n}\n\nexport interface GetBucketMetricsConfigurationOutput {\n  /**\n   * <p>Specifies the metrics configuration.</p>\n   */\n  MetricsConfiguration?: MetricsConfiguration;\n}\n\nexport namespace GetBucketMetricsConfigurationOutput {\n  export const filterSensitiveLog = (obj: GetBucketMetricsConfigurationOutput): any => ({\n    ...obj,\n    ...(obj.MetricsConfiguration && {\n      MetricsConfiguration: MetricsConfiguration.filterSensitiveLog(obj.MetricsConfiguration),\n    }),\n  });\n}\n\nexport interface GetBucketMetricsConfigurationRequest {\n  /**\n   * <p>The name of the bucket containing the metrics configuration to retrieve.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID used to identify the metrics configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketMetricsConfigurationRequest {\n  export const filterSensitiveLog = (obj: GetBucketMetricsConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketNotificationConfigurationRequest {\n  /**\n   * <p>The name of the bucket for which to get the notification configuration.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketNotificationConfigurationRequest {\n  export const filterSensitiveLog = (obj: GetBucketNotificationConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport type Event =\n  | \"s3:ObjectCreated:*\"\n  | \"s3:ObjectCreated:CompleteMultipartUpload\"\n  | \"s3:ObjectCreated:Copy\"\n  | \"s3:ObjectCreated:Post\"\n  | \"s3:ObjectCreated:Put\"\n  | \"s3:ObjectRemoved:*\"\n  | \"s3:ObjectRemoved:Delete\"\n  | \"s3:ObjectRemoved:DeleteMarkerCreated\"\n  | \"s3:ObjectRestore:*\"\n  | \"s3:ObjectRestore:Completed\"\n  | \"s3:ObjectRestore:Post\"\n  | \"s3:ReducedRedundancyLostObject\"\n  | \"s3:Replication:*\"\n  | \"s3:Replication:OperationFailedReplication\"\n  | \"s3:Replication:OperationMissedThreshold\"\n  | \"s3:Replication:OperationNotTracked\"\n  | \"s3:Replication:OperationReplicatedAfterThreshold\";\n\nexport type FilterRuleName = \"prefix\" | \"suffix\";\n\n/**\n * <p>Specifies the Amazon S3 object key name to filter on and whether to filter on the suffix or\n *          prefix of the key name.</p>\n */\nexport interface FilterRule {\n  /**\n   * <p>The object key name prefix or suffix identifying one or more objects to which the\n   *          filtering rule applies. The maximum length is 1,024 characters. Overlapping prefixes and\n   *          suffixes are not supported. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">Configuring Event Notifications</a>\n   *          in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Name?: FilterRuleName | string;\n\n  /**\n   * <p>The value that the filter searches for in object key names.</p>\n   */\n  Value?: string;\n}\n\nexport namespace FilterRule {\n  export const filterSensitiveLog = (obj: FilterRule): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container for object key name prefix and suffix filtering rules.</p>\n */\nexport interface S3KeyFilter {\n  /**\n   * <p>A list of containers for the key-value pair that defines the criteria for the filter\n   *          rule.</p>\n   */\n  FilterRules?: FilterRule[];\n}\n\nexport namespace S3KeyFilter {\n  export const filterSensitiveLog = (obj: S3KeyFilter): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies object key name filtering rules. For information about key name filtering, see\n *             <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">Configuring\n *             Event Notifications</a> in the <i>Amazon Simple Storage Service Developer\n *          Guide</i>.</p>\n */\nexport interface NotificationConfigurationFilter {\n  /**\n   * <p>A container for object key name prefix and suffix filtering rules.</p>\n   */\n  Key?: S3KeyFilter;\n}\n\nexport namespace NotificationConfigurationFilter {\n  export const filterSensitiveLog = (obj: NotificationConfigurationFilter): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container for specifying the configuration for AWS Lambda notifications.</p>\n */\nexport interface LambdaFunctionConfiguration {\n  /**\n   * <p>An optional unique identifier for configurations in a notification configuration. If you\n   *          don't provide one, Amazon S3 will assign an ID.</p>\n   */\n  Id?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the AWS Lambda function that Amazon S3 invokes when the\n   *          specified event type occurs.</p>\n   */\n  LambdaFunctionArn: string | undefined;\n\n  /**\n   * <p>The Amazon S3 bucket event for which to invoke the AWS Lambda function. For more information,\n   *          see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">Supported\n   *             Event Types</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Events: (Event | string)[] | undefined;\n\n  /**\n   * <p>Specifies object key name filtering rules. For information about key name filtering, see\n   *             <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">Configuring\n   *             Event Notifications</a> in the <i>Amazon Simple Storage Service Developer\n   *          Guide</i>.</p>\n   */\n  Filter?: NotificationConfigurationFilter;\n}\n\nexport namespace LambdaFunctionConfiguration {\n  export const filterSensitiveLog = (obj: LambdaFunctionConfiguration): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the configuration for publishing messages to an Amazon Simple Queue Service\n *          (Amazon SQS) queue when Amazon S3 detects specified events.</p>\n */\nexport interface QueueConfiguration {\n  /**\n   * <p>An optional unique identifier for configurations in a notification configuration. If you\n   *          don't provide one, Amazon S3 will assign an ID.</p>\n   */\n  Id?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the Amazon SQS queue to which Amazon S3 publishes a message\n   *          when it detects events of the specified type.</p>\n   */\n  QueueArn: string | undefined;\n\n  /**\n   * <p>A collection of bucket events for which to send notifications</p>\n   */\n  Events: (Event | string)[] | undefined;\n\n  /**\n   * <p>Specifies object key name filtering rules. For information about key name filtering, see\n   *             <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">Configuring\n   *             Event Notifications</a> in the <i>Amazon Simple Storage Service Developer\n   *          Guide</i>.</p>\n   */\n  Filter?: NotificationConfigurationFilter;\n}\n\nexport namespace QueueConfiguration {\n  export const filterSensitiveLog = (obj: QueueConfiguration): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container for specifying the configuration for publication of messages to an Amazon\n *          Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events.</p>\n */\nexport interface TopicConfiguration {\n  /**\n   * <p>An optional unique identifier for configurations in a notification configuration. If you\n   *          don't provide one, Amazon S3 will assign an ID.</p>\n   */\n  Id?: string;\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the Amazon SNS topic to which Amazon S3 publishes a message\n   *          when it detects events of the specified type.</p>\n   */\n  TopicArn: string | undefined;\n\n  /**\n   * <p>The Amazon S3 bucket event about which to send notifications. For more information, see\n   *             <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">Supported\n   *             Event Types</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Events: (Event | string)[] | undefined;\n\n  /**\n   * <p>Specifies object key name filtering rules. For information about key name filtering, see\n   *             <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">Configuring\n   *             Event Notifications</a> in the <i>Amazon Simple Storage Service Developer\n   *          Guide</i>.</p>\n   */\n  Filter?: NotificationConfigurationFilter;\n}\n\nexport namespace TopicConfiguration {\n  export const filterSensitiveLog = (obj: TopicConfiguration): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container for specifying the notification configuration of the bucket. If this element\n *          is empty, notifications are turned off for the bucket.</p>\n */\nexport interface NotificationConfiguration {\n  /**\n   * <p>The topic to which notifications are sent and the events for which notifications are\n   *          generated.</p>\n   */\n  TopicConfigurations?: TopicConfiguration[];\n\n  /**\n   * <p>The Amazon Simple Queue Service queues to publish messages to and the events for which\n   *          to publish messages.</p>\n   */\n  QueueConfigurations?: QueueConfiguration[];\n\n  /**\n   * <p>Describes the AWS Lambda functions to invoke and the events for which to invoke\n   *          them.</p>\n   */\n  LambdaFunctionConfigurations?: LambdaFunctionConfiguration[];\n}\n\nexport namespace NotificationConfiguration {\n  export const filterSensitiveLog = (obj: NotificationConfiguration): any => ({\n    ...obj,\n  });\n}\n\nexport type ObjectOwnership = \"BucketOwnerPreferred\" | \"ObjectWriter\";\n\n/**\n * <p>The container element for an ownership control rule.</p>\n */\nexport interface OwnershipControlsRule {\n  /**\n   * <p>The container element for object ownership for a bucket's ownership controls.</p>\n   *          <p>BucketOwnerPreferred - Objects uploaded to the bucket change ownership to the bucket\n   *          owner if the objects are uploaded with the <code>bucket-owner-full-control</code> canned\n   *          ACL.</p>\n   *          <p>ObjectWriter - The uploading account will own the object if the object is uploaded with\n   *          the <code>bucket-owner-full-control</code> canned ACL.</p>\n   */\n  ObjectOwnership: ObjectOwnership | string | undefined;\n}\n\nexport namespace OwnershipControlsRule {\n  export const filterSensitiveLog = (obj: OwnershipControlsRule): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The container element for a bucket's ownership controls.</p>\n */\nexport interface OwnershipControls {\n  /**\n   * <p>The container element for an ownership control rule.</p>\n   */\n  Rules: OwnershipControlsRule[] | undefined;\n}\n\nexport namespace OwnershipControls {\n  export const filterSensitiveLog = (obj: OwnershipControls): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketOwnershipControlsOutput {\n  /**\n   * <p>The <code>OwnershipControls</code> (BucketOwnerPreferred or ObjectWriter) currently in\n   *          effect for this Amazon S3 bucket.</p>\n   */\n  OwnershipControls?: OwnershipControls;\n}\n\nexport namespace GetBucketOwnershipControlsOutput {\n  export const filterSensitiveLog = (obj: GetBucketOwnershipControlsOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketOwnershipControlsRequest {\n  /**\n   * <p>The name of the Amazon S3 bucket whose <code>OwnershipControls</code> you want to retrieve.\n   *       </p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketOwnershipControlsRequest {\n  export const filterSensitiveLog = (obj: GetBucketOwnershipControlsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketPolicyOutput {\n  /**\n   * <p>The bucket policy as a JSON document.</p>\n   */\n  Policy?: string;\n}\n\nexport namespace GetBucketPolicyOutput {\n  export const filterSensitiveLog = (obj: GetBucketPolicyOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketPolicyRequest {\n  /**\n   * <p>The bucket name for which to get the bucket policy.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketPolicyRequest {\n  export const filterSensitiveLog = (obj: GetBucketPolicyRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The container element for a bucket's policy status.</p>\n */\nexport interface PolicyStatus {\n  /**\n   * <p>The policy status for this bucket. <code>TRUE</code> indicates that this bucket is\n   *          public. <code>FALSE</code> indicates that the bucket is not public.</p>\n   */\n  IsPublic?: boolean;\n}\n\nexport namespace PolicyStatus {\n  export const filterSensitiveLog = (obj: PolicyStatus): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketPolicyStatusOutput {\n  /**\n   * <p>The policy status for the specified bucket.</p>\n   */\n  PolicyStatus?: PolicyStatus;\n}\n\nexport namespace GetBucketPolicyStatusOutput {\n  export const filterSensitiveLog = (obj: GetBucketPolicyStatusOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketPolicyStatusRequest {\n  /**\n   * <p>The name of the Amazon S3 bucket whose policy status you want to retrieve.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketPolicyStatusRequest {\n  export const filterSensitiveLog = (obj: GetBucketPolicyStatusRequest): any => ({\n    ...obj,\n  });\n}\n\nexport type DeleteMarkerReplicationStatus = \"Disabled\" | \"Enabled\";\n\n/**\n * <p>Specifies whether Amazon S3 replicates delete markers. If you specify a <code>Filter</code>\n *          in your replication configuration, you must also include a\n *             <code>DeleteMarkerReplication</code> element. If your <code>Filter</code> includes a\n *             <code>Tag</code> element, the <code>DeleteMarkerReplication</code>\n *             <code>Status</code> must be set to Disabled, because Amazon S3 does not support replicating\n *          delete markers for tag-based rules. For an example configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config\">Basic Rule Configuration</a>. </p>\n *          <p>For more information about delete marker replication, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html\">Basic Rule\n *             Configuration</a>. </p>\n *          <note>\n *             <p>If you are using an earlier version of the replication configuration, Amazon S3 handles\n *             replication of delete markers differently. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations\">Backward Compatibility</a>.</p>\n *          </note>\n */\nexport interface DeleteMarkerReplication {\n  /**\n   * <p>Indicates whether to replicate delete markers.</p>\n   *          <note>\n   *             <p>Indicates whether to replicate delete markers.</p>\n   *          </note>\n   */\n  Status?: DeleteMarkerReplicationStatus | string;\n}\n\nexport namespace DeleteMarkerReplication {\n  export const filterSensitiveLog = (obj: DeleteMarkerReplication): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies encryption-related information for an Amazon S3 bucket that is a destination for\n *          replicated objects.</p>\n */\nexport interface EncryptionConfiguration {\n  /**\n   * <p>Specifies the ID (Key ARN or Alias ARN) of the customer managed customer master key\n   *          (CMK) stored in AWS Key Management Service (KMS) for the destination bucket. Amazon S3 uses\n   *          this key to encrypt replica objects. Amazon S3 only supports symmetric customer managed CMKs.\n   *          For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using Symmetric and\n   *             Asymmetric Keys</a> in the <i>AWS Key Management Service Developer\n   *             Guide</i>.</p>\n   */\n  ReplicaKmsKeyID?: string;\n}\n\nexport namespace EncryptionConfiguration {\n  export const filterSensitiveLog = (obj: EncryptionConfiguration): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p> A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics\n *             <code>EventThreshold</code>. </p>\n */\nexport interface ReplicationTimeValue {\n  /**\n   * <p> Contains an integer specifying time in minutes. </p>\n   *          <p> Valid values: 15 minutes. </p>\n   */\n  Minutes?: number;\n}\n\nexport namespace ReplicationTimeValue {\n  export const filterSensitiveLog = (obj: ReplicationTimeValue): any => ({\n    ...obj,\n  });\n}\n\nexport type MetricsStatus = \"Disabled\" | \"Enabled\";\n\n/**\n * <p> A container specifying replication metrics-related settings enabling replication\n *          metrics and events.</p>\n */\nexport interface Metrics {\n  /**\n   * <p> Specifies whether the replication metrics are enabled. </p>\n   */\n  Status: MetricsStatus | string | undefined;\n\n  /**\n   * <p> A container specifying the time threshold for emitting the\n   *             <code>s3:Replication:OperationMissedThreshold</code> event. </p>\n   */\n  EventThreshold?: ReplicationTimeValue;\n}\n\nexport namespace Metrics {\n  export const filterSensitiveLog = (obj: Metrics): any => ({\n    ...obj,\n  });\n}\n\nexport type ReplicationTimeStatus = \"Disabled\" | \"Enabled\";\n\n/**\n * <p> A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is\n *          enabled and the time when all objects and operations on objects must be replicated. Must be\n *          specified together with a <code>Metrics</code> block. </p>\n */\nexport interface ReplicationTime {\n  /**\n   * <p> Specifies whether the replication time is enabled. </p>\n   */\n  Status: ReplicationTimeStatus | string | undefined;\n\n  /**\n   * <p> A container specifying the time by which replication should be complete for all objects\n   *          and operations on objects. </p>\n   */\n  Time: ReplicationTimeValue | undefined;\n}\n\nexport namespace ReplicationTime {\n  export const filterSensitiveLog = (obj: ReplicationTime): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies information about where to publish analysis or configuration results for an\n *          Amazon S3 bucket and S3 Replication Time Control (S3 RTC).</p>\n */\nexport interface Destination {\n  /**\n   * <p> The Amazon Resource Name (ARN) of the bucket where you want Amazon S3 to store the\n   *          results.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Destination bucket owner account ID. In a cross-account scenario, if you direct Amazon S3 to\n   *          change replica ownership to the AWS account that owns the destination bucket by specifying\n   *          the <code>AccessControlTranslation</code> property, this is the account ID of the\n   *          destination bucket owner. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-change-owner.html\">Replication Additional\n   *             Configuration: Changing the Replica Owner</a> in the <i>Amazon Simple Storage\n   *             Service Developer Guide</i>.</p>\n   */\n  Account?: string;\n\n  /**\n   * <p> The storage class to use when replicating objects, such as S3 Standard or reduced\n   *          redundancy. By default, Amazon S3 uses the storage class of the source object to create the\n   *          object replica. </p>\n   *          <p>For valid values, see the <code>StorageClass</code> element of the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html\">PUT Bucket\n   *             replication</a> action in the <i>Amazon Simple Storage Service API Reference</i>.</p>\n   */\n  StorageClass?: StorageClass | string;\n\n  /**\n   * <p>Specify this only in a cross-account scenario (where source and destination bucket\n   *          owners are not the same), and you want to change replica ownership to the AWS account that\n   *          owns the destination bucket. If this is not specified in the replication configuration, the\n   *          replicas are owned by same AWS account that owns the source object.</p>\n   */\n  AccessControlTranslation?: AccessControlTranslation;\n\n  /**\n   * <p>A container that provides information about encryption. If\n   *             <code>SourceSelectionCriteria</code> is specified, you must specify this element.</p>\n   */\n  EncryptionConfiguration?: EncryptionConfiguration;\n\n  /**\n   * <p> A container specifying S3 Replication Time Control (S3 RTC), including whether S3 RTC is enabled and the time\n   *          when all objects and operations on objects must be replicated. Must be specified together\n   *          with a <code>Metrics</code> block. </p>\n   */\n  ReplicationTime?: ReplicationTime;\n\n  /**\n   * <p> A container specifying replication metrics-related settings enabling replication\n   *          metrics and events. </p>\n   */\n  Metrics?: Metrics;\n}\n\nexport namespace Destination {\n  export const filterSensitiveLog = (obj: Destination): any => ({\n    ...obj,\n  });\n}\n\nexport type ExistingObjectReplicationStatus = \"Disabled\" | \"Enabled\";\n\n/**\n * <p>Optional configuration to replicate existing source bucket objects. For more\n *          information, see <a href=\" https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-what-is-isnot-replicated.html#existing-object-replication\">Replicating Existing Objects</a> in the <i>Amazon S3 Developer Guide</i>.\n *       </p>\n */\nexport interface ExistingObjectReplication {\n  /**\n   * <p></p>\n   */\n  Status: ExistingObjectReplicationStatus | string | undefined;\n}\n\nexport namespace ExistingObjectReplication {\n  export const filterSensitiveLog = (obj: ExistingObjectReplication): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container for specifying rule filters. The filters determine the subset of objects to\n *          which the rule applies. This element is required only if you specify more than one filter. </p>\n *          <p>For example:</p>\n *          <ul>\n *             <li>\n *                <p>If you specify both a <code>Prefix</code> and a <code>Tag</code> filter, wrap\n *                these filters in an <code>And</code> tag. </p>\n *             </li>\n *             <li>\n *                <p>If you specify a filter based on multiple tags, wrap the <code>Tag</code> elements\n *                in an <code>And</code> tag</p>\n *             </li>\n *          </ul>\n */\nexport interface ReplicationRuleAndOperator {\n  /**\n   * <p>An object key name prefix that identifies the subset of objects to which the rule\n   *          applies.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>An array of tags containing key and value pairs.</p>\n   */\n  Tags?: Tag[];\n}\n\nexport namespace ReplicationRuleAndOperator {\n  export const filterSensitiveLog = (obj: ReplicationRuleAndOperator): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A filter that identifies the subset of objects to which the replication rule applies. A\n *             <code>Filter</code> must specify exactly one <code>Prefix</code>, <code>Tag</code>, or\n *          an <code>And</code> child element.</p>\n */\nexport type ReplicationRuleFilter =\n  | ReplicationRuleFilter.AndMember\n  | ReplicationRuleFilter.PrefixMember\n  | ReplicationRuleFilter.TagMember\n  | ReplicationRuleFilter.$UnknownMember;\n\nexport namespace ReplicationRuleFilter {\n  /**\n   * <p>An object key name prefix that identifies the subset of objects to which the rule\n   *          applies.</p>\n   */\n  export interface PrefixMember {\n    Prefix: string;\n    Tag?: never;\n    And?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>A container for specifying a tag key and value. </p>\n   *          <p>The rule applies only to objects that have the tag in their tag set.</p>\n   */\n  export interface TagMember {\n    Prefix?: never;\n    Tag: Tag;\n    And?: never;\n    $unknown?: never;\n  }\n\n  /**\n   * <p>A container for specifying rule filters. The filters determine the subset of objects to\n   *          which the rule applies. This element is required only if you specify more than one filter.\n   *          For example: </p>\n   *          <ul>\n   *             <li>\n   *                <p>If you specify both a <code>Prefix</code> and a <code>Tag</code> filter, wrap\n   *                these filters in an <code>And</code> tag.</p>\n   *             </li>\n   *             <li>\n   *                <p>If you specify a filter based on multiple tags, wrap the <code>Tag</code> elements\n   *                in an <code>And</code> tag.</p>\n   *             </li>\n   *          </ul>\n   */\n  export interface AndMember {\n    Prefix?: never;\n    Tag?: never;\n    And: ReplicationRuleAndOperator;\n    $unknown?: never;\n  }\n\n  export interface $UnknownMember {\n    Prefix?: never;\n    Tag?: never;\n    And?: never;\n    $unknown: [string, any];\n  }\n\n  export interface Visitor<T> {\n    Prefix: (value: string) => T;\n    Tag: (value: Tag) => T;\n    And: (value: ReplicationRuleAndOperator) => T;\n    _: (name: string, value: any) => T;\n  }\n\n  export const visit = <T>(value: ReplicationRuleFilter, visitor: Visitor<T>): T => {\n    if (value.Prefix !== undefined) return visitor.Prefix(value.Prefix);\n    if (value.Tag !== undefined) return visitor.Tag(value.Tag);\n    if (value.And !== undefined) return visitor.And(value.And);\n    return visitor._(value.$unknown[0], value.$unknown[1]);\n  };\n\n  export const filterSensitiveLog = (obj: ReplicationRuleFilter): any => {\n    if (obj.Prefix !== undefined) return { Prefix: obj.Prefix };\n    if (obj.Tag !== undefined) return { Tag: Tag.filterSensitiveLog(obj.Tag) };\n    if (obj.And !== undefined) return { And: ReplicationRuleAndOperator.filterSensitiveLog(obj.And) };\n    if (obj.$unknown !== undefined) return { [obj.$unknown[0]]: \"UNKNOWN\" };\n  };\n}\n\nexport type ReplicaModificationsStatus = \"Disabled\" | \"Enabled\";\n\n/**\n * <p>A filter that you can specify for selection for modifications on replicas. Amazon S3 doesn't\n *          replicate replica modifications by default. In the latest version of replication\n *          configuration (when <code>Filter</code> is specified), you can specify this element and set\n *          the status to <code>Enabled</code> to replicate modifications on replicas. </p>\n *          <note>\n *             <p> If you don't specify the <code>Filter</code> element, Amazon S3 assumes that the\n *             replication configuration is the earlier version, V1. In the earlier version, this\n *             element is not allowed.</p>\n *          </note>\n */\nexport interface ReplicaModifications {\n  /**\n   * <p>Specifies whether Amazon S3 replicates modifications on replicas.</p>\n   */\n  Status: ReplicaModificationsStatus | string | undefined;\n}\n\nexport namespace ReplicaModifications {\n  export const filterSensitiveLog = (obj: ReplicaModifications): any => ({\n    ...obj,\n  });\n}\n\nexport type SseKmsEncryptedObjectsStatus = \"Disabled\" | \"Enabled\";\n\n/**\n * <p>A container for filter information for the selection of S3 objects encrypted with AWS\n *          KMS.</p>\n */\nexport interface SseKmsEncryptedObjects {\n  /**\n   * <p>Specifies whether Amazon S3 replicates objects created with server-side encryption using a\n   *          customer master key (CMK) stored in AWS Key Management Service.</p>\n   */\n  Status: SseKmsEncryptedObjectsStatus | string | undefined;\n}\n\nexport namespace SseKmsEncryptedObjects {\n  export const filterSensitiveLog = (obj: SseKmsEncryptedObjects): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container that describes additional filters for identifying the source objects that\n *          you want to replicate. You can choose to enable or disable the replication of these\n *          objects. Currently, Amazon S3 supports only the filter that you can specify for objects created\n *          with server-side encryption using a customer master key (CMK) stored in AWS Key Management\n *          Service (SSE-KMS).</p>\n */\nexport interface SourceSelectionCriteria {\n  /**\n   * <p> A container for filter information for the selection of Amazon S3 objects encrypted with AWS\n   *          KMS. If you include <code>SourceSelectionCriteria</code> in the replication configuration,\n   *          this element is required. </p>\n   */\n  SseKmsEncryptedObjects?: SseKmsEncryptedObjects;\n\n  /**\n   * <p>A filter that you can specify for selections for modifications on replicas. Amazon S3 doesn't\n   *          replicate replica modifications by default. In the latest version of replication\n   *          configuration (when <code>Filter</code> is specified), you can specify this element and set\n   *          the status to <code>Enabled</code> to replicate modifications on replicas. </p>\n   *          <note>\n   *             <p> If you don't specify the <code>Filter</code> element, Amazon S3 assumes that the\n   *             replication configuration is the earlier version, V1. In the earlier version, this\n   *             element is not allowed</p>\n   *          </note>\n   */\n  ReplicaModifications?: ReplicaModifications;\n}\n\nexport namespace SourceSelectionCriteria {\n  export const filterSensitiveLog = (obj: SourceSelectionCriteria): any => ({\n    ...obj,\n  });\n}\n\nexport type ReplicationRuleStatus = \"Disabled\" | \"Enabled\";\n\n/**\n * <p>Specifies which Amazon S3 objects to replicate and where to store the replicas.</p>\n */\nexport interface ReplicationRule {\n  /**\n   * <p>A unique identifier for the rule. The maximum value is 255 characters.</p>\n   */\n  ID?: string;\n\n  /**\n   * <p>The priority indicates which rule has precedence whenever two or more replication rules\n   *          conflict. Amazon S3 will attempt to replicate objects according to all replication rules.\n   *          However, if there are two or more rules with the same destination bucket, then objects will\n   *          be replicated according to the rule with the highest priority. The higher the number, the\n   *          higher the priority. </p>\n   *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/replication.html\">Replication</a> in the\n   *             <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Priority?: number;\n\n  /**\n   * @deprecated\n   *\n   * <p>An object key name prefix that identifies the object or objects to which the rule\n   *          applies. The maximum prefix length is 1,024 characters. To include all objects in a bucket,\n   *          specify an empty string. </p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>A filter that identifies the subset of objects to which the replication rule applies. A\n   *             <code>Filter</code> must specify exactly one <code>Prefix</code>, <code>Tag</code>, or\n   *          an <code>And</code> child element.</p>\n   */\n  Filter?: ReplicationRuleFilter;\n\n  /**\n   * <p>Specifies whether the rule is enabled.</p>\n   */\n  Status: ReplicationRuleStatus | string | undefined;\n\n  /**\n   * <p>A container that describes additional filters for identifying the source objects that\n   *          you want to replicate. You can choose to enable or disable the replication of these\n   *          objects. Currently, Amazon S3 supports only the filter that you can specify for objects created\n   *          with server-side encryption using a customer master key (CMK) stored in AWS Key Management\n   *          Service (SSE-KMS).</p>\n   */\n  SourceSelectionCriteria?: SourceSelectionCriteria;\n\n  /**\n   * <p></p>\n   */\n  ExistingObjectReplication?: ExistingObjectReplication;\n\n  /**\n   * <p>A container for information about the replication destination and its configurations\n   *          including enabling the S3 Replication Time Control (S3 RTC).</p>\n   */\n  Destination: Destination | undefined;\n\n  /**\n   * <p>Specifies whether Amazon S3 replicates delete markers. If you specify a <code>Filter</code>\n   *          in your replication configuration, you must also include a\n   *             <code>DeleteMarkerReplication</code> element. If your <code>Filter</code> includes a\n   *             <code>Tag</code> element, the <code>DeleteMarkerReplication</code>\n   *             <code>Status</code> must be set to Disabled, because Amazon S3 does not support replicating\n   *          delete markers for tag-based rules. For an example configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config\">Basic Rule Configuration</a>. </p>\n   *          <p>For more information about delete marker replication, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html\">Basic Rule\n   *             Configuration</a>. </p>\n   *          <note>\n   *             <p>If you are using an earlier version of the replication configuration, Amazon S3 handles\n   *             replication of delete markers differently. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations\">Backward Compatibility</a>.</p>\n   *          </note>\n   */\n  DeleteMarkerReplication?: DeleteMarkerReplication;\n}\n\nexport namespace ReplicationRule {\n  export const filterSensitiveLog = (obj: ReplicationRule): any => ({\n    ...obj,\n    ...(obj.Filter && { Filter: ReplicationRuleFilter.filterSensitiveLog(obj.Filter) }),\n  });\n}\n\n/**\n * <p>A container for replication rules. You can add up to 1,000 rules. The maximum size of a\n *          replication configuration is 2 MB.</p>\n */\nexport interface ReplicationConfiguration {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the AWS Identity and Access Management (IAM) role that\n   *          Amazon S3 assumes when replicating objects. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-how-setup.html\">How to Set Up\n   *             Replication</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Role: string | undefined;\n\n  /**\n   * <p>A container for one or more replication rules. A replication configuration must have at\n   *          least one rule and can contain a maximum of 1,000 rules. </p>\n   */\n  Rules: ReplicationRule[] | undefined;\n}\n\nexport namespace ReplicationConfiguration {\n  export const filterSensitiveLog = (obj: ReplicationConfiguration): any => ({\n    ...obj,\n    ...(obj.Rules && { Rules: obj.Rules.map((item) => ReplicationRule.filterSensitiveLog(item)) }),\n  });\n}\n\nexport interface GetBucketReplicationOutput {\n  /**\n   * <p>A container for replication rules. You can add up to 1,000 rules. The maximum size of a\n   *          replication configuration is 2 MB.</p>\n   */\n  ReplicationConfiguration?: ReplicationConfiguration;\n}\n\nexport namespace GetBucketReplicationOutput {\n  export const filterSensitiveLog = (obj: GetBucketReplicationOutput): any => ({\n    ...obj,\n    ...(obj.ReplicationConfiguration && {\n      ReplicationConfiguration: ReplicationConfiguration.filterSensitiveLog(obj.ReplicationConfiguration),\n    }),\n  });\n}\n\nexport interface GetBucketReplicationRequest {\n  /**\n   * <p>The bucket name for which to get the replication information.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketReplicationRequest {\n  export const filterSensitiveLog = (obj: GetBucketReplicationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport type Payer = \"BucketOwner\" | \"Requester\";\n\nexport interface GetBucketRequestPaymentOutput {\n  /**\n   * <p>Specifies who pays for the download and request fees.</p>\n   */\n  Payer?: Payer | string;\n}\n\nexport namespace GetBucketRequestPaymentOutput {\n  export const filterSensitiveLog = (obj: GetBucketRequestPaymentOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketRequestPaymentRequest {\n  /**\n   * <p>The name of the bucket for which to get the payment request configuration</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketRequestPaymentRequest {\n  export const filterSensitiveLog = (obj: GetBucketRequestPaymentRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketTaggingOutput {\n  /**\n   * <p>Contains the tag set.</p>\n   */\n  TagSet: Tag[] | undefined;\n}\n\nexport namespace GetBucketTaggingOutput {\n  export const filterSensitiveLog = (obj: GetBucketTaggingOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketTaggingRequest {\n  /**\n   * <p>The name of the bucket for which to get the tagging information.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketTaggingRequest {\n  export const filterSensitiveLog = (obj: GetBucketTaggingRequest): any => ({\n    ...obj,\n  });\n}\n\nexport type MFADeleteStatus = \"Disabled\" | \"Enabled\";\n\nexport type BucketVersioningStatus = \"Enabled\" | \"Suspended\";\n\nexport interface GetBucketVersioningOutput {\n  /**\n   * <p>The versioning state of the bucket.</p>\n   */\n  Status?: BucketVersioningStatus | string;\n\n  /**\n   * <p>Specifies whether MFA delete is enabled in the bucket versioning configuration. This\n   *          element is only returned if the bucket has been configured with MFA delete. If the bucket\n   *          has never been so configured, this element is not returned.</p>\n   */\n  MFADelete?: MFADeleteStatus | string;\n}\n\nexport namespace GetBucketVersioningOutput {\n  export const filterSensitiveLog = (obj: GetBucketVersioningOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketVersioningRequest {\n  /**\n   * <p>The name of the bucket for which to get the versioning information.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketVersioningRequest {\n  export const filterSensitiveLog = (obj: GetBucketVersioningRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The error information.</p>\n */\nexport interface ErrorDocument {\n  /**\n   * <p>The object key name to use when a 4XX class error occurs.</p>\n   */\n  Key: string | undefined;\n}\n\nexport namespace ErrorDocument {\n  export const filterSensitiveLog = (obj: ErrorDocument): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Container for the <code>Suffix</code> element.</p>\n */\nexport interface IndexDocument {\n  /**\n   * <p>A suffix that is appended to a request that is for a directory on the website endpoint\n   *          (for example,if the suffix is index.html and you make a request to samplebucket/images/ the\n   *          data that is returned will be for the object with the key name images/index.html) The\n   *          suffix must not be empty and must not include a slash character.</p>\n   */\n  Suffix: string | undefined;\n}\n\nexport namespace IndexDocument {\n  export const filterSensitiveLog = (obj: IndexDocument): any => ({\n    ...obj,\n  });\n}\n\nexport type Protocol = \"http\" | \"https\";\n\n/**\n * <p>Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3\n *          bucket.</p>\n */\nexport interface RedirectAllRequestsTo {\n  /**\n   * <p>Name of the host where requests are redirected.</p>\n   */\n  HostName: string | undefined;\n\n  /**\n   * <p>Protocol to use when redirecting requests. The default is the protocol that is used in\n   *          the original request.</p>\n   */\n  Protocol?: Protocol | string;\n}\n\nexport namespace RedirectAllRequestsTo {\n  export const filterSensitiveLog = (obj: RedirectAllRequestsTo): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container for describing a condition that must be met for the specified redirect to\n *          apply. For example, 1. If request is for pages in the <code>/docs</code> folder, redirect\n *          to the <code>/documents</code> folder. 2. If request results in HTTP error 4xx, redirect\n *          request to another host where you might process the error.</p>\n */\nexport interface Condition {\n  /**\n   * <p>The HTTP error code when the redirect is applied. In the event of an error, if the error\n   *          code equals this value, then the specified redirect is applied. Required when parent\n   *          element <code>Condition</code> is specified and sibling <code>KeyPrefixEquals</code> is not\n   *          specified. If both are specified, then both must be true for the redirect to be\n   *          applied.</p>\n   */\n  HttpErrorCodeReturnedEquals?: string;\n\n  /**\n   * <p>The object key name prefix when the redirect is applied. For example, to redirect\n   *          requests for <code>ExamplePage.html</code>, the key prefix will be\n   *             <code>ExamplePage.html</code>. To redirect request for all pages with the prefix\n   *             <code>docs/</code>, the key prefix will be <code>/docs</code>, which identifies all\n   *          objects in the <code>docs/</code> folder. Required when the parent element\n   *             <code>Condition</code> is specified and sibling <code>HttpErrorCodeReturnedEquals</code>\n   *          is not specified. If both conditions are specified, both must be true for the redirect to\n   *          be applied.</p>\n   */\n  KeyPrefixEquals?: string;\n}\n\nexport namespace Condition {\n  export const filterSensitiveLog = (obj: Condition): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies how requests are redirected. In the event of an error, you can specify a\n *          different error code to return.</p>\n */\nexport interface Redirect {\n  /**\n   * <p>The host name to use in the redirect request.</p>\n   */\n  HostName?: string;\n\n  /**\n   * <p>The HTTP redirect code to use on the response. Not required if one of the siblings is\n   *          present.</p>\n   */\n  HttpRedirectCode?: string;\n\n  /**\n   * <p>Protocol to use when redirecting requests. The default is the protocol that is used in\n   *          the original request.</p>\n   */\n  Protocol?: Protocol | string;\n\n  /**\n   * <p>The object key prefix to use in the redirect request. For example, to redirect requests\n   *          for all pages with prefix <code>docs/</code> (objects in the <code>docs/</code> folder) to\n   *             <code>documents/</code>, you can set a condition block with <code>KeyPrefixEquals</code>\n   *          set to <code>docs/</code> and in the Redirect set <code>ReplaceKeyPrefixWith</code> to\n   *             <code>/documents</code>. Not required if one of the siblings is present. Can be present\n   *          only if <code>ReplaceKeyWith</code> is not provided.</p>\n   */\n  ReplaceKeyPrefixWith?: string;\n\n  /**\n   * <p>The specific object key to use in the redirect request. For example, redirect request to\n   *             <code>error.html</code>. Not required if one of the siblings is present. Can be present\n   *          only if <code>ReplaceKeyPrefixWith</code> is not provided.</p>\n   */\n  ReplaceKeyWith?: string;\n}\n\nexport namespace Redirect {\n  export const filterSensitiveLog = (obj: Redirect): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies the redirect behavior and when a redirect is applied. For more information\n *          about routing rules, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html#advanced-conditional-redirects\">Configuring advanced conditional redirects</a> in the\n *             <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n */\nexport interface RoutingRule {\n  /**\n   * <p>A container for describing a condition that must be met for the specified redirect to\n   *          apply. For example, 1. If request is for pages in the <code>/docs</code> folder, redirect\n   *          to the <code>/documents</code> folder. 2. If request results in HTTP error 4xx, redirect\n   *          request to another host where you might process the error.</p>\n   */\n  Condition?: Condition;\n\n  /**\n   * <p>Container for redirect information. You can redirect requests to another host, to\n   *          another page, or with another protocol. In the event of an error, you can specify a\n   *          different error code to return.</p>\n   */\n  Redirect: Redirect | undefined;\n}\n\nexport namespace RoutingRule {\n  export const filterSensitiveLog = (obj: RoutingRule): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketWebsiteOutput {\n  /**\n   * <p>Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3\n   *          bucket.</p>\n   */\n  RedirectAllRequestsTo?: RedirectAllRequestsTo;\n\n  /**\n   * <p>The name of the index document for the website (for example\n   *          <code>index.html</code>).</p>\n   */\n  IndexDocument?: IndexDocument;\n\n  /**\n   * <p>The object key name of the website error document to use for 4XX class errors.</p>\n   */\n  ErrorDocument?: ErrorDocument;\n\n  /**\n   * <p>Rules that define when a redirect is applied and the redirect behavior.</p>\n   */\n  RoutingRules?: RoutingRule[];\n}\n\nexport namespace GetBucketWebsiteOutput {\n  export const filterSensitiveLog = (obj: GetBucketWebsiteOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetBucketWebsiteRequest {\n  /**\n   * <p>The bucket name for which to get the website configuration.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetBucketWebsiteRequest {\n  export const filterSensitiveLog = (obj: GetBucketWebsiteRequest): any => ({\n    ...obj,\n  });\n}\n\nexport type ReplicationStatus = \"COMPLETE\" | \"FAILED\" | \"PENDING\" | \"REPLICA\";\n\nexport interface GetObjectOutput {\n  /**\n   * <p>Object data.</p>\n   */\n  Body?: Readable | ReadableStream | Blob;\n\n  /**\n   * <p>Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If\n   *          false, this response header does not appear in the response.</p>\n   */\n  DeleteMarker?: boolean;\n\n  /**\n   * <p>Indicates that a range of bytes was specified.</p>\n   */\n  AcceptRanges?: string;\n\n  /**\n   * <p>If the object expiration is configured (see PUT Bucket lifecycle), the response includes\n   *          this header. It includes the expiry-date and rule-id key-value pairs providing object\n   *          expiration information. The value of the rule-id is URL encoded.</p>\n   */\n  Expiration?: string;\n\n  /**\n   * <p>Provides information about object restoration operation and expiration time of the\n   *          restored object copy.</p>\n   */\n  Restore?: string;\n\n  /**\n   * <p>Last modified date of the object</p>\n   */\n  LastModified?: Date;\n\n  /**\n   * <p>Size of the body in bytes.</p>\n   */\n  ContentLength?: number;\n\n  /**\n   * <p>An ETag is an opaque identifier assigned by a web server to a specific version of a\n   *          resource found at a URL.</p>\n   */\n  ETag?: string;\n\n  /**\n   * <p>This is set to the number of metadata entries not returned in <code>x-amz-meta</code>\n   *          headers. This can happen if you create metadata using an API like SOAP that supports more\n   *          flexible metadata than the REST API. For example, using SOAP, you can create metadata whose\n   *          values are not legal HTTP headers.</p>\n   */\n  MissingMeta?: number;\n\n  /**\n   * <p>Version of the object.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Specifies caching behavior along the request/reply chain.</p>\n   */\n  CacheControl?: string;\n\n  /**\n   * <p>Specifies presentational information for the object.</p>\n   */\n  ContentDisposition?: string;\n\n  /**\n   * <p>Specifies what content encodings have been applied to the object and thus what decoding\n   *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header\n   *          field.</p>\n   */\n  ContentEncoding?: string;\n\n  /**\n   * <p>The language the content is in.</p>\n   */\n  ContentLanguage?: string;\n\n  /**\n   * <p>The portion of the object returned in the response.</p>\n   */\n  ContentRange?: string;\n\n  /**\n   * <p>A standard MIME type describing the format of the object data.</p>\n   */\n  ContentType?: string;\n\n  /**\n   * <p>The date and time at which the object is no longer cacheable.</p>\n   */\n  Expires?: Date;\n\n  /**\n   * <p>If the bucket is configured as a website, redirects requests for this object to another\n   *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in\n   *          the object metadata.</p>\n   */\n  WebsiteRedirectLocation?: string;\n\n  /**\n   * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,\n   *          AES256, aws:kms).</p>\n   */\n  ServerSideEncryption?: ServerSideEncryption | string;\n\n  /**\n   * <p>A map of metadata to store with the object in S3.</p>\n   */\n  Metadata?: { [key: string]: string };\n\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header confirming the encryption algorithm used.</p>\n   */\n  SSECustomerAlgorithm?: string;\n\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header to provide round-trip message integrity verification of\n   *          the customer-provided encryption key.</p>\n   */\n  SSECustomerKeyMD5?: string;\n\n  /**\n   * <p>If present, specifies the ID of the AWS Key Management Service (AWS KMS) symmetric\n   *          customer managed customer master key (CMK) that was used for the object.</p>\n   */\n  SSEKMSKeyId?: string;\n\n  /**\n   * <p>Indicates whether the object uses an S3 Bucket Key for server-side encryption with AWS KMS (SSE-KMS).</p>\n   */\n  BucketKeyEnabled?: boolean;\n\n  /**\n   * <p>Provides storage class information of the object. Amazon S3 returns this header for all\n   *          objects except for S3 Standard storage class objects.</p>\n   */\n  StorageClass?: StorageClass | string;\n\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n\n  /**\n   * <p>Amazon S3 can return this if your request involves a bucket that is either a source or\n   *          destination in a replication rule.</p>\n   */\n  ReplicationStatus?: ReplicationStatus | string;\n\n  /**\n   * <p>The count of parts this object has.</p>\n   */\n  PartsCount?: number;\n\n  /**\n   * <p>The number of tags, if any, on the object.</p>\n   */\n  TagCount?: number;\n\n  /**\n   * <p>The Object Lock mode currently in place for this object.</p>\n   */\n  ObjectLockMode?: ObjectLockMode | string;\n\n  /**\n   * <p>The date and time when this object's Object Lock will expire.</p>\n   */\n  ObjectLockRetainUntilDate?: Date;\n\n  /**\n   * <p>Indicates whether this object has an active legal hold. This field is only returned if\n   *          you have permission to view an object's legal hold status. </p>\n   */\n  ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;\n}\n\nexport namespace GetObjectOutput {\n  export const filterSensitiveLog = (obj: GetObjectOutput): any => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n  });\n}\n\nexport interface GetObjectRequest {\n  /**\n   * <p>The bucket name containing the object. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Return the object only if its entity tag (ETag) is the same as the one specified,\n   *          otherwise return a 412 (precondition failed).</p>\n   */\n  IfMatch?: string;\n\n  /**\n   * <p>Return the object only if it has been modified since the specified time, otherwise\n   *          return a 304 (not modified).</p>\n   */\n  IfModifiedSince?: Date;\n\n  /**\n   * <p>Return the object only if its entity tag (ETag) is different from the one specified,\n   *          otherwise return a 304 (not modified).</p>\n   */\n  IfNoneMatch?: string;\n\n  /**\n   * <p>Return the object only if it has not been modified since the specified time, otherwise\n   *          return a 412 (precondition failed).</p>\n   */\n  IfUnmodifiedSince?: Date;\n\n  /**\n   * <p>Key of the object to get.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>Downloads the specified range bytes of an object. For more information about the HTTP\n   *          Range header, see <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n   *          <note>\n   *             <p>Amazon S3 doesn't support retrieving multiple ranges of data per <code>GET</code>\n   *             request.</p>\n   *          </note>\n   */\n  Range?: string;\n\n  /**\n   * <p>Sets the <code>Cache-Control</code> header of the response.</p>\n   */\n  ResponseCacheControl?: string;\n\n  /**\n   * <p>Sets the <code>Content-Disposition</code> header of the response</p>\n   */\n  ResponseContentDisposition?: string;\n\n  /**\n   * <p>Sets the <code>Content-Encoding</code> header of the response.</p>\n   */\n  ResponseContentEncoding?: string;\n\n  /**\n   * <p>Sets the <code>Content-Language</code> header of the response.</p>\n   */\n  ResponseContentLanguage?: string;\n\n  /**\n   * <p>Sets the <code>Content-Type</code> header of the response.</p>\n   */\n  ResponseContentType?: string;\n\n  /**\n   * <p>Sets the <code>Expires</code> header of the response.</p>\n   */\n  ResponseExpires?: Date;\n\n  /**\n   * <p>VersionId used to reference a specific version of the object.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Specifies the algorithm to use to when encrypting the object (for example,\n   *          AES256).</p>\n   */\n  SSECustomerAlgorithm?: string;\n\n  /**\n   * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This\n   *          value is used to store the object and then it is discarded; Amazon S3 does not store the\n   *          encryption key. The key must be appropriate for use with the algorithm specified in the\n   *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>\n   */\n  SSECustomerKey?: string;\n\n  /**\n   * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses\n   *          this header for a message integrity check to ensure that the encryption key was transmitted\n   *          without error.</p>\n   */\n  SSECustomerKeyMD5?: string;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>Part number of the object being read. This is a positive integer between 1 and 10,000.\n   *          Effectively performs a 'ranged' GET request for the part specified. Useful for downloading\n   *          just a part of an object.</p>\n   */\n  PartNumber?: number;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetObjectRequest {\n  export const filterSensitiveLog = (obj: GetObjectRequest): any => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n  });\n}\n\n/**\n * <p>Object is archived and inaccessible until restored.</p>\n */\nexport interface InvalidObjectState extends __SmithyException, $MetadataBearer {\n  name: \"InvalidObjectState\";\n  $fault: \"client\";\n  StorageClass?: StorageClass | string;\n  AccessTier?: IntelligentTieringAccessTier | string;\n}\n\nexport namespace InvalidObjectState {\n  export const filterSensitiveLog = (obj: InvalidObjectState): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The specified key does not exist.</p>\n */\nexport interface NoSuchKey extends __SmithyException, $MetadataBearer {\n  name: \"NoSuchKey\";\n  $fault: \"client\";\n}\n\nexport namespace NoSuchKey {\n  export const filterSensitiveLog = (obj: NoSuchKey): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectAclOutput {\n  /**\n   * <p> Container for the bucket owner's display name and ID.</p>\n   */\n  Owner?: Owner;\n\n  /**\n   * <p>A list of grants.</p>\n   */\n  Grants?: Grant[];\n\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace GetObjectAclOutput {\n  export const filterSensitiveLog = (obj: GetObjectAclOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectAclRequest {\n  /**\n   * <p>The bucket name that contains the object for which to get the ACL information. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The key of the object for which to get the ACL information.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>VersionId used to reference a specific version of the object.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetObjectAclRequest {\n  export const filterSensitiveLog = (obj: GetObjectAclRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A Legal Hold configuration for an object.</p>\n */\nexport interface ObjectLockLegalHold {\n  /**\n   * <p>Indicates whether the specified object has a Legal Hold in place.</p>\n   */\n  Status?: ObjectLockLegalHoldStatus | string;\n}\n\nexport namespace ObjectLockLegalHold {\n  export const filterSensitiveLog = (obj: ObjectLockLegalHold): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectLegalHoldOutput {\n  /**\n   * <p>The current Legal Hold status for the specified object.</p>\n   */\n  LegalHold?: ObjectLockLegalHold;\n}\n\nexport namespace GetObjectLegalHoldOutput {\n  export const filterSensitiveLog = (obj: GetObjectLegalHoldOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectLegalHoldRequest {\n  /**\n   * <p>The bucket name containing the object whose Legal Hold status you want to retrieve. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The key name for the object whose Legal Hold status you want to retrieve.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>The version ID of the object whose Legal Hold status you want to retrieve.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetObjectLegalHoldRequest {\n  export const filterSensitiveLog = (obj: GetObjectLegalHoldRequest): any => ({\n    ...obj,\n  });\n}\n\nexport type ObjectLockEnabled = \"Enabled\";\n\nexport type ObjectLockRetentionMode = \"COMPLIANCE\" | \"GOVERNANCE\";\n\n/**\n * <p>The container element for specifying the default Object Lock retention settings for new\n *          objects placed in the specified bucket.</p>\n */\nexport interface DefaultRetention {\n  /**\n   * <p>The default Object Lock retention mode you want to apply to new objects placed in the\n   *          specified bucket.</p>\n   */\n  Mode?: ObjectLockRetentionMode | string;\n\n  /**\n   * <p>The number of days that you want to specify for the default retention period.</p>\n   */\n  Days?: number;\n\n  /**\n   * <p>The number of years that you want to specify for the default retention period.</p>\n   */\n  Years?: number;\n}\n\nexport namespace DefaultRetention {\n  export const filterSensitiveLog = (obj: DefaultRetention): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The container element for an Object Lock rule.</p>\n */\nexport interface ObjectLockRule {\n  /**\n   * <p>The default retention period that you want to apply to new objects placed in the\n   *          specified bucket.</p>\n   */\n  DefaultRetention?: DefaultRetention;\n}\n\nexport namespace ObjectLockRule {\n  export const filterSensitiveLog = (obj: ObjectLockRule): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The container element for Object Lock configuration parameters.</p>\n */\nexport interface ObjectLockConfiguration {\n  /**\n   * <p>Indicates whether this bucket has an Object Lock configuration enabled.</p>\n   */\n  ObjectLockEnabled?: ObjectLockEnabled | string;\n\n  /**\n   * <p>The Object Lock rule in place for the specified object.</p>\n   */\n  Rule?: ObjectLockRule;\n}\n\nexport namespace ObjectLockConfiguration {\n  export const filterSensitiveLog = (obj: ObjectLockConfiguration): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectLockConfigurationOutput {\n  /**\n   * <p>The specified bucket's Object Lock configuration.</p>\n   */\n  ObjectLockConfiguration?: ObjectLockConfiguration;\n}\n\nexport namespace GetObjectLockConfigurationOutput {\n  export const filterSensitiveLog = (obj: GetObjectLockConfigurationOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectLockConfigurationRequest {\n  /**\n   * <p>The bucket whose Object Lock configuration you want to retrieve.</p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetObjectLockConfigurationRequest {\n  export const filterSensitiveLog = (obj: GetObjectLockConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A Retention configuration for an object.</p>\n */\nexport interface ObjectLockRetention {\n  /**\n   * <p>Indicates the Retention mode for the specified object.</p>\n   */\n  Mode?: ObjectLockRetentionMode | string;\n\n  /**\n   * <p>The date on which this Object Lock Retention will expire.</p>\n   */\n  RetainUntilDate?: Date;\n}\n\nexport namespace ObjectLockRetention {\n  export const filterSensitiveLog = (obj: ObjectLockRetention): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectRetentionOutput {\n  /**\n   * <p>The container element for an object's retention settings.</p>\n   */\n  Retention?: ObjectLockRetention;\n}\n\nexport namespace GetObjectRetentionOutput {\n  export const filterSensitiveLog = (obj: GetObjectRetentionOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectRetentionRequest {\n  /**\n   * <p>The bucket name containing the object whose retention settings you want to retrieve. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The key name for the object whose retention settings you want to retrieve.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>The version ID for the object whose retention settings you want to retrieve.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetObjectRetentionRequest {\n  export const filterSensitiveLog = (obj: GetObjectRetentionRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectTaggingOutput {\n  /**\n   * <p>The versionId of the object for which you got the tagging information.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Contains the tag set.</p>\n   */\n  TagSet: Tag[] | undefined;\n}\n\nexport namespace GetObjectTaggingOutput {\n  export const filterSensitiveLog = (obj: GetObjectTaggingOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectTaggingRequest {\n  /**\n   * <p>The bucket name containing the object for which to get the tagging information. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Object key for which to get the tagging information.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>The versionId of the object for which to get the tagging information.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetObjectTaggingRequest {\n  export const filterSensitiveLog = (obj: GetObjectTaggingRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectTorrentOutput {\n  /**\n   * <p>A Bencoded dictionary as defined by the BitTorrent specification</p>\n   */\n  Body?: Readable | ReadableStream | Blob;\n\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace GetObjectTorrentOutput {\n  export const filterSensitiveLog = (obj: GetObjectTorrentOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetObjectTorrentRequest {\n  /**\n   * <p>The name of the bucket containing the object for which to get the torrent files.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The object key for which to get the information.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetObjectTorrentRequest {\n  export const filterSensitiveLog = (obj: GetObjectTorrentRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can\n *          enable the configuration options in any combination. For more information about when Amazon S3\n *          considers a bucket or object public, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status\">The Meaning of \"Public\"</a> in the <i>Amazon Simple Storage Service Developer Guide</i>. </p>\n */\nexport interface PublicAccessBlockConfiguration {\n  /**\n   * <p>Specifies whether Amazon S3 should block public access control lists (ACLs) for this bucket\n   *          and objects in this bucket. Setting this element to <code>TRUE</code> causes the following\n   *          behavior:</p>\n   *          <ul>\n   *             <li>\n   *                <p>PUT Bucket acl and PUT Object acl calls fail if the specified ACL is\n   *                public.</p>\n   *             </li>\n   *             <li>\n   *                <p>PUT Object calls fail if the request includes a public ACL.</p>\n   *             </li>\n   *             <li>\n   *                <p>PUT Bucket calls fail if the request includes a public ACL.</p>\n   *             </li>\n   *          </ul>\n   *          <p>Enabling this setting doesn't affect existing policies or ACLs.</p>\n   */\n  BlockPublicAcls?: boolean;\n\n  /**\n   * <p>Specifies whether Amazon S3 should ignore public ACLs for this bucket and objects in this\n   *          bucket. Setting this element to <code>TRUE</code> causes Amazon S3 to ignore all public ACLs on\n   *          this bucket and objects in this bucket.</p>\n   *          <p>Enabling this setting doesn't affect the persistence of any existing ACLs and doesn't\n   *          prevent new public ACLs from being set.</p>\n   */\n  IgnorePublicAcls?: boolean;\n\n  /**\n   * <p>Specifies whether Amazon S3 should block public bucket policies for this bucket. Setting this\n   *          element to <code>TRUE</code> causes Amazon S3 to reject calls to PUT Bucket policy if the\n   *          specified bucket policy allows public access. </p>\n   *          <p>Enabling this setting doesn't affect existing bucket policies.</p>\n   */\n  BlockPublicPolicy?: boolean;\n\n  /**\n   * <p>Specifies whether Amazon S3 should restrict public bucket policies for this bucket. Setting\n   *          this element to <code>TRUE</code> restricts access to this bucket to only AWS service\n   *          principals and authorized users within this account if the bucket has a public\n   *          policy.</p>\n   *          <p>Enabling this setting doesn't affect previously stored bucket policies, except that\n   *          public and cross-account access within any public bucket policy, including non-public\n   *          delegation to specific accounts, is blocked.</p>\n   */\n  RestrictPublicBuckets?: boolean;\n}\n\nexport namespace PublicAccessBlockConfiguration {\n  export const filterSensitiveLog = (obj: PublicAccessBlockConfiguration): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetPublicAccessBlockOutput {\n  /**\n   * <p>The <code>PublicAccessBlock</code> configuration currently in effect for this Amazon S3\n   *          bucket.</p>\n   */\n  PublicAccessBlockConfiguration?: PublicAccessBlockConfiguration;\n}\n\nexport namespace GetPublicAccessBlockOutput {\n  export const filterSensitiveLog = (obj: GetPublicAccessBlockOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface GetPublicAccessBlockRequest {\n  /**\n   * <p>The name of the Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want\n   *          to retrieve. </p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace GetPublicAccessBlockRequest {\n  export const filterSensitiveLog = (obj: GetPublicAccessBlockRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface HeadBucketRequest {\n  /**\n   * <p>The bucket name.</p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace HeadBucketRequest {\n  export const filterSensitiveLog = (obj: HeadBucketRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The specified bucket does not exist.</p>\n */\nexport interface NoSuchBucket extends __SmithyException, $MetadataBearer {\n  name: \"NoSuchBucket\";\n  $fault: \"client\";\n}\n\nexport namespace NoSuchBucket {\n  export const filterSensitiveLog = (obj: NoSuchBucket): any => ({\n    ...obj,\n  });\n}\n\nexport type ArchiveStatus = \"ARCHIVE_ACCESS\" | \"DEEP_ARCHIVE_ACCESS\";\n\nexport interface HeadObjectOutput {\n  /**\n   * <p>Specifies whether the object retrieved was (true) or was not (false) a Delete Marker. If\n   *          false, this response header does not appear in the response.</p>\n   */\n  DeleteMarker?: boolean;\n\n  /**\n   * <p>Indicates that a range of bytes was specified.</p>\n   */\n  AcceptRanges?: string;\n\n  /**\n   * <p>If the object expiration is configured (see PUT Bucket lifecycle), the response includes\n   *          this header. It includes the expiry-date and rule-id key-value pairs providing object\n   *          expiration information. The value of the rule-id is URL encoded.</p>\n   */\n  Expiration?: string;\n\n  /**\n   * <p>If the object is an archived object (an object whose storage class is GLACIER), the\n   *          response includes this header if either the archive restoration is in progress (see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_RestoreObject.html\">RestoreObject</a> or an archive copy is already restored.</p>\n   *\n   *          <p> If an archive copy is already restored, the header value indicates when Amazon S3 is\n   *          scheduled to delete the object copy. For example:</p>\n   *\n   *          <p>\n   *             <code>x-amz-restore: ongoing-request=\"false\", expiry-date=\"Fri, 23 Dec 2012 00:00:00\n   *             GMT\"</code>\n   *          </p>\n   *\n   *          <p>If the object restoration is in progress, the header returns the value\n   *             <code>ongoing-request=\"true\"</code>.</p>\n   *\n   *          <p>For more information about archiving objects, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html#lifecycle-transition-general-considerations\">Transitioning Objects: General Considerations</a>.</p>\n   */\n  Restore?: string;\n\n  /**\n   * <p>The archive state of the head object.</p>\n   */\n  ArchiveStatus?: ArchiveStatus | string;\n\n  /**\n   * <p>Last modified date of the object</p>\n   */\n  LastModified?: Date;\n\n  /**\n   * <p>Size of the body in bytes.</p>\n   */\n  ContentLength?: number;\n\n  /**\n   * <p>An ETag is an opaque identifier assigned by a web server to a specific version of a\n   *          resource found at a URL.</p>\n   */\n  ETag?: string;\n\n  /**\n   * <p>This is set to the number of metadata entries not returned in <code>x-amz-meta</code>\n   *          headers. This can happen if you create metadata using an API like SOAP that supports more\n   *          flexible metadata than the REST API. For example, using SOAP, you can create metadata whose\n   *          values are not legal HTTP headers.</p>\n   */\n  MissingMeta?: number;\n\n  /**\n   * <p>Version of the object.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Specifies caching behavior along the request/reply chain.</p>\n   */\n  CacheControl?: string;\n\n  /**\n   * <p>Specifies presentational information for the object.</p>\n   */\n  ContentDisposition?: string;\n\n  /**\n   * <p>Specifies what content encodings have been applied to the object and thus what decoding\n   *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header\n   *          field.</p>\n   */\n  ContentEncoding?: string;\n\n  /**\n   * <p>The language the content is in.</p>\n   */\n  ContentLanguage?: string;\n\n  /**\n   * <p>A standard MIME type describing the format of the object data.</p>\n   */\n  ContentType?: string;\n\n  /**\n   * <p>The date and time at which the object is no longer cacheable.</p>\n   */\n  Expires?: Date;\n\n  /**\n   * <p>If the bucket is configured as a website, redirects requests for this object to another\n   *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in\n   *          the object metadata.</p>\n   */\n  WebsiteRedirectLocation?: string;\n\n  /**\n   * <p>If the object is stored using server-side encryption either with an AWS KMS customer\n   *          master key (CMK) or an Amazon S3-managed encryption key, the response includes this header with\n   *          the value of the server-side encryption algorithm used when storing this object in Amazon\n   *          S3 (for example, AES256, aws:kms).</p>\n   */\n  ServerSideEncryption?: ServerSideEncryption | string;\n\n  /**\n   * <p>A map of metadata to store with the object in S3.</p>\n   */\n  Metadata?: { [key: string]: string };\n\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header confirming the encryption algorithm used.</p>\n   */\n  SSECustomerAlgorithm?: string;\n\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header to provide round-trip message integrity verification of\n   *          the customer-provided encryption key.</p>\n   */\n  SSECustomerKeyMD5?: string;\n\n  /**\n   * <p>If present, specifies the ID of the AWS Key Management Service (AWS KMS) symmetric\n   *          customer managed customer master key (CMK) that was used for the object.</p>\n   */\n  SSEKMSKeyId?: string;\n\n  /**\n   * <p>Indicates whether the object uses an S3 Bucket Key for server-side encryption with AWS KMS (SSE-KMS).</p>\n   */\n  BucketKeyEnabled?: boolean;\n\n  /**\n   * <p>Provides storage class information of the object. Amazon S3 returns this header for all\n   *          objects except for S3 Standard storage class objects.</p>\n   *\n   *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage\n   *             Classes</a>.</p>\n   */\n  StorageClass?: StorageClass | string;\n\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n\n  /**\n   * <p>Amazon S3 can return this header if your request involves a bucket that is either a source or\n   *          a destination in a replication rule.</p>\n   *\n   *          <p>In replication, you have a source bucket on which you configure replication and\n   *          destination bucket or buckets where Amazon S3 stores object replicas. When you request an object\n   *             (<code>GetObject</code>) or object metadata (<code>HeadObject</code>) from these\n   *          buckets, Amazon S3 will return the <code>x-amz-replication-status</code> header in the response\n   *          as follows:</p>\n   *          <ul>\n   *             <li>\n   *                <p>If requesting an object from the source bucket — Amazon S3 will return the\n   *                   <code>x-amz-replication-status</code> header if the object in your request is\n   *                eligible for replication.</p>\n   *                <p> For example, suppose that in your replication configuration, you specify object\n   *                prefix <code>TaxDocs</code> requesting Amazon S3 to replicate objects with key prefix\n   *                   <code>TaxDocs</code>. Any objects you upload with this key name prefix, for\n   *                example <code>TaxDocs/document1.pdf</code>, are eligible for replication. For any\n   *                object request with this key name prefix, Amazon S3 will return the\n   *                   <code>x-amz-replication-status</code> header with value PENDING, COMPLETED or\n   *                FAILED indicating object replication status.</p>\n   *             </li>\n   *             <li>\n   *                <p>If requesting an object from a destination bucket — Amazon S3 will return the\n   *                   <code>x-amz-replication-status</code> header with value REPLICA if the object in\n   *                your request is a replica that Amazon S3 created and there is no replica modification\n   *                replication in progress.</p>\n   *             </li>\n   *             <li>\n   *                <p>When replicating objects to multiple destination buckets the\n   *                   <code>x-amz-replication-status</code> header acts differently. The header of the\n   *                source object will only return a value of COMPLETED when replication is successful to\n   *                all destinations. The header will remain at value PENDING until replication has\n   *                completed for all destinations. If one or more destinations fails replication the\n   *                header will return FAILED. </p>\n   *             </li>\n   *          </ul>\n   *\n   *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html\">Replication</a>.</p>\n   */\n  ReplicationStatus?: ReplicationStatus | string;\n\n  /**\n   * <p>The count of parts this object has.</p>\n   */\n  PartsCount?: number;\n\n  /**\n   * <p>The Object Lock mode, if any, that's in effect for this object. This header is only\n   *          returned if the requester has the <code>s3:GetObjectRetention</code> permission. For more\n   *          information about S3 Object Lock, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html\">Object\n   *             Lock</a>. </p>\n   */\n  ObjectLockMode?: ObjectLockMode | string;\n\n  /**\n   * <p>The date and time when the Object Lock retention period expires. This header is only\n   *          returned if the requester has the <code>s3:GetObjectRetention</code> permission.</p>\n   */\n  ObjectLockRetainUntilDate?: Date;\n\n  /**\n   * <p>Specifies whether a legal hold is in effect for this object. This header is only\n   *          returned if the requester has the <code>s3:GetObjectLegalHold</code> permission. This\n   *          header is not returned if the specified version of this object has never had a legal hold\n   *          applied. For more information about S3 Object Lock, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html\">Object Lock</a>.</p>\n   */\n  ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;\n}\n\nexport namespace HeadObjectOutput {\n  export const filterSensitiveLog = (obj: HeadObjectOutput): any => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n  });\n}\n\nexport interface HeadObjectRequest {\n  /**\n   * <p>The name of the bucket containing the object.</p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Return the object only if its entity tag (ETag) is the same as the one specified,\n   *          otherwise return a 412 (precondition failed).</p>\n   */\n  IfMatch?: string;\n\n  /**\n   * <p>Return the object only if it has been modified since the specified time, otherwise\n   *          return a 304 (not modified).</p>\n   */\n  IfModifiedSince?: Date;\n\n  /**\n   * <p>Return the object only if its entity tag (ETag) is different from the one specified,\n   *          otherwise return a 304 (not modified).</p>\n   */\n  IfNoneMatch?: string;\n\n  /**\n   * <p>Return the object only if it has not been modified since the specified time, otherwise\n   *          return a 412 (precondition failed).</p>\n   */\n  IfUnmodifiedSince?: Date;\n\n  /**\n   * <p>The object key.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>Downloads the specified range bytes of an object. For more information about the HTTP\n   *          Range header, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\n   *          <note>\n   *             <p>Amazon S3 doesn't support retrieving multiple ranges of data per <code>GET</code>\n   *             request.</p>\n   *          </note>\n   */\n  Range?: string;\n\n  /**\n   * <p>VersionId used to reference a specific version of the object.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Specifies the algorithm to use to when encrypting the object (for example,\n   *          AES256).</p>\n   */\n  SSECustomerAlgorithm?: string;\n\n  /**\n   * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This\n   *          value is used to store the object and then it is discarded; Amazon S3 does not store the\n   *          encryption key. The key must be appropriate for use with the algorithm specified in the\n   *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>\n   */\n  SSECustomerKey?: string;\n\n  /**\n   * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses\n   *          this header for a message integrity check to ensure that the encryption key was transmitted\n   *          without error.</p>\n   */\n  SSECustomerKeyMD5?: string;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>Part number of the object being read. This is a positive integer between 1 and 10,000.\n   *          Effectively performs a 'ranged' HEAD request for the part specified. Useful querying about\n   *          the size of the part and the number of parts in this object.</p>\n   */\n  PartNumber?: number;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace HeadObjectRequest {\n  export const filterSensitiveLog = (obj: HeadObjectRequest): any => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n  });\n}\n\nexport interface ListBucketAnalyticsConfigurationsOutput {\n  /**\n   * <p>Indicates whether the returned list of analytics configurations is complete. A value of\n   *          true indicates that the list is not complete and the NextContinuationToken will be provided\n   *          for a subsequent request.</p>\n   */\n  IsTruncated?: boolean;\n\n  /**\n   * <p>The marker that is used as a starting point for this analytics configuration list\n   *          response. This value is present if it was sent in the request.</p>\n   */\n  ContinuationToken?: string;\n\n  /**\n   * <p>\n   *             <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which\n   *          indicates that there are more analytics configurations to list. The next request must\n   *          include this <code>NextContinuationToken</code>. The token is obfuscated and is not a\n   *          usable value.</p>\n   */\n  NextContinuationToken?: string;\n\n  /**\n   * <p>The list of analytics configurations for a bucket.</p>\n   */\n  AnalyticsConfigurationList?: AnalyticsConfiguration[];\n}\n\nexport namespace ListBucketAnalyticsConfigurationsOutput {\n  export const filterSensitiveLog = (obj: ListBucketAnalyticsConfigurationsOutput): any => ({\n    ...obj,\n    ...(obj.AnalyticsConfigurationList && {\n      AnalyticsConfigurationList: obj.AnalyticsConfigurationList.map((item) =>\n        AnalyticsConfiguration.filterSensitiveLog(item)\n      ),\n    }),\n  });\n}\n\nexport interface ListBucketAnalyticsConfigurationsRequest {\n  /**\n   * <p>The name of the bucket from which analytics configurations are retrieved.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ContinuationToken that represents a placeholder from where this request should\n   *          begin.</p>\n   */\n  ContinuationToken?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace ListBucketAnalyticsConfigurationsRequest {\n  export const filterSensitiveLog = (obj: ListBucketAnalyticsConfigurationsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListBucketIntelligentTieringConfigurationsOutput {\n  /**\n   * <p>Indicates whether the returned list of analytics configurations is complete. A value of\n   *          true indicates that the list is not complete and the NextContinuationToken will be provided\n   *          for a subsequent request.</p>\n   */\n  IsTruncated?: boolean;\n\n  /**\n   * <p>The ContinuationToken that represents a placeholder from where this request should\n   *          begin.</p>\n   */\n  ContinuationToken?: string;\n\n  /**\n   * <p>The marker used to continue this inventory configuration listing. Use the\n   *             <code>NextContinuationToken</code> from this response to continue the listing in a\n   *          subsequent request. The continuation token is an opaque value that Amazon S3 understands.</p>\n   */\n  NextContinuationToken?: string;\n\n  /**\n   * <p>The list of S3 Intelligent-Tiering configurations for a bucket.</p>\n   */\n  IntelligentTieringConfigurationList?: IntelligentTieringConfiguration[];\n}\n\nexport namespace ListBucketIntelligentTieringConfigurationsOutput {\n  export const filterSensitiveLog = (obj: ListBucketIntelligentTieringConfigurationsOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListBucketIntelligentTieringConfigurationsRequest {\n  /**\n   * <p>The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ContinuationToken that represents a placeholder from where this request should\n   *          begin.</p>\n   */\n  ContinuationToken?: string;\n}\n\nexport namespace ListBucketIntelligentTieringConfigurationsRequest {\n  export const filterSensitiveLog = (obj: ListBucketIntelligentTieringConfigurationsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListBucketInventoryConfigurationsOutput {\n  /**\n   * <p>If sent in the request, the marker that is used as a starting point for this inventory\n   *          configuration list response.</p>\n   */\n  ContinuationToken?: string;\n\n  /**\n   * <p>The list of inventory configurations for a bucket.</p>\n   */\n  InventoryConfigurationList?: InventoryConfiguration[];\n\n  /**\n   * <p>Tells whether the returned list of inventory configurations is complete. A value of true\n   *          indicates that the list is not complete and the NextContinuationToken is provided for a\n   *          subsequent request.</p>\n   */\n  IsTruncated?: boolean;\n\n  /**\n   * <p>The marker used to continue this inventory configuration listing. Use the\n   *             <code>NextContinuationToken</code> from this response to continue the listing in a\n   *          subsequent request. The continuation token is an opaque value that Amazon S3 understands.</p>\n   */\n  NextContinuationToken?: string;\n}\n\nexport namespace ListBucketInventoryConfigurationsOutput {\n  export const filterSensitiveLog = (obj: ListBucketInventoryConfigurationsOutput): any => ({\n    ...obj,\n    ...(obj.InventoryConfigurationList && {\n      InventoryConfigurationList: obj.InventoryConfigurationList.map((item) =>\n        InventoryConfiguration.filterSensitiveLog(item)\n      ),\n    }),\n  });\n}\n\nexport interface ListBucketInventoryConfigurationsRequest {\n  /**\n   * <p>The name of the bucket containing the inventory configurations to retrieve.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The marker used to continue an inventory configuration listing that has been truncated.\n   *          Use the NextContinuationToken from a previously truncated list response to continue the\n   *          listing. The continuation token is an opaque value that Amazon S3 understands.</p>\n   */\n  ContinuationToken?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace ListBucketInventoryConfigurationsRequest {\n  export const filterSensitiveLog = (obj: ListBucketInventoryConfigurationsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListBucketMetricsConfigurationsOutput {\n  /**\n   * <p>Indicates whether the returned list of metrics configurations is complete. A value of\n   *          true indicates that the list is not complete and the NextContinuationToken will be provided\n   *          for a subsequent request.</p>\n   */\n  IsTruncated?: boolean;\n\n  /**\n   * <p>The marker that is used as a starting point for this metrics configuration list\n   *          response. This value is present if it was sent in the request.</p>\n   */\n  ContinuationToken?: string;\n\n  /**\n   * <p>The marker used to continue a metrics configuration listing that has been truncated. Use\n   *          the <code>NextContinuationToken</code> from a previously truncated list response to\n   *          continue the listing. The continuation token is an opaque value that Amazon S3\n   *          understands.</p>\n   */\n  NextContinuationToken?: string;\n\n  /**\n   * <p>The list of metrics configurations for a bucket.</p>\n   */\n  MetricsConfigurationList?: MetricsConfiguration[];\n}\n\nexport namespace ListBucketMetricsConfigurationsOutput {\n  export const filterSensitiveLog = (obj: ListBucketMetricsConfigurationsOutput): any => ({\n    ...obj,\n    ...(obj.MetricsConfigurationList && {\n      MetricsConfigurationList: obj.MetricsConfigurationList.map((item) =>\n        MetricsConfiguration.filterSensitiveLog(item)\n      ),\n    }),\n  });\n}\n\nexport interface ListBucketMetricsConfigurationsRequest {\n  /**\n   * <p>The name of the bucket containing the metrics configurations to retrieve.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The marker that is used to continue a metrics configuration listing that has been\n   *          truncated. Use the NextContinuationToken from a previously truncated list response to\n   *          continue the listing. The continuation token is an opaque value that Amazon S3\n   *          understands.</p>\n   */\n  ContinuationToken?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace ListBucketMetricsConfigurationsRequest {\n  export const filterSensitiveLog = (obj: ListBucketMetricsConfigurationsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p> In terms of implementation, a Bucket is a resource. An Amazon S3 bucket name is globally\n *          unique, and the namespace is shared by all AWS accounts. </p>\n */\nexport interface Bucket {\n  /**\n   * <p>The name of the bucket.</p>\n   */\n  Name?: string;\n\n  /**\n   * <p>Date the bucket was created. This date can change when making changes to your bucket, such as editing its bucket policy.</p>\n   */\n  CreationDate?: Date;\n}\n\nexport namespace Bucket {\n  export const filterSensitiveLog = (obj: Bucket): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListBucketsOutput {\n  /**\n   * <p>The list of buckets owned by the requestor.</p>\n   */\n  Buckets?: Bucket[];\n\n  /**\n   * <p>The owner of the buckets listed.</p>\n   */\n  Owner?: Owner;\n}\n\nexport namespace ListBucketsOutput {\n  export const filterSensitiveLog = (obj: ListBucketsOutput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Container for all (if there are any) keys between Prefix and the next occurrence of the\n *          string specified by a delimiter. CommonPrefixes lists keys that act like subdirectories in\n *          the directory specified by Prefix. For example, if the prefix is notes/ and the delimiter\n *          is a slash (/) as in notes/summer/july, the common prefix is notes/summer/. </p>\n */\nexport interface CommonPrefix {\n  /**\n   * <p>Container for the specified common prefix.</p>\n   */\n  Prefix?: string;\n}\n\nexport namespace CommonPrefix {\n  export const filterSensitiveLog = (obj: CommonPrefix): any => ({\n    ...obj,\n  });\n}\n\nexport type EncodingType = \"url\";\n\n/**\n * <p>Container element that identifies who initiated the multipart upload. </p>\n */\nexport interface Initiator {\n  /**\n   * <p>If the principal is an AWS account, it provides the Canonical User ID. If the principal\n   *          is an IAM User, it provides a user ARN value.</p>\n   */\n  ID?: string;\n\n  /**\n   * <p>Name of the Principal.</p>\n   */\n  DisplayName?: string;\n}\n\nexport namespace Initiator {\n  export const filterSensitiveLog = (obj: Initiator): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Container for the <code>MultipartUpload</code> for the Amazon S3 object.</p>\n */\nexport interface MultipartUpload {\n  /**\n   * <p>Upload ID that identifies the multipart upload.</p>\n   */\n  UploadId?: string;\n\n  /**\n   * <p>Key of the object for which the multipart upload was initiated.</p>\n   */\n  Key?: string;\n\n  /**\n   * <p>Date and time at which the multipart upload was initiated.</p>\n   */\n  Initiated?: Date;\n\n  /**\n   * <p>The class of storage used to store the object.</p>\n   */\n  StorageClass?: StorageClass | string;\n\n  /**\n   * <p>Specifies the owner of the object that is part of the multipart upload. </p>\n   */\n  Owner?: Owner;\n\n  /**\n   * <p>Identifies who initiated the multipart upload.</p>\n   */\n  Initiator?: Initiator;\n}\n\nexport namespace MultipartUpload {\n  export const filterSensitiveLog = (obj: MultipartUpload): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListMultipartUploadsOutput {\n  /**\n   * <p>The name of the bucket to which the multipart upload was initiated.</p>\n   */\n  Bucket?: string;\n\n  /**\n   * <p>The key at or after which the listing began.</p>\n   */\n  KeyMarker?: string;\n\n  /**\n   * <p>Upload ID after which listing began.</p>\n   */\n  UploadIdMarker?: string;\n\n  /**\n   * <p>When a list is truncated, this element specifies the value that should be used for the\n   *          key-marker request parameter in a subsequent request.</p>\n   */\n  NextKeyMarker?: string;\n\n  /**\n   * <p>When a prefix is provided in the request, this field contains the specified prefix. The\n   *          result contains only keys starting with the specified prefix.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>Contains the delimiter you specified in the request. If you don't specify a delimiter in\n   *          your request, this element is absent from the response.</p>\n   */\n  Delimiter?: string;\n\n  /**\n   * <p>When a list is truncated, this element specifies the value that should be used for the\n   *             <code>upload-id-marker</code> request parameter in a subsequent request.</p>\n   */\n  NextUploadIdMarker?: string;\n\n  /**\n   * <p>Maximum number of multipart uploads that could have been included in the\n   *          response.</p>\n   */\n  MaxUploads?: number;\n\n  /**\n   * <p>Indicates whether the returned list of multipart uploads is truncated. A value of true\n   *          indicates that the list was truncated. The list can be truncated if the number of multipart\n   *          uploads exceeds the limit allowed or specified by max uploads.</p>\n   */\n  IsTruncated?: boolean;\n\n  /**\n   * <p>Container for elements related to a particular multipart upload. A response can contain\n   *          zero or more <code>Upload</code> elements.</p>\n   */\n  Uploads?: MultipartUpload[];\n\n  /**\n   * <p>If you specify a delimiter in the request, then the result returns each distinct key\n   *          prefix containing the delimiter in a <code>CommonPrefixes</code> element. The distinct key\n   *          prefixes are returned in the <code>Prefix</code> child element.</p>\n   */\n  CommonPrefixes?: CommonPrefix[];\n\n  /**\n   * <p>Encoding type used by Amazon S3 to encode object keys in the response.</p>\n   *          <p>If you specify <code>encoding-type</code> request parameter, Amazon S3 includes this element\n   *          in the response, and returns encoded key name values in the following response\n   *          elements:</p>\n   *\n   *          <p>\n   *             <code>Delimiter</code>, <code>KeyMarker</code>, <code>Prefix</code>,\n   *             <code>NextKeyMarker</code>, <code>Key</code>.</p>\n   */\n  EncodingType?: EncodingType | string;\n}\n\nexport namespace ListMultipartUploadsOutput {\n  export const filterSensitiveLog = (obj: ListMultipartUploadsOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListMultipartUploadsRequest {\n  /**\n   * <p>The name of the bucket to which the multipart upload was initiated. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Character you use to group keys.</p>\n   *          <p>All keys that contain the same string between the prefix, if specified, and the first\n   *          occurrence of the delimiter after the prefix are grouped under a single result element,\n   *             <code>CommonPrefixes</code>. If you don't specify the prefix parameter, then the\n   *          substring starts at the beginning of the key. The keys that are grouped under\n   *             <code>CommonPrefixes</code> result element are not returned elsewhere in the\n   *          response.</p>\n   */\n  Delimiter?: string;\n\n  /**\n   * <p>Requests Amazon S3 to encode the object keys in the response and specifies the encoding\n   *          method to use. An object key may contain any Unicode character; however, XML 1.0 parser\n   *          cannot parse some characters, such as characters with an ASCII value from 0 to 10. For\n   *          characters that are not supported in XML 1.0, you can add this parameter to request that\n   *          Amazon S3 encode the keys in the response.</p>\n   */\n  EncodingType?: EncodingType | string;\n\n  /**\n   * <p>Together with upload-id-marker, this parameter specifies the multipart upload after\n   *          which listing should begin.</p>\n   *          <p>If <code>upload-id-marker</code> is not specified, only the keys lexicographically\n   *          greater than the specified <code>key-marker</code> will be included in the list.</p>\n   *\n   *          <p>If <code>upload-id-marker</code> is specified, any multipart uploads for a key equal to\n   *          the <code>key-marker</code> might also be included, provided those multipart uploads have\n   *          upload IDs lexicographically greater than the specified\n   *          <code>upload-id-marker</code>.</p>\n   */\n  KeyMarker?: string;\n\n  /**\n   * <p>Sets the maximum number of multipart uploads, from 1 to 1,000, to return in the response\n   *          body. 1,000 is the maximum number of uploads that can be returned in a response.</p>\n   */\n  MaxUploads?: number;\n\n  /**\n   * <p>Lists in-progress uploads only for those keys that begin with the specified prefix. You\n   *          can use prefixes to separate a bucket into different grouping of keys. (You can think of\n   *          using prefix to make groups in the same way you'd use a folder in a file system.)</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>Together with key-marker, specifies the multipart upload after which listing should\n   *          begin. If key-marker is not specified, the upload-id-marker parameter is ignored.\n   *          Otherwise, any multipart uploads for a key equal to the key-marker might be included in the\n   *          list only if they have an upload ID lexicographically greater than the specified\n   *             <code>upload-id-marker</code>.</p>\n   */\n  UploadIdMarker?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace ListMultipartUploadsRequest {\n  export const filterSensitiveLog = (obj: ListMultipartUploadsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport type ObjectStorageClass =\n  | \"DEEP_ARCHIVE\"\n  | \"GLACIER\"\n  | \"INTELLIGENT_TIERING\"\n  | \"ONEZONE_IA\"\n  | \"OUTPOSTS\"\n  | \"REDUCED_REDUNDANCY\"\n  | \"STANDARD\"\n  | \"STANDARD_IA\";\n\n/**\n * <p>An object consists of data and its descriptive metadata.</p>\n */\nexport interface _Object {\n  /**\n   * <p>The name that you assign to an object. You use the object key to retrieve the\n   *          object.</p>\n   */\n  Key?: string;\n\n  /**\n   * <p>The date the Object was Last Modified</p>\n   */\n  LastModified?: Date;\n\n  /**\n   * <p>The entity tag is a hash of the object. The ETag reflects changes only to the contents\n   *          of an object, not its metadata. The ETag may or may not be an MD5 digest of the object\n   *          data. Whether or not it is depends on how the object was created and how it is encrypted as\n   *          described below:</p>\n   *          <ul>\n   *             <li>\n   *                <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the\n   *                AWS Management Console, and are encrypted by SSE-S3 or plaintext, have ETags that are\n   *                an MD5 digest of their object data.</p>\n   *             </li>\n   *             <li>\n   *                <p>Objects created by the PUT Object, POST Object, or Copy operation, or through the\n   *                AWS Management Console, and are encrypted by SSE-C or SSE-KMS, have ETags that are\n   *                not an MD5 digest of their object data.</p>\n   *             </li>\n   *             <li>\n   *                <p>If an object is created by either the Multipart Upload or Part Copy operation, the\n   *                ETag is not an MD5 digest, regardless of the method of encryption.</p>\n   *             </li>\n   *          </ul>\n   */\n  ETag?: string;\n\n  /**\n   * <p>Size in bytes of the object</p>\n   */\n  Size?: number;\n\n  /**\n   * <p>The class of storage used to store the object.</p>\n   */\n  StorageClass?: ObjectStorageClass | string;\n\n  /**\n   * <p>The owner of the object</p>\n   */\n  Owner?: Owner;\n}\n\nexport namespace _Object {\n  export const filterSensitiveLog = (obj: _Object): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListObjectsOutput {\n  /**\n   * <p>A flag that indicates whether Amazon S3 returned all of the results that satisfied the search\n   *          criteria.</p>\n   */\n  IsTruncated?: boolean;\n\n  /**\n   * <p>Indicates where in the bucket listing begins. Marker is included in the response if it\n   *          was sent with the request.</p>\n   */\n  Marker?: string;\n\n  /**\n   * <p>When response is truncated (the IsTruncated element value in the response is true), you\n   *          can use the key name in this field as marker in the subsequent request to get next set of\n   *          objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if\n   *          you have delimiter request parameter specified. If response does not include the NextMarker\n   *          and it is truncated, you can use the value of the last Key in the response as the marker in\n   *          the subsequent request to get the next set of object keys.</p>\n   */\n  NextMarker?: string;\n\n  /**\n   * <p>Metadata about each object returned.</p>\n   */\n  Contents?: _Object[];\n\n  /**\n   * <p>The bucket name.</p>\n   */\n  Name?: string;\n\n  /**\n   * <p>Keys that begin with the indicated prefix.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>Causes keys that contain the same string between the prefix and the first occurrence of\n   *          the delimiter to be rolled up into a single result element in the\n   *             <code>CommonPrefixes</code> collection. These rolled-up keys are not returned elsewhere\n   *          in the response. Each rolled-up result counts as only one return against the\n   *             <code>MaxKeys</code> value.</p>\n   */\n  Delimiter?: string;\n\n  /**\n   * <p>The maximum number of keys returned in the response body.</p>\n   */\n  MaxKeys?: number;\n\n  /**\n   * <p>All of the keys rolled up in a common prefix count as a single return when calculating\n   *          the number of returns. </p>\n   *\n   *          <p>A response can contain CommonPrefixes only if you specify a delimiter.</p>\n   *\n   *          <p>CommonPrefixes contains all (if there are any) keys between Prefix and the next\n   *          occurrence of the string specified by the delimiter.</p>\n   *\n   *          <p> CommonPrefixes lists keys that act like subdirectories in the directory specified by\n   *          Prefix.</p>\n   *\n   *          <p>For example, if the prefix is notes/ and the delimiter is a slash (/) as in\n   *          notes/summer/july, the common prefix is notes/summer/. All of the keys that roll up into a\n   *          common prefix count as a single return when calculating the number of returns.</p>\n   */\n  CommonPrefixes?: CommonPrefix[];\n\n  /**\n   * <p>Encoding type used by Amazon S3 to encode object keys in the response.</p>\n   */\n  EncodingType?: EncodingType | string;\n}\n\nexport namespace ListObjectsOutput {\n  export const filterSensitiveLog = (obj: ListObjectsOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListObjectsRequest {\n  /**\n   * <p>The name of the bucket containing the objects.</p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>A delimiter is a character you use to group keys.</p>\n   */\n  Delimiter?: string;\n\n  /**\n   * <p>Requests Amazon S3 to encode the object keys in the response and specifies the encoding\n   *          method to use. An object key may contain any Unicode character; however, XML 1.0 parser\n   *          cannot parse some characters, such as characters with an ASCII value from 0 to 10. For\n   *          characters that are not supported in XML 1.0, you can add this parameter to request that\n   *          Amazon S3 encode the keys in the response.</p>\n   */\n  EncodingType?: EncodingType | string;\n\n  /**\n   * <p>Specifies the key to start with when listing objects in a bucket.</p>\n   */\n  Marker?: string;\n\n  /**\n   * <p>Sets the maximum number of keys returned in the response. By default the API returns up\n   *          to 1,000 key names. The response might contain fewer keys but will never contain more.\n   *       </p>\n   */\n  MaxKeys?: number;\n\n  /**\n   * <p>Limits the response to keys that begin with the specified prefix.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>Confirms that the requester knows that she or he will be charged for the list objects\n   *          request. Bucket owners need not specify this parameter in their requests.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace ListObjectsRequest {\n  export const filterSensitiveLog = (obj: ListObjectsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListObjectsV2Output {\n  /**\n   * <p>Set to false if all of the results were returned. Set to true if more keys are available\n   *          to return. If the number of results exceeds that specified by MaxKeys, all of the results\n   *          might not be returned.</p>\n   */\n  IsTruncated?: boolean;\n\n  /**\n   * <p>Metadata about each object returned.</p>\n   */\n  Contents?: _Object[];\n\n  /**\n   * <p>The bucket name.</p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Name?: string;\n\n  /**\n   * <p> Keys that begin with the indicated prefix.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>Causes keys that contain the same string between the prefix and the first occurrence of\n   *          the delimiter to be rolled up into a single result element in the CommonPrefixes\n   *          collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up\n   *          result counts as only one return against the <code>MaxKeys</code> value.</p>\n   */\n  Delimiter?: string;\n\n  /**\n   * <p>Sets the maximum number of keys returned in the response. By default the API returns up\n   *          to 1,000 key names. The response might contain fewer keys but will never contain\n   *          more.</p>\n   */\n  MaxKeys?: number;\n\n  /**\n   * <p>All of the keys rolled up into a common prefix count as a single return when calculating\n   *          the number of returns.</p>\n   *\n   *          <p>A response can contain <code>CommonPrefixes</code> only if you specify a\n   *          delimiter.</p>\n   *\n   *          <p>\n   *             <code>CommonPrefixes</code> contains all (if there are any) keys between\n   *             <code>Prefix</code> and the next occurrence of the string specified by a\n   *          delimiter.</p>\n   *\n   *          <p>\n   *             <code>CommonPrefixes</code> lists keys that act like subdirectories in the directory\n   *          specified by <code>Prefix</code>.</p>\n   *\n   *          <p>For example, if the prefix is <code>notes/</code> and the delimiter is a slash\n   *             (<code>/</code>) as in <code>notes/summer/july</code>, the common prefix is\n   *             <code>notes/summer/</code>. All of the keys that roll up into a common prefix count as a\n   *          single return when calculating the number of returns. </p>\n   */\n  CommonPrefixes?: CommonPrefix[];\n\n  /**\n   * <p>Encoding type used by Amazon S3 to encode object key names in the XML response.</p>\n   *\n   *          <p>If you specify the encoding-type request parameter, Amazon S3 includes this element in the\n   *          response, and returns encoded key name values in the following response elements:</p>\n   *\n   *          <p>\n   *             <code>Delimiter, Prefix, Key,</code> and <code>StartAfter</code>.</p>\n   */\n  EncodingType?: EncodingType | string;\n\n  /**\n   * <p>KeyCount is the number of keys returned with this request. KeyCount will always be less\n   *          than equals to MaxKeys field. Say you ask for 50 keys, your result will include less than\n   *          equals 50 keys </p>\n   */\n  KeyCount?: number;\n\n  /**\n   * <p> If ContinuationToken was sent with the request, it is included in the response.</p>\n   */\n  ContinuationToken?: string;\n\n  /**\n   * <p>\n   *             <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which\n   *          means there are more keys in the bucket that can be listed. The next list requests to Amazon S3\n   *          can be continued with this <code>NextContinuationToken</code>.\n   *             <code>NextContinuationToken</code> is obfuscated and is not a real key</p>\n   */\n  NextContinuationToken?: string;\n\n  /**\n   * <p>If StartAfter was sent with the request, it is included in the response.</p>\n   */\n  StartAfter?: string;\n}\n\nexport namespace ListObjectsV2Output {\n  export const filterSensitiveLog = (obj: ListObjectsV2Output): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListObjectsV2Request {\n  /**\n   * <p>Bucket name to list. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>A delimiter is a character you use to group keys.</p>\n   */\n  Delimiter?: string;\n\n  /**\n   * <p>Encoding type used by Amazon S3 to encode object keys in the response.</p>\n   */\n  EncodingType?: EncodingType | string;\n\n  /**\n   * <p>Sets the maximum number of keys returned in the response. By default the API returns up\n   *          to 1,000 key names. The response might contain fewer keys but will never contain\n   *          more.</p>\n   */\n  MaxKeys?: number;\n\n  /**\n   * <p>Limits the response to keys that begin with the specified prefix.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>ContinuationToken indicates Amazon S3 that the list is being continued on this bucket with a\n   *          token. ContinuationToken is obfuscated and is not a real key.</p>\n   */\n  ContinuationToken?: string;\n\n  /**\n   * <p>The owner field is not present in listV2 by default, if you want to return owner field\n   *          with each key in the result then set the fetch owner field to true.</p>\n   */\n  FetchOwner?: boolean;\n\n  /**\n   * <p>StartAfter is where you want Amazon S3 to start listing from. Amazon S3 starts listing after this\n   *          specified key. StartAfter can be any key in the bucket.</p>\n   */\n  StartAfter?: string;\n\n  /**\n   * <p>Confirms that the requester knows that she or he will be charged for the list objects\n   *          request in V2 style. Bucket owners need not specify this parameter in their\n   *          requests.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace ListObjectsV2Request {\n  export const filterSensitiveLog = (obj: ListObjectsV2Request): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Information about the delete marker.</p>\n */\nexport interface DeleteMarkerEntry {\n  /**\n   * <p>The account that created the delete marker.></p>\n   */\n  Owner?: Owner;\n\n  /**\n   * <p>The object key.</p>\n   */\n  Key?: string;\n\n  /**\n   * <p>Version ID of an object.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Specifies whether the object is (true) or is not (false) the latest version of an\n   *          object.</p>\n   */\n  IsLatest?: boolean;\n\n  /**\n   * <p>Date and time the object was last modified.</p>\n   */\n  LastModified?: Date;\n}\n\nexport namespace DeleteMarkerEntry {\n  export const filterSensitiveLog = (obj: DeleteMarkerEntry): any => ({\n    ...obj,\n  });\n}\n\nexport type ObjectVersionStorageClass = \"STANDARD\";\n\n/**\n * <p>The version of an object.</p>\n */\nexport interface ObjectVersion {\n  /**\n   * <p>The entity tag is an MD5 hash of that version of the object.</p>\n   */\n  ETag?: string;\n\n  /**\n   * <p>Size in bytes of the object.</p>\n   */\n  Size?: number;\n\n  /**\n   * <p>The class of storage used to store the object.</p>\n   */\n  StorageClass?: ObjectVersionStorageClass | string;\n\n  /**\n   * <p>The object key.</p>\n   */\n  Key?: string;\n\n  /**\n   * <p>Version ID of an object.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Specifies whether the object is (true) or is not (false) the latest version of an\n   *          object.</p>\n   */\n  IsLatest?: boolean;\n\n  /**\n   * <p>Date and time the object was last modified.</p>\n   */\n  LastModified?: Date;\n\n  /**\n   * <p>Specifies the owner of the object.</p>\n   */\n  Owner?: Owner;\n}\n\nexport namespace ObjectVersion {\n  export const filterSensitiveLog = (obj: ObjectVersion): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListObjectVersionsOutput {\n  /**\n   * <p>A flag that indicates whether Amazon S3 returned all of the results that satisfied the search\n   *          criteria. If your results were truncated, you can make a follow-up paginated request using\n   *          the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in\n   *          another request to return the rest of the results.</p>\n   */\n  IsTruncated?: boolean;\n\n  /**\n   * <p>Marks the last key returned in a truncated response.</p>\n   */\n  KeyMarker?: string;\n\n  /**\n   * <p>Marks the last version of the key returned in a truncated response.</p>\n   */\n  VersionIdMarker?: string;\n\n  /**\n   * <p>When the number of responses exceeds the value of <code>MaxKeys</code>,\n   *             <code>NextKeyMarker</code> specifies the first key not returned that satisfies the\n   *          search criteria. Use this value for the key-marker request parameter in a subsequent\n   *          request.</p>\n   */\n  NextKeyMarker?: string;\n\n  /**\n   * <p>When the number of responses exceeds the value of <code>MaxKeys</code>,\n   *             <code>NextVersionIdMarker</code> specifies the first object version not returned that\n   *          satisfies the search criteria. Use this value for the version-id-marker request parameter\n   *          in a subsequent request.</p>\n   */\n  NextVersionIdMarker?: string;\n\n  /**\n   * <p>Container for version information.</p>\n   */\n  Versions?: ObjectVersion[];\n\n  /**\n   * <p>Container for an object that is a delete marker.</p>\n   */\n  DeleteMarkers?: DeleteMarkerEntry[];\n\n  /**\n   * <p>The bucket name.</p>\n   */\n  Name?: string;\n\n  /**\n   * <p>Selects objects that start with the value supplied by this parameter.</p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>The delimiter grouping the included keys. A delimiter is a character that you specify to\n   *          group keys. All keys that contain the same string between the prefix and the first\n   *          occurrence of the delimiter are grouped under a single result element in\n   *             <code>CommonPrefixes</code>. These groups are counted as one result against the max-keys\n   *          limitation. These keys are not returned elsewhere in the response.</p>\n   */\n  Delimiter?: string;\n\n  /**\n   * <p>Specifies the maximum number of objects to return.</p>\n   */\n  MaxKeys?: number;\n\n  /**\n   * <p>All of the keys rolled up into a common prefix count as a single return when calculating\n   *          the number of returns.</p>\n   */\n  CommonPrefixes?: CommonPrefix[];\n\n  /**\n   * <p> Encoding type used by Amazon S3 to encode object key names in the XML response.</p>\n   *\n   *          <p>If you specify encoding-type request parameter, Amazon S3 includes this element in the\n   *          response, and returns encoded key name values in the following response elements:</p>\n   *\n   *          <p>\n   *             <code>KeyMarker, NextKeyMarker, Prefix, Key</code>, and <code>Delimiter</code>.</p>\n   */\n  EncodingType?: EncodingType | string;\n}\n\nexport namespace ListObjectVersionsOutput {\n  export const filterSensitiveLog = (obj: ListObjectVersionsOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListObjectVersionsRequest {\n  /**\n   * <p>The bucket name that contains the objects. </p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>A delimiter is a character that you specify to group keys. All keys that contain the\n   *          same string between the <code>prefix</code> and the first occurrence of the delimiter are\n   *          grouped under a single result element in CommonPrefixes. These groups are counted as one\n   *          result against the max-keys limitation. These keys are not returned elsewhere in the\n   *          response.</p>\n   */\n  Delimiter?: string;\n\n  /**\n   * <p>Requests Amazon S3 to encode the object keys in the response and specifies the encoding\n   *          method to use. An object key may contain any Unicode character; however, XML 1.0 parser\n   *          cannot parse some characters, such as characters with an ASCII value from 0 to 10. For\n   *          characters that are not supported in XML 1.0, you can add this parameter to request that\n   *          Amazon S3 encode the keys in the response.</p>\n   */\n  EncodingType?: EncodingType | string;\n\n  /**\n   * <p>Specifies the key to start with when listing objects in a bucket.</p>\n   */\n  KeyMarker?: string;\n\n  /**\n   * <p>Sets the maximum number of keys returned in the response. By default the API returns up\n   *          to 1,000 key names. The response might contain fewer keys but will never contain more. If\n   *          additional keys satisfy the search criteria, but were not returned because max-keys was\n   *          exceeded, the response contains <isTruncated>true</isTruncated>. To return the\n   *          additional keys, see key-marker and version-id-marker.</p>\n   */\n  MaxKeys?: number;\n\n  /**\n   * <p>Use this parameter to select only those keys that begin with the specified prefix. You\n   *          can use prefixes to separate a bucket into different groupings of keys. (You can think of\n   *          using prefix to make groups in the same way you'd use a folder in a file system.) You can\n   *          use prefix with delimiter to roll up numerous objects into a single result under\n   *          CommonPrefixes. </p>\n   */\n  Prefix?: string;\n\n  /**\n   * <p>Specifies the object version you want to start listing from.</p>\n   */\n  VersionIdMarker?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace ListObjectVersionsRequest {\n  export const filterSensitiveLog = (obj: ListObjectVersionsRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Container for elements related to a part.</p>\n */\nexport interface Part {\n  /**\n   * <p>Part number identifying the part. This is a positive integer between 1 and\n   *          10,000.</p>\n   */\n  PartNumber?: number;\n\n  /**\n   * <p>Date and time at which the part was uploaded.</p>\n   */\n  LastModified?: Date;\n\n  /**\n   * <p>Entity tag returned when the part was uploaded.</p>\n   */\n  ETag?: string;\n\n  /**\n   * <p>Size in bytes of the uploaded part data.</p>\n   */\n  Size?: number;\n}\n\nexport namespace Part {\n  export const filterSensitiveLog = (obj: Part): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListPartsOutput {\n  /**\n   * <p>If the bucket has a lifecycle rule configured with an action to abort incomplete\n   *          multipart uploads and the prefix in the lifecycle rule matches the object name in the\n   *          request, then the response includes this header indicating when the initiated multipart\n   *          upload will become eligible for abort operation. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config\">Aborting\n   *             Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a>.</p>\n   *\n   *          <p>The response will also include the <code>x-amz-abort-rule-id</code> header that will\n   *          provide the ID of the lifecycle configuration rule that defines this action.</p>\n   */\n  AbortDate?: Date;\n\n  /**\n   * <p>This header is returned along with the <code>x-amz-abort-date</code> header. It\n   *          identifies applicable lifecycle configuration rule that defines the action to abort\n   *          incomplete multipart uploads.</p>\n   */\n  AbortRuleId?: string;\n\n  /**\n   * <p>The name of the bucket to which the multipart upload was initiated.</p>\n   */\n  Bucket?: string;\n\n  /**\n   * <p>Object key for which the multipart upload was initiated.</p>\n   */\n  Key?: string;\n\n  /**\n   * <p>Upload ID identifying the multipart upload whose parts are being listed.</p>\n   */\n  UploadId?: string;\n\n  /**\n   * <p>When a list is truncated, this element specifies the last part in the list, as well as\n   *          the value to use for the part-number-marker request parameter in a subsequent\n   *          request.</p>\n   */\n  PartNumberMarker?: string;\n\n  /**\n   * <p>When a list is truncated, this element specifies the last part in the list, as well as\n   *          the value to use for the part-number-marker request parameter in a subsequent\n   *          request.</p>\n   */\n  NextPartNumberMarker?: string;\n\n  /**\n   * <p>Maximum number of parts that were allowed in the response.</p>\n   */\n  MaxParts?: number;\n\n  /**\n   * <p> Indicates whether the returned list of parts is truncated. A true value indicates that\n   *          the list was truncated. A list can be truncated if the number of parts exceeds the limit\n   *          returned in the MaxParts element.</p>\n   */\n  IsTruncated?: boolean;\n\n  /**\n   * <p> Container for elements related to a particular part. A response can contain zero or\n   *          more <code>Part</code> elements.</p>\n   */\n  Parts?: Part[];\n\n  /**\n   * <p>Container element that identifies who initiated the multipart upload. If the initiator\n   *          is an AWS account, this element provides the same information as the <code>Owner</code>\n   *          element. If the initiator is an IAM User, this element provides the user ARN and display\n   *          name.</p>\n   */\n  Initiator?: Initiator;\n\n  /**\n   * <p> Container element that identifies the object owner, after the object is created. If\n   *          multipart upload is initiated by an IAM user, this element provides the parent account ID\n   *          and display name.</p>\n   */\n  Owner?: Owner;\n\n  /**\n   * <p>Class of storage (STANDARD or REDUCED_REDUNDANCY) used to store the uploaded\n   *          object.</p>\n   */\n  StorageClass?: StorageClass | string;\n\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace ListPartsOutput {\n  export const filterSensitiveLog = (obj: ListPartsOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListPartsRequest {\n  /**\n   * <p>The name of the bucket to which the parts are being uploaded. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Object key for which the multipart upload was initiated.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>Sets the maximum number of parts to return.</p>\n   */\n  MaxParts?: number;\n\n  /**\n   * <p>Specifies the part after which listing should begin. Only parts with higher part numbers\n   *          will be listed.</p>\n   */\n  PartNumberMarker?: string;\n\n  /**\n   * <p>Upload ID identifying the multipart upload whose parts are being listed.</p>\n   */\n  UploadId: string | undefined;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace ListPartsRequest {\n  export const filterSensitiveLog = (obj: ListPartsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketAccelerateConfigurationRequest {\n  /**\n   * <p>The name of the bucket for which the accelerate configuration is set.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Container for setting the transfer acceleration state.</p>\n   */\n  AccelerateConfiguration: AccelerateConfiguration | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketAccelerateConfigurationRequest {\n  export const filterSensitiveLog = (obj: PutBucketAccelerateConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketAclRequest {\n  /**\n   * <p>The canned ACL to apply to the bucket.</p>\n   */\n  ACL?: BucketCannedACL | string;\n\n  /**\n   * <p>Contains the elements that set the ACL permissions for an object per grantee.</p>\n   */\n  AccessControlPolicy?: AccessControlPolicy;\n\n  /**\n   * <p>The bucket to which to apply the ACL.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message\n   *          integrity check to verify that the request body was not corrupted in transit. For more\n   *          information, go to <a href=\"http://www.ietf.org/rfc/rfc1864.txt\">RFC\n   *          1864.</a>\n   *          </p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>Allows grantee the read, write, read ACP, and write ACP permissions on the\n   *          bucket.</p>\n   */\n  GrantFullControl?: string;\n\n  /**\n   * <p>Allows grantee to list the objects in the bucket.</p>\n   */\n  GrantRead?: string;\n\n  /**\n   * <p>Allows grantee to read the bucket ACL.</p>\n   */\n  GrantReadACP?: string;\n\n  /**\n   * <p>Allows grantee to create, overwrite, and delete any object in the bucket.</p>\n   */\n  GrantWrite?: string;\n\n  /**\n   * <p>Allows grantee to write the ACL for the applicable bucket.</p>\n   */\n  GrantWriteACP?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketAclRequest {\n  export const filterSensitiveLog = (obj: PutBucketAclRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketAnalyticsConfigurationRequest {\n  /**\n   * <p>The name of the bucket to which an analytics configuration is stored.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID that identifies the analytics configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>The configuration and any analyses for the analytics filter.</p>\n   */\n  AnalyticsConfiguration: AnalyticsConfiguration | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketAnalyticsConfigurationRequest {\n  export const filterSensitiveLog = (obj: PutBucketAnalyticsConfigurationRequest): any => ({\n    ...obj,\n    ...(obj.AnalyticsConfiguration && {\n      AnalyticsConfiguration: AnalyticsConfiguration.filterSensitiveLog(obj.AnalyticsConfiguration),\n    }),\n  });\n}\n\n/**\n * <p>Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more\n *          information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html\">Enabling\n *             Cross-Origin Resource Sharing</a> in the <i>Amazon Simple Storage Service Developer\n *             Guide</i>.</p>\n */\nexport interface CORSConfiguration {\n  /**\n   * <p>A set of origins and methods (cross-origin access that you want to allow). You can add\n   *          up to 100 rules to the configuration.</p>\n   */\n  CORSRules: CORSRule[] | undefined;\n}\n\nexport namespace CORSConfiguration {\n  export const filterSensitiveLog = (obj: CORSConfiguration): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketCorsRequest {\n  /**\n   * <p>Specifies the bucket impacted by the <code>cors</code>configuration.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more\n   *          information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html\">Enabling Cross-Origin Resource\n   *             Sharing</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  CORSConfiguration: CORSConfiguration | undefined;\n\n  /**\n   * <p>The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message\n   *          integrity check to verify that the request body was not corrupted in transit. For more\n   *          information, go to <a href=\"http://www.ietf.org/rfc/rfc1864.txt\">RFC\n   *          1864.</a>\n   *          </p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketCorsRequest {\n  export const filterSensitiveLog = (obj: PutBucketCorsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketEncryptionRequest {\n  /**\n   * <p>Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed\n   *          keys (SSE-S3) or customer master keys stored in AWS KMS (SSE-KMS). For information about\n   *          the Amazon S3 default encryption feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html\">Amazon S3 Default Bucket Encryption</a>\n   *          in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The base64-encoded 128-bit MD5 digest of the server-side encryption configuration.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>Specifies the default server-side-encryption configuration.</p>\n   */\n  ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketEncryptionRequest {\n  export const filterSensitiveLog = (obj: PutBucketEncryptionRequest): any => ({\n    ...obj,\n    ...(obj.ServerSideEncryptionConfiguration && {\n      ServerSideEncryptionConfiguration: ServerSideEncryptionConfiguration.filterSensitiveLog(\n        obj.ServerSideEncryptionConfiguration\n      ),\n    }),\n  });\n}\n\nexport interface PutBucketIntelligentTieringConfigurationRequest {\n  /**\n   * <p>The name of the Amazon S3 bucket whose configuration you want to modify or retrieve.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID used to identify the S3 Intelligent-Tiering configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>Container for S3 Intelligent-Tiering configuration.</p>\n   */\n  IntelligentTieringConfiguration: IntelligentTieringConfiguration | undefined;\n}\n\nexport namespace PutBucketIntelligentTieringConfigurationRequest {\n  export const filterSensitiveLog = (obj: PutBucketIntelligentTieringConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketInventoryConfigurationRequest {\n  /**\n   * <p>The name of the bucket where the inventory configuration will be stored.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID used to identify the inventory configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>Specifies the inventory configuration.</p>\n   */\n  InventoryConfiguration: InventoryConfiguration | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketInventoryConfigurationRequest {\n  export const filterSensitiveLog = (obj: PutBucketInventoryConfigurationRequest): any => ({\n    ...obj,\n    ...(obj.InventoryConfiguration && {\n      InventoryConfiguration: InventoryConfiguration.filterSensitiveLog(obj.InventoryConfiguration),\n    }),\n  });\n}\n\n/**\n * <p>Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more\n *          information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\">Object Lifecycle Management</a>\n *          in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n */\nexport interface BucketLifecycleConfiguration {\n  /**\n   * <p>A lifecycle rule for individual objects in an Amazon S3 bucket.</p>\n   */\n  Rules: LifecycleRule[] | undefined;\n}\n\nexport namespace BucketLifecycleConfiguration {\n  export const filterSensitiveLog = (obj: BucketLifecycleConfiguration): any => ({\n    ...obj,\n    ...(obj.Rules && { Rules: obj.Rules.map((item) => LifecycleRule.filterSensitiveLog(item)) }),\n  });\n}\n\nexport interface PutBucketLifecycleConfigurationRequest {\n  /**\n   * <p>The name of the bucket for which to set the configuration.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Container for lifecycle rules. You can add as many as 1,000 rules.</p>\n   */\n  LifecycleConfiguration?: BucketLifecycleConfiguration;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketLifecycleConfigurationRequest {\n  export const filterSensitiveLog = (obj: PutBucketLifecycleConfigurationRequest): any => ({\n    ...obj,\n    ...(obj.LifecycleConfiguration && {\n      LifecycleConfiguration: BucketLifecycleConfiguration.filterSensitiveLog(obj.LifecycleConfiguration),\n    }),\n  });\n}\n\n/**\n * <p>Container for logging status information.</p>\n */\nexport interface BucketLoggingStatus {\n  /**\n   * <p>Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys\n   *          for a bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html\">PUT Bucket logging</a> in the\n   *             <i>Amazon Simple Storage Service API Reference</i>.</p>\n   */\n  LoggingEnabled?: LoggingEnabled;\n}\n\nexport namespace BucketLoggingStatus {\n  export const filterSensitiveLog = (obj: BucketLoggingStatus): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketLoggingRequest {\n  /**\n   * <p>The name of the bucket for which to set the logging parameters.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Container for logging status information.</p>\n   */\n  BucketLoggingStatus: BucketLoggingStatus | undefined;\n\n  /**\n   * <p>The MD5 hash of the <code>PutBucketLogging</code> request body.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketLoggingRequest {\n  export const filterSensitiveLog = (obj: PutBucketLoggingRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketMetricsConfigurationRequest {\n  /**\n   * <p>The name of the bucket for which the metrics configuration is set.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The ID used to identify the metrics configuration.</p>\n   */\n  Id: string | undefined;\n\n  /**\n   * <p>Specifies the metrics configuration.</p>\n   */\n  MetricsConfiguration: MetricsConfiguration | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketMetricsConfigurationRequest {\n  export const filterSensitiveLog = (obj: PutBucketMetricsConfigurationRequest): any => ({\n    ...obj,\n    ...(obj.MetricsConfiguration && {\n      MetricsConfiguration: MetricsConfiguration.filterSensitiveLog(obj.MetricsConfiguration),\n    }),\n  });\n}\n\nexport interface PutBucketNotificationConfigurationRequest {\n  /**\n   * <p>The name of the bucket.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>A container for specifying the notification configuration of the bucket. If this element\n   *          is empty, notifications are turned off for the bucket.</p>\n   */\n  NotificationConfiguration: NotificationConfiguration | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketNotificationConfigurationRequest {\n  export const filterSensitiveLog = (obj: PutBucketNotificationConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketOwnershipControlsRequest {\n  /**\n   * <p>The name of the Amazon S3 bucket whose <code>OwnershipControls</code> you want to set.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The MD5 hash of the <code>OwnershipControls</code> request body. </p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n\n  /**\n   * <p>The <code>OwnershipControls</code> (BucketOwnerPreferred or ObjectWriter) that you want\n   *          to apply to this Amazon S3 bucket.</p>\n   */\n  OwnershipControls: OwnershipControls | undefined;\n}\n\nexport namespace PutBucketOwnershipControlsRequest {\n  export const filterSensitiveLog = (obj: PutBucketOwnershipControlsRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketPolicyRequest {\n  /**\n   * <p>The name of the bucket.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The MD5 hash of the request body.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>Set this parameter to true to confirm that you want to remove your permissions to change\n   *          this bucket policy in the future.</p>\n   */\n  ConfirmRemoveSelfBucketAccess?: boolean;\n\n  /**\n   * <p>The bucket policy as a JSON document.</p>\n   */\n  Policy: string | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketPolicyRequest {\n  export const filterSensitiveLog = (obj: PutBucketPolicyRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketReplicationRequest {\n  /**\n   * <p>The name of the bucket</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message\n   *          integrity check to verify that the request body was not corrupted in transit. For more\n   *          information, see <a href=\"http://www.ietf.org/rfc/rfc1864.txt\">RFC 1864</a>.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>A container for replication rules. You can add up to 1,000 rules. The maximum size of a\n   *          replication configuration is 2 MB.</p>\n   */\n  ReplicationConfiguration: ReplicationConfiguration | undefined;\n\n  /**\n   * <p>A token to allow Object Lock to be enabled for an existing bucket.</p>\n   */\n  Token?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketReplicationRequest {\n  export const filterSensitiveLog = (obj: PutBucketReplicationRequest): any => ({\n    ...obj,\n    ...(obj.ReplicationConfiguration && {\n      ReplicationConfiguration: ReplicationConfiguration.filterSensitiveLog(obj.ReplicationConfiguration),\n    }),\n  });\n}\n\n/**\n * <p>Container for Payer.</p>\n */\nexport interface RequestPaymentConfiguration {\n  /**\n   * <p>Specifies who pays for the download and request fees.</p>\n   */\n  Payer: Payer | string | undefined;\n}\n\nexport namespace RequestPaymentConfiguration {\n  export const filterSensitiveLog = (obj: RequestPaymentConfiguration): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketRequestPaymentRequest {\n  /**\n   * <p>The bucket name.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a\n   *          message integrity check to verify that the request body was not corrupted in transit. For\n   *          more information, see <a href=\"http://www.ietf.org/rfc/rfc1864.txt\">RFC\n   *          1864</a>.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>Container for Payer.</p>\n   */\n  RequestPaymentConfiguration: RequestPaymentConfiguration | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketRequestPaymentRequest {\n  export const filterSensitiveLog = (obj: PutBucketRequestPaymentRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Container for <code>TagSet</code> elements.</p>\n */\nexport interface Tagging {\n  /**\n   * <p>A collection for a set of tags</p>\n   */\n  TagSet: Tag[] | undefined;\n}\n\nexport namespace Tagging {\n  export const filterSensitiveLog = (obj: Tagging): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketTaggingRequest {\n  /**\n   * <p>The bucket name.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message\n   *          integrity check to verify that the request body was not corrupted in transit. For more\n   *          information, see <a href=\"http://www.ietf.org/rfc/rfc1864.txt\">RFC 1864</a>.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>Container for the <code>TagSet</code> and <code>Tag</code> elements.</p>\n   */\n  Tagging: Tagging | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketTaggingRequest {\n  export const filterSensitiveLog = (obj: PutBucketTaggingRequest): any => ({\n    ...obj,\n  });\n}\n\nexport type MFADelete = \"Disabled\" | \"Enabled\";\n\n/**\n * <p>Describes the versioning state of an Amazon S3 bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html\">PUT\n *             Bucket versioning</a> in the <i>Amazon Simple Storage Service API Reference</i>.</p>\n */\nexport interface VersioningConfiguration {\n  /**\n   * <p>Specifies whether MFA delete is enabled in the bucket versioning configuration. This\n   *          element is only returned if the bucket has been configured with MFA delete. If the bucket\n   *          has never been so configured, this element is not returned.</p>\n   */\n  MFADelete?: MFADelete | string;\n\n  /**\n   * <p>The versioning state of the bucket.</p>\n   */\n  Status?: BucketVersioningStatus | string;\n}\n\nexport namespace VersioningConfiguration {\n  export const filterSensitiveLog = (obj: VersioningConfiguration): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketVersioningRequest {\n  /**\n   * <p>The bucket name.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a\n   *          message integrity check to verify that the request body was not corrupted in transit. For\n   *          more information, see <a href=\"http://www.ietf.org/rfc/rfc1864.txt\">RFC\n   *          1864</a>.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>The concatenation of the authentication device's serial number, a space, and the value\n   *          that is displayed on your authentication device.</p>\n   */\n  MFA?: string;\n\n  /**\n   * <p>Container for setting the versioning state.</p>\n   */\n  VersioningConfiguration: VersioningConfiguration | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketVersioningRequest {\n  export const filterSensitiveLog = (obj: PutBucketVersioningRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Specifies website configuration parameters for an Amazon S3 bucket.</p>\n */\nexport interface WebsiteConfiguration {\n  /**\n   * <p>The name of the error document for the website.</p>\n   */\n  ErrorDocument?: ErrorDocument;\n\n  /**\n   * <p>The name of the index document for the website.</p>\n   */\n  IndexDocument?: IndexDocument;\n\n  /**\n   * <p>The redirect behavior for every request to this bucket's website endpoint.</p>\n   *          <important>\n   *             <p>If you specify this property, you can't specify any other property.</p>\n   *          </important>\n   */\n  RedirectAllRequestsTo?: RedirectAllRequestsTo;\n\n  /**\n   * <p>Rules that define when a redirect is applied and the redirect behavior.</p>\n   */\n  RoutingRules?: RoutingRule[];\n}\n\nexport namespace WebsiteConfiguration {\n  export const filterSensitiveLog = (obj: WebsiteConfiguration): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutBucketWebsiteRequest {\n  /**\n   * <p>The bucket name.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The base64-encoded 128-bit MD5 digest of the data. You must use this header as a message\n   *          integrity check to verify that the request body was not corrupted in transit. For more\n   *          information, see <a href=\"http://www.ietf.org/rfc/rfc1864.txt\">RFC 1864</a>.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>Container for the request.</p>\n   */\n  WebsiteConfiguration: WebsiteConfiguration | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutBucketWebsiteRequest {\n  export const filterSensitiveLog = (obj: PutBucketWebsiteRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutObjectOutput {\n  /**\n   * <p> If the expiration is configured for the object (see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html\">PutBucketLifecycleConfiguration</a>), the response includes this header. It\n   *          includes the expiry-date and rule-id key-value pairs that provide information about object\n   *          expiration. The value of the rule-id is URL encoded.</p>\n   */\n  Expiration?: string;\n\n  /**\n   * <p>Entity tag for the uploaded object.</p>\n   */\n  ETag?: string;\n\n  /**\n   * <p>If you specified server-side encryption either with an AWS KMS customer master key (CMK)\n   *          or Amazon S3-managed encryption key in your PUT request, the response includes this header. It\n   *          confirms the encryption algorithm that Amazon S3 used to encrypt the object.</p>\n   */\n  ServerSideEncryption?: ServerSideEncryption | string;\n\n  /**\n   * <p>Version of the object.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header confirming the encryption algorithm used.</p>\n   */\n  SSECustomerAlgorithm?: string;\n\n  /**\n   * <p>If server-side encryption with a customer-provided encryption key was requested, the\n   *          response will include this header to provide round-trip message integrity verification of\n   *          the customer-provided encryption key.</p>\n   */\n  SSECustomerKeyMD5?: string;\n\n  /**\n   * <p>If <code>x-amz-server-side-encryption</code> is present and has the value of\n   *             <code>aws:kms</code>, this header specifies the ID of the AWS Key Management Service\n   *          (AWS KMS) symmetric customer managed customer master key (CMK) that was used for the\n   *          object. </p>\n   */\n  SSEKMSKeyId?: string;\n\n  /**\n   * <p>If present, specifies the AWS KMS Encryption Context to use for object encryption. The\n   *          value of this header is a base64-encoded UTF-8 string holding JSON with the encryption\n   *          context key-value pairs.</p>\n   */\n  SSEKMSEncryptionContext?: string;\n\n  /**\n   * <p>Indicates whether the uploaded object uses an S3 Bucket Key for server-side encryption with AWS KMS (SSE-KMS).</p>\n   */\n  BucketKeyEnabled?: boolean;\n\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace PutObjectOutput {\n  export const filterSensitiveLog = (obj: PutObjectOutput): any => ({\n    ...obj,\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n  });\n}\n\nexport interface PutObjectRequest {\n  /**\n   * <p>The canned ACL to apply to the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\">Canned\n   *       ACL</a>.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  ACL?: ObjectCannedACL | string;\n\n  /**\n   * <p>Object data.</p>\n   */\n  Body?: Readable | ReadableStream | Blob;\n\n  /**\n   * <p>The bucket name to which the PUT operation was initiated. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p> Can be used to specify caching behavior along the request/reply chain. For more\n   *          information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>.</p>\n   */\n  CacheControl?: string;\n\n  /**\n   * <p>Specifies presentational information for the object. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1</a>.</p>\n   */\n  ContentDisposition?: string;\n\n  /**\n   * <p>Specifies what content encodings have been applied to the object and thus what decoding\n   *          mechanisms must be applied to obtain the media-type referenced by the Content-Type header\n   *          field. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11</a>.</p>\n   */\n  ContentEncoding?: string;\n\n  /**\n   * <p>The language the content is in.</p>\n   */\n  ContentLanguage?: string;\n\n  /**\n   * <p>Size of the body in bytes. This parameter is useful when the size of the body cannot be\n   *          determined automatically. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13</a>.</p>\n   */\n  ContentLength?: number;\n\n  /**\n   * <p>The base64-encoded 128-bit MD5 digest of the message (without the headers) according to\n   *          RFC 1864. This header can be used as a message integrity check to verify that the data is\n   *          the same data that was originally sent. Although it is optional, we recommend using the\n   *          Content-MD5 mechanism as an end-to-end integrity check. For more information about REST\n   *          request authentication, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\">REST\n   *             Authentication</a>.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>A standard MIME type describing the format of the contents. For more information, see\n   *             <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17</a>.</p>\n   */\n  ContentType?: string;\n\n  /**\n   * <p>The date and time at which the object is no longer cacheable. For more information, see\n   *             <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21\">http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21</a>.</p>\n   */\n  Expires?: Date;\n\n  /**\n   * <p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions on the\n   *       object.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantFullControl?: string;\n\n  /**\n   * <p>Allows grantee to read the object data and its\n   *       metadata.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantRead?: string;\n\n  /**\n   * <p>Allows grantee to read the object ACL.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantReadACP?: string;\n\n  /**\n   * <p>Allows grantee to write the ACL for the applicable\n   *       object.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantWriteACP?: string;\n\n  /**\n   * <p>Object key for which the PUT operation was initiated.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>A map of metadata to store with the object in S3.</p>\n   */\n  Metadata?: { [key: string]: string };\n\n  /**\n   * <p>The server-side encryption algorithm used when storing this object in Amazon S3 (for example,\n   *          AES256, aws:kms).</p>\n   */\n  ServerSideEncryption?: ServerSideEncryption | string;\n\n  /**\n   * <p>By default, Amazon S3 uses the STANDARD Storage Class to store newly created objects. The\n   *          STANDARD storage class provides high durability and high availability. Depending on\n   *          performance needs, you can specify a different Storage Class. Amazon S3 on Outposts only uses\n   *          the OUTPOSTS Storage Class. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage Classes</a> in the <i>Amazon S3\n   *             Service Developer Guide</i>.</p>\n   */\n  StorageClass?: StorageClass | string;\n\n  /**\n   * <p>If the bucket is configured as a website, redirects requests for this object to another\n   *          object in the same bucket or to an external URL. Amazon S3 stores the value of this header in\n   *          the object metadata. For information about object metadata, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html\">Object Key and Metadata</a>.</p>\n   *\n   *          <p>In the following example, the request header sets the redirect to an object\n   *          (anotherPage.html) in the same bucket:</p>\n   *\n   *          <p>\n   *             <code>x-amz-website-redirect-location: /anotherPage.html</code>\n   *          </p>\n   *\n   *          <p>In the following example, the request header sets the object redirect to another\n   *          website:</p>\n   *\n   *          <p>\n   *             <code>x-amz-website-redirect-location: http://www.example.com/</code>\n   *          </p>\n   *\n   *          <p>For more information about website hosting in Amazon S3, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html\">Hosting Websites on Amazon S3</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html\">How to Configure Website Page\n   *             Redirects</a>. </p>\n   */\n  WebsiteRedirectLocation?: string;\n\n  /**\n   * <p>Specifies the algorithm to use to when encrypting the object (for example,\n   *          AES256).</p>\n   */\n  SSECustomerAlgorithm?: string;\n\n  /**\n   * <p>Specifies the customer-provided encryption key for Amazon S3 to use in encrypting data. This\n   *          value is used to store the object and then it is discarded; Amazon S3 does not store the\n   *          encryption key. The key must be appropriate for use with the algorithm specified in the\n   *             <code>x-amz-server-side-encryption-customer-algorithm</code> header.</p>\n   */\n  SSECustomerKey?: string;\n\n  /**\n   * <p>Specifies the 128-bit MD5 digest of the encryption key according to RFC 1321. Amazon S3 uses\n   *          this header for a message integrity check to ensure that the encryption key was transmitted\n   *          without error.</p>\n   */\n  SSECustomerKeyMD5?: string;\n\n  /**\n   * <p>If <code>x-amz-server-side-encryption</code> is present and has the value of\n   *             <code>aws:kms</code>, this header specifies the ID of the AWS Key Management Service\n   *          (AWS KMS) symmetrical customer managed customer master key (CMK) that was used for the\n   *          object.</p>\n   *          <p> If the value of <code>x-amz-server-side-encryption</code> is <code>aws:kms</code>, this\n   *          header specifies the ID of the symmetric customer managed AWS KMS CMK that will be used for\n   *          the object. If you specify <code>x-amz-server-side-encryption:aws:kms</code>, but do not\n   *             provide<code> x-amz-server-side-encryption-aws-kms-key-id</code>, Amazon S3 uses the AWS\n   *          managed CMK in AWS to protect the data.</p>\n   */\n  SSEKMSKeyId?: string;\n\n  /**\n   * <p>Specifies the AWS KMS Encryption Context to use for object encryption. The value of this\n   *          header is a base64-encoded UTF-8 string holding JSON with the encryption context key-value\n   *          pairs.</p>\n   */\n  SSEKMSEncryptionContext?: string;\n\n  /**\n   * <p>Specifies whether Amazon S3 should use an S3 Bucket Key for object encryption with server-side encryption using AWS KMS (SSE-KMS). Setting this header to <code>true</code> causes Amazon S3 to use an S3 Bucket Key for object encryption with SSE-KMS.</p>\n   *          <p>Specifying this header with a PUT operation doesn’t affect bucket-level settings for S3 Bucket Key.</p>\n   */\n  BucketKeyEnabled?: boolean;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The tag-set for the object. The tag-set must be encoded as URL Query parameters. (For\n   *          example, \"Key1=Value1\")</p>\n   */\n  Tagging?: string;\n\n  /**\n   * <p>The Object Lock mode that you want to apply to this object.</p>\n   */\n  ObjectLockMode?: ObjectLockMode | string;\n\n  /**\n   * <p>The date and time when you want this object's Object Lock to expire.</p>\n   */\n  ObjectLockRetainUntilDate?: Date;\n\n  /**\n   * <p>Specifies whether a legal hold will be applied to this object. For more information\n   *          about S3 Object Lock, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html\">Object\n   *          Lock</a>.</p>\n   */\n  ObjectLockLegalHoldStatus?: ObjectLockLegalHoldStatus | string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutObjectRequest {\n  export const filterSensitiveLog = (obj: PutObjectRequest): any => ({\n    ...obj,\n    ...(obj.SSECustomerKey && { SSECustomerKey: SENSITIVE_STRING }),\n    ...(obj.SSEKMSKeyId && { SSEKMSKeyId: SENSITIVE_STRING }),\n    ...(obj.SSEKMSEncryptionContext && { SSEKMSEncryptionContext: SENSITIVE_STRING }),\n  });\n}\n\nexport interface PutObjectAclOutput {\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace PutObjectAclOutput {\n  export const filterSensitiveLog = (obj: PutObjectAclOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutObjectAclRequest {\n  /**\n   * <p>The canned ACL to apply to the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\">Canned ACL</a>.</p>\n   */\n  ACL?: ObjectCannedACL | string;\n\n  /**\n   * <p>Contains the elements that set the ACL permissions for an object per grantee.</p>\n   */\n  AccessControlPolicy?: AccessControlPolicy;\n\n  /**\n   * <p>The bucket name that contains the object to which you want to attach the ACL. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The base64-encoded 128-bit MD5 digest of the data. This header must be used as a message\n   *          integrity check to verify that the request body was not corrupted in transit. For more\n   *          information, go to <a href=\"http://www.ietf.org/rfc/rfc1864.txt\">RFC\n   *          1864.></a>\n   *          </p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>Allows grantee the read, write, read ACP, and write ACP permissions on the\n   *          bucket.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantFullControl?: string;\n\n  /**\n   * <p>Allows grantee to list the objects in the\n   *       bucket.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantRead?: string;\n\n  /**\n   * <p>Allows grantee to read the bucket ACL.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantReadACP?: string;\n\n  /**\n   * <p>Allows grantee to create, overwrite, and delete any object in the bucket.</p>\n   */\n  GrantWrite?: string;\n\n  /**\n   * <p>Allows grantee to write the ACL for the applicable\n   *       bucket.</p>\n   *          <p>This action is not supported by Amazon S3 on Outposts.</p>\n   */\n  GrantWriteACP?: string;\n\n  /**\n   * <p>Key for which the PUT operation was initiated.</p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>VersionId used to reference a specific version of the object.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutObjectAclRequest {\n  export const filterSensitiveLog = (obj: PutObjectAclRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutObjectLegalHoldOutput {\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace PutObjectLegalHoldOutput {\n  export const filterSensitiveLog = (obj: PutObjectLegalHoldOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutObjectLegalHoldRequest {\n  /**\n   * <p>The bucket name containing the object that you want to place a Legal Hold on. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The key name for the object that you want to place a Legal Hold on.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>Container element for the Legal Hold configuration you want to apply to the specified\n   *          object.</p>\n   */\n  LegalHold?: ObjectLockLegalHold;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The version ID of the object that you want to place a Legal Hold on.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>The MD5 hash for the request body.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutObjectLegalHoldRequest {\n  export const filterSensitiveLog = (obj: PutObjectLegalHoldRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutObjectLockConfigurationOutput {\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace PutObjectLockConfigurationOutput {\n  export const filterSensitiveLog = (obj: PutObjectLockConfigurationOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutObjectLockConfigurationRequest {\n  /**\n   * <p>The bucket whose Object Lock configuration you want to create or replace.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The Object Lock configuration that you want to apply to the specified bucket.</p>\n   */\n  ObjectLockConfiguration?: ObjectLockConfiguration;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>A token to allow Object Lock to be enabled for an existing bucket.</p>\n   */\n  Token?: string;\n\n  /**\n   * <p>The MD5 hash for the request body.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutObjectLockConfigurationRequest {\n  export const filterSensitiveLog = (obj: PutObjectLockConfigurationRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutObjectRetentionOutput {\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n}\n\nexport namespace PutObjectRetentionOutput {\n  export const filterSensitiveLog = (obj: PutObjectRetentionOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutObjectRetentionRequest {\n  /**\n   * <p>The bucket name that contains the object you want to apply this Object Retention\n   *          configuration to. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The key name for the object that you want to apply this Object Retention configuration\n   *          to.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>The container element for the Object Retention configuration.</p>\n   */\n  Retention?: ObjectLockRetention;\n\n  /**\n   * <p>Confirms that the requester knows that they will be charged for the request. Bucket\n   *          owners need not specify this parameter in their requests. For information about downloading\n   *          objects from requester pays buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\">Downloading Objects in\n   *             Requestor Pays Buckets</a> in the <i>Amazon S3 Developer Guide</i>.</p>\n   */\n  RequestPayer?: RequestPayer | string;\n\n  /**\n   * <p>The version ID for the object that you want to apply this Object Retention configuration\n   *          to.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>Indicates whether this operation should bypass Governance-mode restrictions.</p>\n   */\n  BypassGovernanceRetention?: boolean;\n\n  /**\n   * <p>The MD5 hash for the request body.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutObjectRetentionRequest {\n  export const filterSensitiveLog = (obj: PutObjectRetentionRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutObjectTaggingOutput {\n  /**\n   * <p>The versionId of the object the tag-set was added to.</p>\n   */\n  VersionId?: string;\n}\n\nexport namespace PutObjectTaggingOutput {\n  export const filterSensitiveLog = (obj: PutObjectTaggingOutput): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutObjectTaggingRequest {\n  /**\n   * <p>The bucket name containing the object. </p>\n   *          <p>When using this API with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this operation with an access point through the AWS SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/using-access-points.html\">Using Access Points</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   *          <p>When using this API with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com. When using this operation using S3 on Outposts through the AWS SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3onOutposts.html\">Using S3 on Outposts</a> in the <i>Amazon Simple Storage Service Developer Guide</i>.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>Name of the object key.</p>\n   */\n  Key: string | undefined;\n\n  /**\n   * <p>The versionId of the object that the tag-set will be added to.</p>\n   */\n  VersionId?: string;\n\n  /**\n   * <p>The MD5 hash for the request body.</p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>Container for the <code>TagSet</code> and <code>Tag</code> elements</p>\n   */\n  Tagging: Tagging | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutObjectTaggingRequest {\n  export const filterSensitiveLog = (obj: PutObjectTaggingRequest): any => ({\n    ...obj,\n  });\n}\n\nexport interface PutPublicAccessBlockRequest {\n  /**\n   * <p>The name of the Amazon S3 bucket whose <code>PublicAccessBlock</code> configuration you want\n   *          to set.</p>\n   */\n  Bucket: string | undefined;\n\n  /**\n   * <p>The MD5 hash of the <code>PutPublicAccessBlock</code> request body. </p>\n   *          <p>For requests made using the AWS Command Line Interface (CLI) or AWS SDKs, this field is calculated automatically.</p>\n   */\n  ContentMD5?: string;\n\n  /**\n   * <p>The <code>PublicAccessBlock</code> configuration that you want to apply to this Amazon S3\n   *          bucket. You can enable the configuration options in any combination. For more information\n   *          about when Amazon S3 considers a bucket or object public, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status\">The Meaning of \"Public\"</a> in the <i>Amazon Simple Storage Service Developer\n   *          Guide</i>.</p>\n   */\n  PublicAccessBlockConfiguration: PublicAccessBlockConfiguration | undefined;\n\n  /**\n   * <p>The account id of the expected bucket owner. If the bucket is owned by a different account, the request will fail with an HTTP <code>403 (Access Denied)</code> error.</p>\n   */\n  ExpectedBucketOwner?: string;\n}\n\nexport namespace PutPublicAccessBlockRequest {\n  export const filterSensitiveLog = (obj: PutPublicAccessBlockRequest): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>This operation is not allowed against this storage tier.</p>\n */\nexport interface ObjectAlreadyInActiveTierError extends __SmithyException, $MetadataBearer {\n  name: \"ObjectAlreadyInActiveTierError\";\n  $fault: \"client\";\n}\n\nexport namespace ObjectAlreadyInActiveTierError {\n  export const filterSensitiveLog = (obj: ObjectAlreadyInActiveTierError): any => ({\n    ...obj,\n  });\n}\n\nexport interface RestoreObjectOutput {\n  /**\n   * <p>If present, indicates that the requester was successfully charged for the\n   *          request.</p>\n   */\n  RequestCharged?: RequestCharged | string;\n\n  /**\n   * <p>Indicates the path in the provided S3 output location where Select results will be\n   *          restored to.</p>\n   */\n  RestoreOutputPath?: string;\n}\n\nexport namespace RestoreObjectOutput {\n  export const filterSensitiveLog = (obj: RestoreObjectOutput): any => ({\n    ...obj,\n  });\n}\n\nexport type Tier = \"Bulk\" | \"Expedited\" | \"Standard\";\n\n/**\n * <p>Container for S3 Glacier job parameters.</p>\n */\nexport interface GlacierJobParameters {\n  /**\n   * <p>Retrieval tier at which the restore will be processed.</p>\n   */\n  Tier: Tier | string | undefined;\n}\n\nexport namespace GlacierJobParameters {\n  export const filterSensitiveLog = (obj: GlacierJobParameters): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Contains the type of server-side encryption used.</p>\n */\nexport interface Encryption {\n  /**\n   * <p>The server-side encryption algorithm used when storing job results in Amazon S3 (for example,\n   *          AES256, aws:kms).</p>\n   */\n  EncryptionType: ServerSideEncryption | string | undefined;\n\n  /**\n   * <p>If the encryption type is <code>aws:kms</code>, this optional value specifies the ID of\n   *          the symmetric customer managed AWS KMS CMK to use for encryption of job results. Amazon S3 only\n   *          supports symmetric CMKs. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\">Using Symmetric and\n   *             Asymmetric Keys</a> in the <i>AWS Key Management Service Developer\n   *             Guide</i>.</p>\n   */\n  KMSKeyId?: string;\n\n  /**\n   * <p>If the encryption type is <code>aws:kms</code>, this optional value can be used to\n   *          specify the encryption context for the restore results.</p>\n   */\n  KMSContext?: string;\n}\n\nexport namespace Encryption {\n  export const filterSensitiveLog = (obj: Encryption): any => ({\n    ...obj,\n    ...(obj.KMSKeyId && { KMSKeyId: SENSITIVE_STRING }),\n  });\n}\n"]},"metadata":{},"sourceType":"module"}