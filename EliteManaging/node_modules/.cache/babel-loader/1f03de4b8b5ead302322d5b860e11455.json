{"ast":null,"code":"import { __awaiter, __generator, __read, __spread } from \"tslib\";\nexport var retryMiddleware = function (options) {\n  return function (next, context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var _a;\n\n        return __generator(this, function (_b) {\n          if ((_a = options === null || options === void 0 ? void 0 : options.retryStrategy) === null || _a === void 0 ? void 0 : _a.mode) context.userAgent = __spread(context.userAgent || [], [[\"cfg/retry-mode\", options.retryStrategy.mode]]);\n          return [2\n          /*return*/\n          , options.retryStrategy.retry(next, args)];\n        });\n      });\n    };\n  };\n};\nexport var retryMiddlewareOptions = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true\n};\nexport var getRetryPlugin = function (options) {\n  return {\n    applyToStack: function (clientStack) {\n      clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    }\n  };\n};","map":{"version":3,"mappings":";AAaA,OAAO,IAAMA,eAAe,GAAG,UAACC,OAAD,EAA6B;EAAK,iBAC/DC,IAD+D,EAE/DC,OAF+D,EAE/B;IACC,iBACjCC,IADiC,EACE;MAAA;;;;UAEnC,UAAIH,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEI,aAAb,MAA0B,IAA1B,IAA0BC,aAA1B,GAA0B,MAA1B,GAA0BA,GAAEC,IAA5B,EACEJ,OAAO,CAACK,SAAR,GAAiBC,SAAQN,OAAO,CAACK,SAAR,IAAqB,EAA7B,EAAgC,CAAE,CAAC,gBAAD,EAAmBP,OAAO,CAACI,aAAR,CAAsBE,IAAzC,CAAF,CAAhC,CAAjB;UACF;UAAA;UAAA,EAAON,OAAO,CAACI,aAAR,CAAsBK,KAAtB,CAA4BR,IAA5B,EAAkCE,IAAlC,CAAP;;OAJmC;IAKpC,CANkC;EAMlC,CATgE;AAShE,CATM;AAWP,OAAO,IAAMO,sBAAsB,GAAqD;EACtFC,IAAI,EAAE,iBADgF;EAEtFC,IAAI,EAAE,CAAC,OAAD,CAFgF;EAGtFC,IAAI,EAAE,iBAHgF;EAItFC,QAAQ,EAAE,MAJ4E;EAKtFC,QAAQ,EAAE;AAL4E,CAAjF;AAQP,OAAO,IAAMC,cAAc,GAAG,UAAChB,OAAD,EAA6B;EAA0B,OAAC;IACpFiB,YAAY,EAAE,UAACC,WAAD,EAAY;MACxBA,WAAW,CAACC,GAAZ,CAAgBpB,eAAe,CAACC,OAAD,CAA/B,EAA0CU,sBAA1C;IACD;EAHmF,CAAD;AAInF,CAJK","names":["retryMiddleware","options","next","context","args","retryStrategy","_a","mode","userAgent","__spread","retry","retryMiddlewareOptions","name","tags","step","priority","override","getRetryPlugin","applyToStack","clientStack","add"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\github\\resumeprojectsrepo\\resumeprojects\\EliteManaging\\node_modules\\@aws-sdk\\middleware-retry\\src\\retryMiddleware.ts"],"sourcesContent":["import {\n  AbsoluteLocation,\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestHandlerOptions,\n  HandlerExecutionContext,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { RetryResolvedConfig } from \"./configurations\";\n\nexport const retryMiddleware = (options: RetryResolvedConfig) => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>,\n  context: HandlerExecutionContext\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => {\n  if (options?.retryStrategy?.mode)\n    context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", options.retryStrategy.mode]];\n  return options.retryStrategy.retry(next, args);\n};\n\nexport const retryMiddlewareOptions: FinalizeRequestHandlerOptions & AbsoluteLocation = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n  override: true,\n};\n\nexport const getRetryPlugin = (options: RetryResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n  },\n});\n"]},"metadata":{},"sourceType":"module"}