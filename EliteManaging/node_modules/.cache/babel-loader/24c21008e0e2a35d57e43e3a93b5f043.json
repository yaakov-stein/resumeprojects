{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { RestClient } from './RestClient';\nimport { Amplify, ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nvar logger = new Logger('RestAPI');\n/**\n * Export Cloud Logic APIs\n */\n\nvar RestAPIClass =\n/** @class */\nfunction () {\n  /**\n   * Initialize Rest API with AWS configuration\n   * @param {Object} options - Configuration object for API\n   */\n  function RestAPIClass(options) {\n    this._api = null;\n    this.Credentials = Credentials;\n    this._options = options;\n    logger.debug('API Options', this._options);\n  }\n\n  RestAPIClass.prototype.getModuleName = function () {\n    return 'RestAPI';\n  };\n  /**\n   * Configure API part with aws configurations\n   * @param {Object} config - Configuration of the API\n   * @return {Object} - The current configuration\n   */\n\n\n  RestAPIClass.prototype.configure = function (options) {\n    var _a = options || {},\n        _b = _a.API,\n        API = _b === void 0 ? {} : _b,\n        otherOptions = __rest(_a, [\"API\"]);\n\n    var opt = __assign(__assign({}, otherOptions), API);\n\n    logger.debug('configure Rest API', {\n      opt: opt\n    });\n\n    if (opt['aws_project_region']) {\n      if (opt['aws_cloud_logic_custom']) {\n        var custom = opt['aws_cloud_logic_custom'];\n        opt.endpoints = typeof custom === 'string' ? JSON.parse(custom) : custom;\n      }\n\n      opt = Object.assign({}, opt, {\n        region: opt['aws_project_region'],\n        header: {}\n      });\n    }\n\n    if (Array.isArray(opt.endpoints)) {\n      // Check if endpoints has custom_headers and validate if is a function\n      opt.endpoints.forEach(function (endpoint) {\n        if (typeof endpoint.custom_header !== 'undefined' && typeof endpoint.custom_header !== 'function') {\n          logger.warn('Rest API ' + endpoint.name + ', custom_header should be a function');\n          endpoint.custom_header = undefined;\n        }\n      });\n    } else if (this._options && Array.isArray(this._options.endpoints)) {\n      opt.endpoints = this._options.endpoints;\n    } else {\n      opt.endpoints = [];\n    }\n\n    this._options = Object.assign({}, this._options, opt);\n    this.createInstance();\n    return this._options;\n  };\n  /**\n   * Create an instance of API for the library\n   * @return - A promise of true if Success\n   */\n\n\n  RestAPIClass.prototype.createInstance = function () {\n    logger.debug('create Rest API instance');\n    this._api = new RestClient(this._options); // Share Amplify instance with client for SSR\n\n    this._api.Credentials = this.Credentials;\n    return true;\n  };\n  /**\n   * Make a GET request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.get = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.get(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a POST request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.post = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.post(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a PUT request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.put = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.put(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a PATCH request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.patch = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.patch(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a DEL request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.del = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.del(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Make a HEAD request\n   * @param {string} apiName - The api name of the request\n   * @param {string} path - The path of the request\n   * @param {json} [init] - Request extra params\n   * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n   */\n\n\n  RestAPIClass.prototype.head = function (apiName, path, init) {\n    try {\n      var apiInfo = this.getEndpointInfo(apiName, path);\n\n      var cancellableToken = this._api.getCancellableToken();\n\n      var initParams = Object.assign({}, init);\n      initParams.cancellableToken = cancellableToken;\n\n      var responsePromise = this._api.head(apiInfo, initParams);\n\n      this._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n      return responsePromise;\n    } catch (err) {\n      return Promise.reject(err.message);\n    }\n  };\n  /**\n   * Checks to see if an error thrown is from an api request cancellation\n   * @param {any} error - Any error\n   * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n   */\n\n\n  RestAPIClass.prototype.isCancel = function (error) {\n    return this._api.isCancel(error);\n  };\n  /**\n   * Cancels an inflight request\n   * @param {any} request - request to cancel\n   * @return {boolean} - A boolean indicating if the request was cancelled\n   */\n\n\n  RestAPIClass.prototype.cancel = function (request, message) {\n    return this._api.cancel(request, message);\n  };\n  /**\n   * Check if the request has a corresponding cancel token in the WeakMap.\n   * @params request - The request promise\n   * @return if the request has a corresponding cancel token.\n   */\n\n\n  RestAPIClass.prototype.hasCancelToken = function (request) {\n    return this._api.hasCancelToken(request);\n  };\n  /**\n   * Getting endpoint for API\n   * @param {string} apiName - The name of the api\n   * @return {string} - The endpoint of the api\n   */\n\n\n  RestAPIClass.prototype.endpoint = function (apiName) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2\n        /*return*/\n        , this._api.endpoint(apiName)];\n      });\n    });\n  };\n  /**\n   * Getting endpoint info for API\n   * @param {string} apiName - The name of the api\n   * @param {string} path - The path of the api that is going to accessed\n   * @return {ApiInfo} - The endpoint information for that api-name\n   */\n\n\n  RestAPIClass.prototype.getEndpointInfo = function (apiName, path) {\n    var cloud_logic_array = this._options.endpoints;\n\n    if (!Array.isArray(cloud_logic_array)) {\n      throw new Error(\"API category not configured\");\n    }\n\n    var apiConfig = cloud_logic_array.find(function (api) {\n      return api.name === apiName;\n    });\n\n    if (!apiConfig) {\n      throw new Error(\"API \" + apiName + \" does not exist\");\n    }\n\n    var response = {\n      endpoint: apiConfig.endpoint + path\n    };\n\n    if (typeof apiConfig.region === 'string') {\n      response.region = apiConfig.region;\n    } else if (typeof this._options.region === 'string') {\n      response.region = this._options.region;\n    }\n\n    if (typeof apiConfig.service === 'string') {\n      response.service = apiConfig.service || 'execute-api';\n    } else {\n      response.service = 'execute-api';\n    }\n\n    if (typeof apiConfig.custom_header === 'function') {\n      response.custom_header = apiConfig.custom_header;\n    } else {\n      response.custom_header = undefined;\n    }\n\n    return response;\n  };\n\n  return RestAPIClass;\n}();\n\nexport { RestAPIClass };\nexport var RestAPI = new RestAPIClass(null);\nAmplify.register(RestAPI);","map":{"version":3,"mappings":"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","names":["RestClient","Amplify","ConsoleLogger","Logger","Credentials","logger","options","_options","debug","RestAPIClass","_a","_b","API","otherOptions","opt","custom","endpoints","JSON","parse","Object","assign","region","header","Array","isArray","forEach","endpoint","custom_header","warn","name","undefined","createInstance","_api","apiName","path","init","apiInfo","getEndpointInfo","cancellableToken","getCancellableToken","initParams","responsePromise","get","updateRequestToBeCancellable","err","Promise","reject","message","post","put","patch","del","head","error","isCancel","request","cancel","hasCancelToken","cloud_logic_array","Error","apiConfig","find","response","service","RestAPI","register"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-amplify\\api-rest\\src\\RestAPI.ts"],"sourcesContent":["/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { RestClient } from './RestClient';\nimport {\n\tAmplify,\n\tConsoleLogger as Logger,\n\tCredentials,\n} from '@aws-amplify/core';\nimport { ApiInfo } from './types';\n\nconst logger = new Logger('RestAPI');\n\n/**\n * Export Cloud Logic APIs\n */\nexport class RestAPIClass {\n\t/**\n\t * @private\n\t */\n\tprivate _options;\n\tprivate _api: RestClient = null;\n\n\tCredentials = Credentials;\n\n\t/**\n\t * Initialize Rest API with AWS configuration\n\t * @param {Object} options - Configuration object for API\n\t */\n\tconstructor(options) {\n\t\tthis._options = options;\n\t\tlogger.debug('API Options', this._options);\n\t}\n\n\tpublic getModuleName() {\n\t\treturn 'RestAPI';\n\t}\n\n\t/**\n\t * Configure API part with aws configurations\n\t * @param {Object} config - Configuration of the API\n\t * @return {Object} - The current configuration\n\t */\n\tconfigure(options) {\n\t\tconst { API = {}, ...otherOptions } = options || {};\n\t\tlet opt = { ...otherOptions, ...API };\n\t\tlogger.debug('configure Rest API', { opt });\n\n\t\tif (opt['aws_project_region']) {\n\t\t\tif (opt['aws_cloud_logic_custom']) {\n\t\t\t\tconst custom = opt['aws_cloud_logic_custom'];\n\t\t\t\topt.endpoints =\n\t\t\t\t\ttypeof custom === 'string' ? JSON.parse(custom) : custom;\n\t\t\t}\n\n\t\t\topt = Object.assign({}, opt, {\n\t\t\t\tregion: opt['aws_project_region'],\n\t\t\t\theader: {},\n\t\t\t});\n\t\t}\n\n\t\tif (Array.isArray(opt.endpoints)) {\n\t\t\t// Check if endpoints has custom_headers and validate if is a function\n\t\t\topt.endpoints.forEach(endpoint => {\n\t\t\t\tif (\n\t\t\t\t\ttypeof endpoint.custom_header !== 'undefined' &&\n\t\t\t\t\ttypeof endpoint.custom_header !== 'function'\n\t\t\t\t) {\n\t\t\t\t\tlogger.warn(\n\t\t\t\t\t\t'Rest API ' + endpoint.name + ', custom_header should be a function'\n\t\t\t\t\t);\n\t\t\t\t\tendpoint.custom_header = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (this._options && Array.isArray(this._options.endpoints)) {\n\t\t\topt.endpoints = this._options.endpoints;\n\t\t} else {\n\t\t\topt.endpoints = [];\n\t\t}\n\n\t\tthis._options = Object.assign({}, this._options, opt);\n\n\t\tthis.createInstance();\n\n\t\treturn this._options;\n\t}\n\n\t/**\n\t * Create an instance of API for the library\n\t * @return - A promise of true if Success\n\t */\n\tcreateInstance() {\n\t\tlogger.debug('create Rest API instance');\n\t\tthis._api = new RestClient(this._options);\n\n\t\t// Share Amplify instance with client for SSR\n\t\tthis._api.Credentials = this.Credentials;\n\t\treturn true;\n\t}\n\n\t/**\n\t * Make a GET request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tget(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.get(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Make a POST request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpost(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.post(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Make a PUT request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tput(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.put(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Make a PATCH request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tpatch(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.patch(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Make a DEL request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\tdel(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.del(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Make a HEAD request\n\t * @param {string} apiName - The api name of the request\n\t * @param {string} path - The path of the request\n\t * @param {json} [init] - Request extra params\n\t * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n\t */\n\thead(apiName, path, init): Promise<any> {\n\t\ttry {\n\t\t\tconst apiInfo = this.getEndpointInfo(apiName, path);\n\n\t\t\tconst cancellableToken = this._api.getCancellableToken();\n\n\t\t\tconst initParams = Object.assign({}, init);\n\t\t\tinitParams.cancellableToken = cancellableToken;\n\n\t\t\tconst responsePromise = this._api.head(apiInfo, initParams);\n\n\t\t\tthis._api.updateRequestToBeCancellable(responsePromise, cancellableToken);\n\n\t\t\treturn responsePromise;\n\t\t} catch (err) {\n\t\t\treturn Promise.reject(err.message);\n\t\t}\n\t}\n\n\t/**\n\t * Checks to see if an error thrown is from an api request cancellation\n\t * @param {any} error - Any error\n\t * @return {boolean} - A boolean indicating if the error was from an api request cancellation\n\t */\n\tisCancel(error) {\n\t\treturn this._api.isCancel(error);\n\t}\n\n\t/**\n\t * Cancels an inflight request\n\t * @param {any} request - request to cancel\n\t * @return {boolean} - A boolean indicating if the request was cancelled\n\t */\n\tcancel(request: Promise<any>, message?: string) {\n\t\treturn this._api.cancel(request, message);\n\t}\n\n\t/**\n\t * Check if the request has a corresponding cancel token in the WeakMap.\n\t * @params request - The request promise\n\t * @return if the request has a corresponding cancel token.\n\t */\n\thasCancelToken(request: Promise<any>) {\n\t\treturn this._api.hasCancelToken(request);\n\t}\n\n\t/**\n\t * Getting endpoint for API\n\t * @param {string} apiName - The name of the api\n\t * @return {string} - The endpoint of the api\n\t */\n\tasync endpoint(apiName) {\n\t\treturn this._api.endpoint(apiName);\n\t}\n\n\t/**\n\t * Getting endpoint info for API\n\t * @param {string} apiName - The name of the api\n\t * @param {string} path - The path of the api that is going to accessed\n\t * @return {ApiInfo} - The endpoint information for that api-name\n\t */\n\tprivate getEndpointInfo(apiName: string, path: string): ApiInfo {\n\t\tconst cloud_logic_array = this._options.endpoints;\n\n\t\tif (!Array.isArray(cloud_logic_array)) {\n\t\t\tthrow new Error(`API category not configured`);\n\t\t}\n\n\t\tconst apiConfig = cloud_logic_array.find(api => api.name === apiName);\n\n\t\tif (!apiConfig) {\n\t\t\tthrow new Error(`API ${apiName} does not exist`);\n\t\t}\n\n\t\tconst response: ApiInfo = {\n\t\t\tendpoint: apiConfig.endpoint + path,\n\t\t};\n\n\t\tif (typeof apiConfig.region === 'string') {\n\t\t\tresponse.region = apiConfig.region;\n\t\t} else if (typeof this._options.region === 'string') {\n\t\t\tresponse.region = this._options.region;\n\t\t}\n\n\t\tif (typeof apiConfig.service === 'string') {\n\t\t\tresponse.service = apiConfig.service || 'execute-api';\n\t\t} else {\n\t\t\tresponse.service = 'execute-api';\n\t\t}\n\n\t\tif (typeof apiConfig.custom_header === 'function') {\n\t\t\tresponse.custom_header = apiConfig.custom_header;\n\t\t} else {\n\t\t\tresponse.custom_header = undefined;\n\t\t}\n\n\t\treturn response;\n\t}\n}\n\nexport const RestAPI = new RestAPIClass(null);\nAmplify.register(RestAPI);\n"]},"metadata":{},"sourceType":"module"}