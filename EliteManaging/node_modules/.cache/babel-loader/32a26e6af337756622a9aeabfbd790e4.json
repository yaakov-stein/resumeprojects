{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport { isIdentifyLabelsInput, isIdentifyEntitiesInput, isIdentifyTextInput } from '../Predictions';\nimport { Logger } from '@aws-amplify/core';\nvar logger = new Logger('AbstractIdentifyPredictionsProvider');\n\nvar AbstractIdentifyPredictionsProvider =\n/** @class */\nfunction (_super) {\n  __extends(AbstractIdentifyPredictionsProvider, _super);\n\n  function AbstractIdentifyPredictionsProvider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractIdentifyPredictionsProvider.prototype.getCategory = function () {\n    return 'Identify';\n  };\n\n  AbstractIdentifyPredictionsProvider.prototype.identify = function (input) {\n    if (isIdentifyTextInput(input)) {\n      logger.debug('identifyText');\n      return this.identifyText(input);\n    } else if (isIdentifyLabelsInput(input)) {\n      logger.debug('identifyLabels');\n      return this.identifyLabels(input);\n    } else if (isIdentifyEntitiesInput(input)) {\n      logger.debug('identifyEntities');\n      return this.identifyEntities(input);\n    }\n  };\n\n  AbstractIdentifyPredictionsProvider.prototype.identifyText = function (input) {\n    throw new Error('identifyText is not implemented by this provider.');\n  };\n\n  AbstractIdentifyPredictionsProvider.prototype.identifyLabels = function (input) {\n    throw new Error('identifyLabels is not implemented by this provider');\n  };\n\n  AbstractIdentifyPredictionsProvider.prototype.identifyEntities = function (input) {\n    throw new Error('identifyEntities is not implemented by this provider');\n  };\n\n  return AbstractIdentifyPredictionsProvider;\n}(AbstractPredictionsProvider);\n\nexport { AbstractIdentifyPredictionsProvider };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,2BAAT,QAA4C,+BAA5C;AACA,SAGCC,qBAHD,EAICC,uBAJD,EAMCC,mBAND,QAUO,gBAVP;AAWA,SAASC,MAAT,QAAuB,mBAAvB;AACA,IAAMC,MAAM,GAAG,IAAID,MAAJ,CAAW,qCAAX,CAAf;;AAEA;AAAA;AAAA;EAAkEE;;EAAlE;;EAuCC;;EAtCAC;IACC,OAAO,UAAP;EACA,CAFD;;EAIAA,mEACCC,KADD,EACuE;IAItE,IAAIL,mBAAmB,CAACK,KAAD,CAAvB,EAAgC;MAC/BH,MAAM,CAACI,KAAP,CAAa,cAAb;MACA,OAAO,KAAKC,YAAL,CAAkBF,KAAlB,CAAP;IACA,CAHD,MAGO,IAAIP,qBAAqB,CAACO,KAAD,CAAzB,EAAkC;MACxCH,MAAM,CAACI,KAAP,CAAa,gBAAb;MACA,OAAO,KAAKE,cAAL,CAAoBH,KAApB,CAAP;IACA,CAHM,MAGA,IAAIN,uBAAuB,CAACM,KAAD,CAA3B,EAAoC;MAC1CH,MAAM,CAACI,KAAP,CAAa,kBAAb;MACA,OAAO,KAAKG,gBAAL,CAAsBJ,KAAtB,CAAP;IACA;EACD,CAfD;;EAiBUD,6DAAV,UACCC,KADD,EACyB;IAExB,MAAM,IAAIK,KAAJ,CAAU,mDAAV,CAAN;EACA,CAJS;;EAMAN,+DAAV,UACCC,KADD,EAC2B;IAE1B,MAAM,IAAIK,KAAJ,CAAU,oDAAV,CAAN;EACA,CAJS;;EAMAN,iEAAV,UACCC,KADD,EAC6B;IAE5B,MAAM,IAAIK,KAAJ,CAAU,sDAAV,CAAN;EACA,CAJS;;EAKX;AAAC,CAvCD,CAAkEb,2BAAlE","names":["AbstractPredictionsProvider","isIdentifyLabelsInput","isIdentifyEntitiesInput","isIdentifyTextInput","Logger","logger","__extends","AbstractIdentifyPredictionsProvider","input","debug","identifyText","identifyLabels","identifyEntities","Error"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-amplify\\predictions\\src\\types\\Providers\\AbstractIdentifyPredictionsProvider.ts"],"sourcesContent":["import { AbstractPredictionsProvider } from './AbstractPredictionsProvider';\nimport {\n\tIdentifyLabelsInput,\n\tIdentifyEntitiesInput,\n\tisIdentifyLabelsInput,\n\tisIdentifyEntitiesInput,\n\tIdentifyTextInput,\n\tisIdentifyTextInput,\n\tIdentifyTextOutput,\n\tIdentifyLabelsOutput,\n\tIdentifyEntitiesOutput,\n} from '../Predictions';\nimport { Logger } from '@aws-amplify/core';\nconst logger = new Logger('AbstractIdentifyPredictionsProvider');\n\nexport abstract class AbstractIdentifyPredictionsProvider extends AbstractPredictionsProvider {\n\tgetCategory(): string {\n\t\treturn 'Identify';\n\t}\n\n\tidentify(\n\t\tinput: IdentifyTextInput | IdentifyLabelsInput | IdentifyEntitiesInput\n\t): Promise<\n\t\tIdentifyTextOutput | IdentifyLabelsOutput | IdentifyEntitiesOutput\n\t> {\n\t\tif (isIdentifyTextInput(input)) {\n\t\t\tlogger.debug('identifyText');\n\t\t\treturn this.identifyText(input);\n\t\t} else if (isIdentifyLabelsInput(input)) {\n\t\t\tlogger.debug('identifyLabels');\n\t\t\treturn this.identifyLabels(input);\n\t\t} else if (isIdentifyEntitiesInput(input)) {\n\t\t\tlogger.debug('identifyEntities');\n\t\t\treturn this.identifyEntities(input);\n\t\t}\n\t}\n\n\tprotected identifyText(\n\t\tinput: IdentifyTextInput\n\t): Promise<IdentifyTextOutput> {\n\t\tthrow new Error('identifyText is not implemented by this provider.');\n\t}\n\n\tprotected identifyLabels(\n\t\tinput: IdentifyLabelsInput\n\t): Promise<IdentifyLabelsOutput> {\n\t\tthrow new Error('identifyLabels is not implemented by this provider');\n\t}\n\n\tprotected identifyEntities(\n\t\tinput: IdentifyEntitiesInput\n\t): Promise<IdentifyEntitiesOutput> {\n\t\tthrow new Error('identifyEntities is not implemented by this provider');\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}