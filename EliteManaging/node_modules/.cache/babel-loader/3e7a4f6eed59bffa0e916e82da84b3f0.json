{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport { AbstractPredictionsProvider } from '../types/Providers';\nimport { AmazonAIConvertPredictionsProvider } from './AmazonAIConvertPredictionsProvider';\nimport { AmazonAIInterpretPredictionsProvider } from './AmazonAIInterpretPredictionsProvider';\nimport { AmazonAIIdentifyPredictionsProvider } from './AmazonAIIdentifyPredictionsProvider';\n\nvar AmazonAIPredictionsProvider =\n/** @class */\nfunction (_super) {\n  __extends(AmazonAIPredictionsProvider, _super);\n\n  function AmazonAIPredictionsProvider() {\n    var _this = _super.call(this) || this;\n\n    _this.convertProvider = new AmazonAIConvertPredictionsProvider();\n    _this.identifyProvider = new AmazonAIIdentifyPredictionsProvider();\n    _this.interpretProvider = new AmazonAIInterpretPredictionsProvider();\n    return _this;\n  }\n\n  AmazonAIPredictionsProvider.prototype.getCategory = function () {\n    return 'Predictions';\n  };\n\n  AmazonAIPredictionsProvider.prototype.getProviderName = function () {\n    return 'AmazonAIPredictionsProvider';\n  };\n\n  AmazonAIPredictionsProvider.prototype.configure = function (config) {\n    this.convertProvider.configure(config.convert);\n    this.identifyProvider.configure(config.identify);\n    this.interpretProvider.configure(config.interpret);\n    return config;\n  };\n\n  AmazonAIPredictionsProvider.prototype.interpret = function (input) {\n    return this.interpretProvider.interpret(input);\n  };\n\n  AmazonAIPredictionsProvider.prototype.convert = function (input) {\n    return this.convertProvider.convert(input);\n  };\n\n  AmazonAIPredictionsProvider.prototype.identify = function (input) {\n    return this.identifyProvider.identify(input);\n  };\n\n  return AmazonAIPredictionsProvider;\n}(AbstractPredictionsProvider);\n\nexport { AmazonAIPredictionsProvider };\n/**\n * @deprecated use named import\n */\n\nexport default AmazonAIPredictionsProvider;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,2BAAT,QAA4C,oBAA5C;AACA,SAASC,kCAAT,QAAmD,sCAAnD;AACA,SAASC,oCAAT,QAAqD,wCAArD;AACA,SAASC,mCAAT,QAAoD,uCAApD;;AAmBA;AAAA;AAAA;EAAiDC;;EAKhD;IAAA,YACCC,qBAAO,IADR;;IAECC,KAAI,CAACC,eAAL,GAAuB,IAAIN,kCAAJ,EAAvB;IACAK,KAAI,CAACE,gBAAL,GAAwB,IAAIL,mCAAJ,EAAxB;IACAG,KAAI,CAACG,iBAAL,GAAyB,IAAIP,oCAAJ,EAAzB;;EACA;;EAEDQ;IACC,OAAO,aAAP;EACA,CAFD;;EAIAA;IACC,OAAO,6BAAP;EACA,CAFD;;EAIAA,4DAAUC,MAAV,EAAoC;IACnC,KAAKJ,eAAL,CAAqBK,SAArB,CAA+BD,MAAM,CAACE,OAAtC;IACA,KAAKL,gBAAL,CAAsBI,SAAtB,CAAgCD,MAAM,CAACG,QAAvC;IACA,KAAKL,iBAAL,CAAuBG,SAAvB,CAAiCD,MAAM,CAACI,SAAxC;IACA,OAAOJ,MAAP;EACA,CALD;;EAOAD,4DAAUM,KAAV,EAAmC;IAClC,OAAO,KAAKP,iBAAL,CAAuBM,SAAvB,CAAiCC,KAAjC,CAAP;EACA,CAFD;;EAIAN,0DACCM,KADD,EACkE;IAEjE,OAAO,KAAKT,eAAL,CAAqBM,OAArB,CAA6BG,KAA7B,CAAP;EACA,CAJD;;EAMAN,2DACCM,KADD,EACuE;IAItE,OAAO,KAAKR,gBAAL,CAAsBM,QAAtB,CAA+BE,KAA/B,CAAP;EACA,CAND;;EAOD;AAAC,CA5CD,CAAiDhB,2BAAjD;;;AA8CA;;;;AAGA,eAAeU,2BAAf","names":["AbstractPredictionsProvider","AmazonAIConvertPredictionsProvider","AmazonAIInterpretPredictionsProvider","AmazonAIIdentifyPredictionsProvider","__extends","_super","_this","convertProvider","identifyProvider","interpretProvider","AmazonAIPredictionsProvider","config","configure","convert","identify","interpret","input"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-amplify\\predictions\\src\\Providers\\AmazonAIPredictionsProvider.ts"],"sourcesContent":["import { AbstractPredictionsProvider } from '../types/Providers';\nimport { AmazonAIConvertPredictionsProvider } from './AmazonAIConvertPredictionsProvider';\nimport { AmazonAIInterpretPredictionsProvider } from './AmazonAIInterpretPredictionsProvider';\nimport { AmazonAIIdentifyPredictionsProvider } from './AmazonAIIdentifyPredictionsProvider';\nimport {\n\tTranslateTextInput,\n\tTextToSpeechInput,\n\tSpeechToTextInput,\n\tPredictionsOptions,\n\tIdentifyTextInput,\n\tIdentifyTextOutput,\n\tIdentifyLabelsInput,\n\tIdentifyLabelsOutput,\n\tIdentifyEntitiesInput,\n\tIdentifyEntitiesOutput,\n\tTranslateTextOutput,\n\tTextToSpeechOutput,\n\tSpeechToTextOutput,\n\tInterpretTextInput,\n\tInterpretTextOutput,\n} from '../types';\n\nexport class AmazonAIPredictionsProvider extends AbstractPredictionsProvider {\n\tprivate convertProvider: AmazonAIConvertPredictionsProvider;\n\tprivate identifyProvider: AmazonAIIdentifyPredictionsProvider;\n\tprivate interpretProvider: AmazonAIInterpretPredictionsProvider;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis.convertProvider = new AmazonAIConvertPredictionsProvider();\n\t\tthis.identifyProvider = new AmazonAIIdentifyPredictionsProvider();\n\t\tthis.interpretProvider = new AmazonAIInterpretPredictionsProvider();\n\t}\n\n\tgetCategory(): string {\n\t\treturn 'Predictions';\n\t}\n\n\tgetProviderName(): string {\n\t\treturn 'AmazonAIPredictionsProvider';\n\t}\n\n\tconfigure(config: PredictionsOptions) {\n\t\tthis.convertProvider.configure(config.convert);\n\t\tthis.identifyProvider.configure(config.identify);\n\t\tthis.interpretProvider.configure(config.interpret);\n\t\treturn config;\n\t}\n\n\tinterpret(input: InterpretTextInput): Promise<InterpretTextOutput> {\n\t\treturn this.interpretProvider.interpret(input);\n\t}\n\n\tconvert(\n\t\tinput: TranslateTextInput | TextToSpeechInput | SpeechToTextInput\n\t): Promise<TextToSpeechOutput | TranslateTextOutput | SpeechToTextOutput> {\n\t\treturn this.convertProvider.convert(input);\n\t}\n\n\tidentify(\n\t\tinput: IdentifyTextInput | IdentifyLabelsInput | IdentifyEntitiesInput\n\t): Promise<\n\t\tIdentifyTextOutput | IdentifyLabelsOutput | IdentifyEntitiesOutput\n\t> {\n\t\treturn this.identifyProvider.identify(input);\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default AmazonAIPredictionsProvider;\n"]},"metadata":{},"sourceType":"module"}