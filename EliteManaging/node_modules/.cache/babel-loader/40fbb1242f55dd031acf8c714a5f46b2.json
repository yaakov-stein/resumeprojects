{"ast":null,"code":"import { __asyncGenerator, __await, __awaiter, __generator } from \"tslib\";\n/**\n * A util function converting ReadableStream into an async iterable.\n * Reference: https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n */\n\nexport var readableStreamtoIterable = function (readableStream) {\n  var _a;\n\n  return _a = {}, _a[Symbol.asyncIterator] = function () {\n    return __asyncGenerator(this, arguments, function () {\n      var reader, _a, done, value;\n\n      return __generator(this, function (_b) {\n        switch (_b.label) {\n          case 0:\n            reader = readableStream.getReader();\n            _b.label = 1;\n\n          case 1:\n            _b.trys.push([1,, 9, 10]);\n\n            _b.label = 2;\n\n          case 2:\n            if (!true) return [3\n            /*break*/\n            , 8];\n            return [4\n            /*yield*/\n            , __await(reader.read())];\n\n          case 3:\n            _a = _b.sent(), done = _a.done, value = _a.value;\n            if (!done) return [3\n            /*break*/\n            , 5];\n            return [4\n            /*yield*/\n            , __await(void 0)];\n\n          case 4:\n            return [2\n            /*return*/\n            , _b.sent()];\n\n          case 5:\n            return [4\n            /*yield*/\n            , __await(value)];\n\n          case 6:\n            return [4\n            /*yield*/\n            , _b.sent()];\n\n          case 7:\n            _b.sent();\n\n            return [3\n            /*break*/\n            , 2];\n\n          case 8:\n            return [3\n            /*break*/\n            , 10];\n\n          case 9:\n            reader.releaseLock();\n            return [7\n            /*endfinally*/\n            ];\n\n          case 10:\n            return [2\n            /*return*/\n            ];\n        }\n      });\n    });\n  }, _a;\n};\n/**\n * A util function converting async iterable to a ReadableStream.\n */\n\nexport var iterableToReadableStream = function (asyncIterable) {\n  var iterator = asyncIterable[Symbol.asyncIterator]();\n  return new ReadableStream({\n    pull: function (controller) {\n      return __awaiter(this, void 0, void 0, function () {\n        var _a, done, value;\n\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              return [4\n              /*yield*/\n              , iterator.next()];\n\n            case 1:\n              _a = _b.sent(), done = _a.done, value = _a.value;\n\n              if (done) {\n                return [2\n                /*return*/\n                , controller.close()];\n              }\n\n              controller.enqueue(value);\n              return [2\n              /*return*/\n              ];\n          }\n        });\n      });\n    }\n  });\n};","map":{"version":3,"mappings":";AAAA;;;;;AAIA,OAAO,IAAMA,wBAAwB,GAAG,UAAIC,cAAJ,EAAqC;;;EAAuB,gBAClGC,GAACC,MAAM,CAACC,aAAR,IAAwB;;;;;;;YAChBC,MAAM,GAAGJ,cAAc,CAACK,SAAf,EAAT;;;;;;;;;iBAEG,MAAI;YAAA;YAAA;YACe;YAAA;YAAA,UAAMD,MAAM,CAACE,IAAP,EAAN;;;YAAlBL,KAAkBM,SAAlB,EAAEC,IAAI,UAAN,EAAQC,KAAK,WAAb;iBACFD;YAAA;YAAA;;;;;;YAAM;YAAA;YAAA;;;;;sBACJC;;;YAAN;YAAA;YAAA;;;YAAAF;;;;;;;;;;;;YAGFH,MAAM,CAACM,WAAP;;;;;;;;;;;;EAEH,CAZiG;AAalG,CAbK;AAeP;;;;AAGA,OAAO,IAAMC,wBAAwB,GAAG,UAAIC,aAAJ,EAAmC;EACzE,IAAMC,QAAQ,GAAGD,aAAa,CAACV,MAAM,CAACC,aAAR,CAAb,EAAjB;EACA,OAAO,IAAIW,cAAJ,CAAmB;IAClBC,IAAI,YAACC,UAAD,EAAW;;;;;;;cACK;cAAA;cAAA,EAAMH,QAAQ,CAACI,IAAT,EAAN;;;cAAlBhB,KAAkBM,SAAlB,EAAEC,IAAI,UAAN,EAAQC,KAAK,WAAb;;cACN,IAAID,IAAJ,EAAU;gBACR;gBAAA;gBAAA,EAAOQ,UAAU,CAACE,KAAX,EAAP;cACD;;cACDF,UAAU,CAACG,OAAX,CAAmBV,KAAnB;;;;;;;IACD;EAPuB,CAAnB,CAAP;AASD,CAXM","names":["readableStreamtoIterable","readableStream","_a","Symbol","asyncIterator","reader","getReader","read","_b","done","value","releaseLock","iterableToReadableStream","asyncIterable","iterator","ReadableStream","pull","controller","next","close","enqueue"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-sdk\\eventstream-serde-browser\\src\\utils.ts"],"sourcesContent":["/**\n * A util function converting ReadableStream into an async iterable.\n * Reference: https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n */\nexport const readableStreamtoIterable = <T>(readableStream: ReadableStream<T>): AsyncIterable<T> => ({\n  [Symbol.asyncIterator]: async function* () {\n    const reader = readableStream.getReader();\n    try {\n      while (true) {\n        const { done, value } = await reader.read();\n        if (done) return;\n        yield value as T;\n      }\n    } finally {\n      reader.releaseLock();\n    }\n  },\n});\n\n/**\n * A util function converting async iterable to a ReadableStream.\n */\nexport const iterableToReadableStream = <T>(asyncIterable: AsyncIterable<T>): ReadableStream<T> => {\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  return new ReadableStream({\n    async pull(controller) {\n      const { done, value } = await iterator.next();\n      if (done) {\n        return controller.close();\n      }\n      controller.enqueue(value);\n    },\n  });\n};\n"]},"metadata":{},"sourceType":"module"}