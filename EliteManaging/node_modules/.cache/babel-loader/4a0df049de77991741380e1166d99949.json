{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { extendedEncodeURIComponent as __extendedEncodeURIComponent } from \"@aws-sdk/smithy-client\";\nexport var serializeAws_restJson1CreateAppCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps\";\n\n          if (input.CreateApplicationRequest !== undefined) {\n            body = serializeAws_restJson1CreateApplicationRequest(input.CreateApplicationRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateCampaignCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.WriteCampaignRequest !== undefined) {\n            body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateEmailTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.EmailTemplateRequest !== undefined) {\n            body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateExportJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.ExportJobRequest !== undefined) {\n            body = serializeAws_restJson1ExportJobRequest(input.ExportJobRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateImportJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.ImportJobRequest !== undefined) {\n            body = serializeAws_restJson1ImportJobRequest(input.ImportJobRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateJourneyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.WriteJourneyRequest !== undefined) {\n            body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreatePushTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.PushNotificationTemplateRequest !== undefined) {\n            body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateRecommenderConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/recommenders\";\n\n          if (input.CreateRecommenderConfiguration !== undefined) {\n            body = serializeAws_restJson1CreateRecommenderConfigurationShape(input.CreateRecommenderConfiguration, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateSegmentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.WriteSegmentRequest !== undefined) {\n            body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateSmsTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.SMSTemplateRequest !== undefined) {\n            body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1CreateVoiceTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.VoiceTemplateRequest !== undefined) {\n            body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteAdmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsVoipChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteAppCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteBaiduChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteCampaignCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEmailChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEmailTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEndpointCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EndpointId !== undefined) {\n            labelValue = input.EndpointId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteEventStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteGcmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteJourneyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeletePushTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteRecommenderConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n\n          if (input.RecommenderId !== undefined) {\n            labelValue = input.RecommenderId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteSegmentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteSmsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteSmsTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteUserEndpointsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.UserId !== undefined) {\n            labelValue = input.UserId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: UserId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteVoiceChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1DeleteVoiceTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetAdmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsVoipChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApnsVoipSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetAppCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApplicationDateRangeKpiCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/kpis/daterange/{KpiName}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.KpiName !== undefined) {\n            labelValue = input.KpiName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: KpiName.\");\n          }\n\n          query = __assign(__assign(__assign(__assign({}, input.EndTime !== undefined && {\n            \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.StartTime !== undefined && {\n            \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetApplicationSettingsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetAppsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps\";\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetBaiduChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignActivitiesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/activities\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignDateRangeKpiCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/kpis/daterange/{KpiName}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          if (input.KpiName !== undefined) {\n            labelValue = input.KpiName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: KpiName.\");\n          }\n\n          query = __assign(__assign(__assign(__assign({}, input.EndTime !== undefined && {\n            \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.StartTime !== undefined && {\n            \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignVersionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions/{Version}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          if (input.Version !== undefined) {\n            labelValue = input.Version;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Version.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Version.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetCampaignVersionsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetChannelsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEmailChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEmailTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEndpointCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EndpointId !== undefined) {\n            labelValue = input.EndpointId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetEventStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetExportJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export/{JobId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JobId !== undefined) {\n            labelValue = input.JobId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JobId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetExportJobsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetGcmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetImportJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import/{JobId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JobId !== undefined) {\n            labelValue = input.JobId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JobId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetImportJobsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyDateRangeKpiCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/kpis/daterange/{KpiName}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          if (input.KpiName !== undefined) {\n            labelValue = input.KpiName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: KpiName.\");\n          }\n\n          query = __assign(__assign(__assign(__assign({}, input.EndTime !== undefined && {\n            \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          }), input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.StartTime !== undefined && {\n            \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString()\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/activities/{JourneyActivityId}/execution-metrics\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyActivityId !== undefined) {\n            labelValue = input.JourneyActivityId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyActivityId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyActivityId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyActivityId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetJourneyExecutionMetricsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/execution-metrics\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetPushTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetRecommenderConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n\n          if (input.RecommenderId !== undefined) {\n            labelValue = input.RecommenderId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetRecommenderConfigurationsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/recommenders\";\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentExportJobsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/export\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentImportJobsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/import\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentVersionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions/{Version}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          if (input.Version !== undefined) {\n            labelValue = input.Version;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: Version.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: Version.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSegmentVersionsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSmsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSmsTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetUserEndpointsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.UserId !== undefined) {\n            labelValue = input.UserId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: UserId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetVoiceChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetVoiceTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign({}, input.Version !== undefined && {\n            version: input.Version\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListJourneysCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          query = __assign(__assign({}, input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Token !== undefined && {\n            token: input.Token\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListTagsForResourceCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/tags/{ResourceArn}\";\n\n          if (input.ResourceArn !== undefined) {\n            labelValue = input.ResourceArn;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n          }\n\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListTemplatesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates\";\n          query = __assign(__assign(__assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          }), input.Prefix !== undefined && {\n            prefix: input.Prefix\n          }), input.TemplateType !== undefined && {\n            \"template-type\": input.TemplateType\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1ListTemplateVersionsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/versions\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.TemplateType !== undefined) {\n            labelValue = input.TemplateType;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n          }\n\n          query = __assign(__assign({}, input.NextToken !== undefined && {\n            \"next-token\": input.NextToken\n          }), input.PageSize !== undefined && {\n            \"page-size\": input.PageSize\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PhoneNumberValidateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/phone/number/validate\";\n\n          if (input.NumberValidateRequest !== undefined) {\n            body = serializeAws_restJson1NumberValidateRequest(input.NumberValidateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutEventsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/events\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EventsRequest !== undefined) {\n            body = serializeAws_restJson1EventsRequest(input.EventsRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutEventStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.WriteEventStream !== undefined) {\n            body = serializeAws_restJson1WriteEventStream(input.WriteEventStream, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1RemoveAttributesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/attributes/{AttributeType}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.AttributeType !== undefined) {\n            labelValue = input.AttributeType;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: AttributeType.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{AttributeType}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: AttributeType.\");\n          }\n\n          if (input.UpdateAttributesRequest !== undefined) {\n            body = serializeAws_restJson1UpdateAttributesRequest(input.UpdateAttributesRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1SendMessagesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/messages\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.MessageRequest !== undefined) {\n            body = serializeAws_restJson1MessageRequest(input.MessageRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1SendUsersMessagesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/users-messages\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SendUsersMessageRequest !== undefined) {\n            body = serializeAws_restJson1SendUsersMessageRequest(input.SendUsersMessageRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1TagResourceCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/tags/{ResourceArn}\";\n\n          if (input.ResourceArn !== undefined) {\n            labelValue = input.ResourceArn;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n          }\n\n          if (input.TagsModel !== undefined) {\n            body = serializeAws_restJson1TagsModel(input.TagsModel, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UntagResourceCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {};\n          resolvedPath = \"/v1/tags/{ResourceArn}\";\n\n          if (input.ResourceArn !== undefined) {\n            labelValue = input.ResourceArn;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n          }\n\n          query = __assign({}, input.TagKeys !== undefined && {\n            tagKeys: (input.TagKeys || []).map(function (_entry) {\n              return _entry;\n            })\n          });\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateAdmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.ADMChannelRequest !== undefined) {\n            body = serializeAws_restJson1ADMChannelRequest(input.ADMChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.APNSChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSChannelRequest(input.APNSChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.APNSSandboxChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSSandboxChannelRequest(input.APNSSandboxChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsVoipChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.APNSVoipChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSVoipChannelRequest(input.APNSVoipChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.APNSVoipSandboxChannelRequest !== undefined) {\n            body = serializeAws_restJson1APNSVoipSandboxChannelRequest(input.APNSVoipSandboxChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateApplicationSettingsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.WriteApplicationSettingsRequest !== undefined) {\n            body = serializeAws_restJson1WriteApplicationSettingsRequest(input.WriteApplicationSettingsRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateBaiduChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.BaiduChannelRequest !== undefined) {\n            body = serializeAws_restJson1BaiduChannelRequest(input.BaiduChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateCampaignCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.CampaignId !== undefined) {\n            labelValue = input.CampaignId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n          }\n\n          if (input.WriteCampaignRequest !== undefined) {\n            body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEmailChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EmailChannelRequest !== undefined) {\n            body = serializeAws_restJson1EmailChannelRequest(input.EmailChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEmailTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/email\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n\n          if (input.EmailTemplateRequest !== undefined) {\n            body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEndpointCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EndpointId !== undefined) {\n            labelValue = input.EndpointId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n          }\n\n          if (input.EndpointRequest !== undefined) {\n            body = serializeAws_restJson1EndpointRequest(input.EndpointRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateEndpointsBatchCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/endpoints\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.EndpointBatchRequest !== undefined) {\n            body = serializeAws_restJson1EndpointBatchRequest(input.EndpointBatchRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateGcmChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.GCMChannelRequest !== undefined) {\n            body = serializeAws_restJson1GCMChannelRequest(input.GCMChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateJourneyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          if (input.WriteJourneyRequest !== undefined) {\n            body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateJourneyStateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/state\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.JourneyId !== undefined) {\n            labelValue = input.JourneyId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n          }\n\n          if (input.JourneyStateRequest !== undefined) {\n            body = serializeAws_restJson1JourneyStateRequest(input.JourneyStateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdatePushTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/push\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n\n          if (input.PushNotificationTemplateRequest !== undefined) {\n            body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateRecommenderConfigurationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n\n          if (input.RecommenderId !== undefined) {\n            labelValue = input.RecommenderId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n          }\n\n          if (input.UpdateRecommenderConfiguration !== undefined) {\n            body = serializeAws_restJson1UpdateRecommenderConfigurationShape(input.UpdateRecommenderConfiguration, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateSegmentCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SegmentId !== undefined) {\n            labelValue = input.SegmentId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n          }\n\n          if (input.WriteSegmentRequest !== undefined) {\n            body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateSmsChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.SMSChannelRequest !== undefined) {\n            body = serializeAws_restJson1SMSChannelRequest(input.SMSChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateSmsTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n\n          if (input.SMSTemplateRequest !== undefined) {\n            body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateTemplateActiveVersionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/active-version\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          if (input.TemplateType !== undefined) {\n            labelValue = input.TemplateType;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n          }\n\n          if (input.TemplateActiveVersionRequest !== undefined) {\n            body = serializeAws_restJson1TemplateActiveVersionRequest(input.TemplateActiveVersionRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateVoiceChannelCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n\n          if (input.ApplicationId !== undefined) {\n            labelValue = input.ApplicationId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n          }\n\n          if (input.VoiceChannelRequest !== undefined) {\n            body = serializeAws_restJson1VoiceChannelRequest(input.VoiceChannelRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1UpdateVoiceTemplateCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, resolvedPath, labelValue, query, body, _a, hostname, _b, protocol, port;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n\n          if (input.TemplateName !== undefined) {\n            labelValue = input.TemplateName;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n          }\n\n          query = __assign(__assign({}, input.CreateNewVersion !== undefined && {\n            \"create-new-version\": input.CreateNewVersion.toString()\n          }), input.Version !== undefined && {\n            version: input.Version\n          });\n\n          if (input.VoiceTemplateRequest !== undefined) {\n            body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n          }\n\n          if (body === undefined) {\n            body = {};\n          }\n\n          body = JSON.stringify(body);\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          return [2\n          /*return*/\n          , new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"PUT\",\n            headers: headers,\n            path: resolvedPath,\n            query: query,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1CreateAppCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateAppCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateAppCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateCampaignCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateCampaignCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateEmailTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateEmailTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateExportJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateExportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateExportJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateImportJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateImportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateImportJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateJourneyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateJourneyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreatePushTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreatePushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreatePushTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateRecommenderConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateRecommenderConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateRecommenderConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateSegmentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateSegmentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateSmsTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateSmsTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1CreateVoiceTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 201 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1CreateVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CreateTemplateMessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1CreateVoiceTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteAdmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteAdmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ADMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteAdmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteApnsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteApnsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteApnsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteApnsSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteApnsSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteApnsSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteApnsVoipChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteApnsVoipChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteApnsVoipChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteAppCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteAppCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteAppCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteBaiduChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteBaiduChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BaiduChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteBaiduChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteCampaignCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteCampaignCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteEmailChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteEmailChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteEmailChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteEmailTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteEmailTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteEndpointCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteEndpointCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteEndpointCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteEventStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteEventStreamCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventStream: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteEventStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteGcmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteGcmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            GCMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteGcmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteJourneyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteJourneyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeletePushTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeletePushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeletePushTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteRecommenderConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteRecommenderConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteRecommenderConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteSegmentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSegmentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteSmsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteSmsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSmsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteSmsTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSmsTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteUserEndpointsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteUserEndpointsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteUserEndpointsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteVoiceChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteVoiceChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteVoiceChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1DeleteVoiceTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1DeleteVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteVoiceTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetAdmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetAdmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ADMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetAdmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApnsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApnsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApnsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApnsSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApnsSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApnsSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApnsVoipChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApnsVoipChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApnsVoipChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApnsVoipSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetAppCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetAppCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetAppCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApplicationDateRangeKpiCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApplicationDateRangeKpiCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationDateRangeKpiResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationDateRangeKpiResponse = deserializeAws_restJson1ApplicationDateRangeKpiResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApplicationDateRangeKpiCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetApplicationSettingsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetApplicationSettingsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationSettingsResource: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetApplicationSettingsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetAppsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetAppsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationsResponse = deserializeAws_restJson1ApplicationsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetAppsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetBaiduChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetBaiduChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BaiduChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetBaiduChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignActivitiesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignActivitiesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ActivitiesResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ActivitiesResponse = deserializeAws_restJson1ActivitiesResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignActivitiesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignDateRangeKpiCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignDateRangeKpiCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignDateRangeKpiResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignDateRangeKpiResponse = deserializeAws_restJson1CampaignDateRangeKpiResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignDateRangeKpiCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignVersionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignVersionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignVersionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetCampaignVersionsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetCampaignVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetCampaignVersionsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetChannelsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetChannelsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ChannelsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ChannelsResponse = deserializeAws_restJson1ChannelsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetChannelsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetEmailChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetEmailChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetEmailChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetEmailTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailTemplateResponse = deserializeAws_restJson1EmailTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetEmailTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetEndpointCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetEndpointCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetEndpointCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetEventStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetEventStreamCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventStream: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetEventStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetExportJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetExportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetExportJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetExportJobsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetExportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetExportJobsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetGcmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetGcmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            GCMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetGcmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetImportJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetImportJobCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetImportJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetImportJobsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetImportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetImportJobsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetJourneyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetJourneyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetJourneyDateRangeKpiCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetJourneyDateRangeKpiCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyDateRangeKpiResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyDateRangeKpiResponse = deserializeAws_restJson1JourneyDateRangeKpiResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetJourneyDateRangeKpiCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyExecutionActivityMetricsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyExecutionActivityMetricsResponse = deserializeAws_restJson1JourneyExecutionActivityMetricsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetJourneyExecutionMetricsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetJourneyExecutionMetricsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyExecutionMetricsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyExecutionMetricsResponse = deserializeAws_restJson1JourneyExecutionMetricsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetJourneyExecutionMetricsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetPushTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetPushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            PushNotificationTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.PushNotificationTemplateResponse = deserializeAws_restJson1PushNotificationTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetPushTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetRecommenderConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetRecommenderConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetRecommenderConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetRecommenderConfigurationsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetRecommenderConfigurationsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ListRecommenderConfigurationsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ListRecommenderConfigurationsResponse = deserializeAws_restJson1ListRecommenderConfigurationsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetRecommenderConfigurationsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentExportJobsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentExportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ExportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentExportJobsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentImportJobsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentImportJobsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ImportJobsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentImportJobsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentVersionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentVersionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentVersionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSegmentVersionsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSegmentVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSegmentVersionsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSmsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSmsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSmsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSmsTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSTemplateResponse = deserializeAws_restJson1SMSTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSmsTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetUserEndpointsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetUserEndpointsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EndpointsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetUserEndpointsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetVoiceChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetVoiceChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetVoiceChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetVoiceTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1GetVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceTemplateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceTemplateResponse = deserializeAws_restJson1VoiceTemplateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetVoiceTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListJourneysCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1ListJourneysCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneysResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneysResponse = deserializeAws_restJson1JourneysResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListJourneysCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListTagsForResourceCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1ListTagsForResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TagsModel: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.TagsModel = deserializeAws_restJson1TagsModel(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListTagsForResourceCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListTemplatesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1ListTemplatesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TemplatesResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.TemplatesResponse = deserializeAws_restJson1TemplatesResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListTemplatesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1ListTemplateVersionsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1ListTemplateVersionsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            TemplateVersionsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.TemplateVersionsResponse = deserializeAws_restJson1TemplateVersionsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ListTemplateVersionsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PhoneNumberValidateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1PhoneNumberValidateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            NumberValidateResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.NumberValidateResponse = deserializeAws_restJson1NumberValidateResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PhoneNumberValidateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutEventsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1PutEventsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventsResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventsResponse = deserializeAws_restJson1EventsResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutEventsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutEventStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1PutEventStreamCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EventStream: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutEventStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1RemoveAttributesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1RemoveAttributesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            AttributesResource: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.AttributesResource = deserializeAws_restJson1AttributesResource(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1RemoveAttributesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1SendMessagesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1SendMessagesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageResponse = deserializeAws_restJson1MessageResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1SendMessagesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1SendUsersMessagesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1SendUsersMessagesCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SendUsersMessageResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SendUsersMessageResponse = deserializeAws_restJson1SendUsersMessageResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1SendUsersMessagesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1TagResourceCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1TagResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1TagResourceCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UntagResourceCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 204 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UntagResourceCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UntagResourceCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, parsedBody, message;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n\n          switch (errorCode) {\n            default:\n              parsedBody = parsedOutput.body;\n              errorCode = parsedBody.code || parsedBody.Code || errorCode;\n              response = __assign(__assign({}, parsedBody), {\n                name: \"\" + errorCode,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output)\n              });\n          }\n\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateAdmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateAdmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ADMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateAdmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateApnsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateApnsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateApnsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateApnsSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateApnsSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateApnsSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateApnsVoipChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateApnsVoipChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateApnsVoipChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            APNSVoipSandboxChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateApplicationSettingsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateApplicationSettingsCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            ApplicationSettingsResource: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateApplicationSettingsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateBaiduChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateBaiduChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            BaiduChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateBaiduChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateCampaignCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateCampaignCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            CampaignResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateCampaignCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateEmailChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateEmailChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            EmailChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateEmailChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateEmailTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateEmailTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateEmailTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateEndpointCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateEndpointCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateEndpointCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateEndpointsBatchCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateEndpointsBatchCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateEndpointsBatchCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateGcmChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateGcmChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            GCMChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateGcmChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateJourneyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateJourneyCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateJourneyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 16];\n          }\n\n          return [3\n          /*break*/\n          , 18];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateJourneyStateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateJourneyStateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            JourneyResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateJourneyStateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdatePushTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdatePushTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdatePushTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateRecommenderConfigurationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateRecommenderConfigurationCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            RecommenderConfigurationResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateRecommenderConfigurationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateSegmentCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateSegmentCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SegmentResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateSegmentCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateSmsChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateSmsChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            SMSChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateSmsChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateSmsTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateSmsTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateSmsTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateTemplateActiveVersionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateTemplateActiveVersionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateTemplateActiveVersionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateVoiceChannelCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateVoiceChannelCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            VoiceChannelResponse: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateVoiceChannelCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1UpdateVoiceTemplateCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode !== 202 && output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_restJson1UpdateVoiceTemplateCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            MessageBody: undefined\n          };\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n          return [2\n          /*return*/\n          , Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1UpdateVoiceTemplateCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, parsedBody, message;\n\n    var _k;\n\n    return __generator(this, function (_l) {\n      switch (_l.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _k = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_k.body = _l.sent(), _k)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.pinpoint#BadRequestException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.pinpoint#ForbiddenException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.pinpoint#NotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n          }\n\n          return [3\n          /*break*/\n          , 16];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_l.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 17];\n\n        case 16:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _l.label = 17;\n\n        case 17:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadRequestExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"BadRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ConflictExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ConflictException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ForbiddenExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"ForbiddenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1InternalServerErrorExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"InternalServerErrorException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1MethodNotAllowedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"MethodNotAllowedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1NotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"NotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1PayloadTooLargeExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"PayloadTooLargeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_restJson1TooManyRequestsExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      contents = {\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        RequestID: undefined\n      };\n      data = parsedOutput.body;\n\n      if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = data.Message;\n      }\n\n      if (data.RequestID !== undefined && data.RequestID !== null) {\n        contents.RequestID = data.RequestID;\n      }\n\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_restJson1Activity = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.CUSTOM !== undefined && input.CUSTOM !== null && {\n    CUSTOM: serializeAws_restJson1CustomMessageActivity(input.CUSTOM, context)\n  }), input.ConditionalSplit !== undefined && input.ConditionalSplit !== null && {\n    ConditionalSplit: serializeAws_restJson1ConditionalSplitActivity(input.ConditionalSplit, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EMAIL !== undefined && input.EMAIL !== null && {\n    EMAIL: serializeAws_restJson1EmailMessageActivity(input.EMAIL, context)\n  }), input.Holdout !== undefined && input.Holdout !== null && {\n    Holdout: serializeAws_restJson1HoldoutActivity(input.Holdout, context)\n  }), input.MultiCondition !== undefined && input.MultiCondition !== null && {\n    MultiCondition: serializeAws_restJson1MultiConditionalSplitActivity(input.MultiCondition, context)\n  }), input.PUSH !== undefined && input.PUSH !== null && {\n    PUSH: serializeAws_restJson1PushMessageActivity(input.PUSH, context)\n  }), input.RandomSplit !== undefined && input.RandomSplit !== null && {\n    RandomSplit: serializeAws_restJson1RandomSplitActivity(input.RandomSplit, context)\n  }), input.SMS !== undefined && input.SMS !== null && {\n    SMS: serializeAws_restJson1SMSMessageActivity(input.SMS, context)\n  }), input.Wait !== undefined && input.Wait !== null && {\n    Wait: serializeAws_restJson1WaitActivity(input.Wait, context)\n  });\n};\n\nvar serializeAws_restJson1AddressConfiguration = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.BodyOverride !== undefined && input.BodyOverride !== null && {\n    BodyOverride: input.BodyOverride\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TitleOverride !== undefined && input.TitleOverride !== null && {\n    TitleOverride: input.TitleOverride\n  });\n};\n\nvar serializeAws_restJson1ADMChannelRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.ClientId !== undefined && input.ClientId !== null && {\n    ClientId: input.ClientId\n  }), input.ClientSecret !== undefined && input.ClientSecret !== null && {\n    ClientSecret: input.ClientSecret\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  });\n};\n\nvar serializeAws_restJson1ADMMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.ConsolidationKey !== undefined && input.ConsolidationKey !== null && {\n    ConsolidationKey: input.ConsolidationKey\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.ExpiresAfter !== undefined && input.ExpiresAfter !== null && {\n    ExpiresAfter: input.ExpiresAfter\n  }), input.IconReference !== undefined && input.IconReference !== null && {\n    IconReference: input.IconReference\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.MD5 !== undefined && input.MD5 !== null && {\n    MD5: input.MD5\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1AndroidPushNotificationTemplate = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1APNSChannelRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\n\nvar serializeAws_restJson1APNSMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.APNSPushType !== undefined && input.APNSPushType !== null && {\n    APNSPushType: input.APNSPushType\n  }), input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Badge !== undefined && input.Badge !== null && {\n    Badge: input.Badge\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Category !== undefined && input.Category !== null && {\n    Category: input.Category\n  }), input.CollapseId !== undefined && input.CollapseId !== null && {\n    CollapseId: input.CollapseId\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.PreferredAuthenticationMethod !== undefined && input.PreferredAuthenticationMethod !== null && {\n    PreferredAuthenticationMethod: input.PreferredAuthenticationMethod\n  }), input.Priority !== undefined && input.Priority !== null && {\n    Priority: input.Priority\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.ThreadId !== undefined && input.ThreadId !== null && {\n    ThreadId: input.ThreadId\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1APNSPushNotificationTemplate = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1APNSSandboxChannelRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\n\nvar serializeAws_restJson1APNSVoipChannelRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\n\nvar serializeAws_restJson1APNSVoipSandboxChannelRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.BundleId !== undefined && input.BundleId !== null && {\n    BundleId: input.BundleId\n  }), input.Certificate !== undefined && input.Certificate !== null && {\n    Certificate: input.Certificate\n  }), input.DefaultAuthenticationMethod !== undefined && input.DefaultAuthenticationMethod !== null && {\n    DefaultAuthenticationMethod: input.DefaultAuthenticationMethod\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.PrivateKey !== undefined && input.PrivateKey !== null && {\n    PrivateKey: input.PrivateKey\n  }), input.TeamId !== undefined && input.TeamId !== null && {\n    TeamId: input.TeamId\n  }), input.TokenKey !== undefined && input.TokenKey !== null && {\n    TokenKey: input.TokenKey\n  }), input.TokenKeyId !== undefined && input.TokenKeyId !== null && {\n    TokenKeyId: input.TokenKeyId\n  });\n};\n\nvar serializeAws_restJson1AttributeDimension = function (input, context) {\n  return __assign(__assign({}, input.AttributeType !== undefined && input.AttributeType !== null && {\n    AttributeType: input.AttributeType\n  }), input.Values !== undefined && input.Values !== null && {\n    Values: serializeAws_restJson1ListOf__string(input.Values, context)\n  });\n};\n\nvar serializeAws_restJson1BaiduChannelRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.ApiKey !== undefined && input.ApiKey !== null && {\n    ApiKey: input.ApiKey\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.SecretKey !== undefined && input.SecretKey !== null && {\n    SecretKey: input.SecretKey\n  });\n};\n\nvar serializeAws_restJson1BaiduMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.IconReference !== undefined && input.IconReference !== null && {\n    IconReference: input.IconReference\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1CampaignCustomMessage = function (input, context) {\n  return __assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: input.Data\n  });\n};\n\nvar serializeAws_restJson1CampaignEmailMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  }), input.HtmlBody !== undefined && input.HtmlBody !== null && {\n    HtmlBody: input.HtmlBody\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  });\n};\n\nvar serializeAws_restJson1CampaignEventFilter = function (input, context) {\n  return __assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context)\n  }), input.FilterType !== undefined && input.FilterType !== null && {\n    FilterType: input.FilterType\n  });\n};\n\nvar serializeAws_restJson1CampaignHook = function (input, context) {\n  return __assign(__assign(__assign({}, input.LambdaFunctionName !== undefined && input.LambdaFunctionName !== null && {\n    LambdaFunctionName: input.LambdaFunctionName\n  }), input.Mode !== undefined && input.Mode !== null && {\n    Mode: input.Mode\n  }), input.WebUrl !== undefined && input.WebUrl !== null && {\n    WebUrl: input.WebUrl\n  });\n};\n\nvar serializeAws_restJson1CampaignLimits = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Daily !== undefined && input.Daily !== null && {\n    Daily: input.Daily\n  }), input.MaximumDuration !== undefined && input.MaximumDuration !== null && {\n    MaximumDuration: input.MaximumDuration\n  }), input.MessagesPerSecond !== undefined && input.MessagesPerSecond !== null && {\n    MessagesPerSecond: input.MessagesPerSecond\n  }), input.Total !== undefined && input.Total !== null && {\n    Total: input.Total\n  });\n};\n\nvar serializeAws_restJson1CampaignSmsMessage = function (input, context) {\n  return __assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.MessageType !== undefined && input.MessageType !== null && {\n    MessageType: input.MessageType\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  });\n};\n\nvar serializeAws_restJson1Condition = function (input, context) {\n  return __assign(__assign({}, input.Conditions !== undefined && input.Conditions !== null && {\n    Conditions: serializeAws_restJson1ListOfSimpleCondition(input.Conditions, context)\n  }), input.Operator !== undefined && input.Operator !== null && {\n    Operator: input.Operator\n  });\n};\n\nvar serializeAws_restJson1ConditionalSplitActivity = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Condition !== undefined && input.Condition !== null && {\n    Condition: serializeAws_restJson1Condition(input.Condition, context)\n  }), input.EvaluationWaitTime !== undefined && input.EvaluationWaitTime !== null && {\n    EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context)\n  }), input.FalseActivity !== undefined && input.FalseActivity !== null && {\n    FalseActivity: input.FalseActivity\n  }), input.TrueActivity !== undefined && input.TrueActivity !== null && {\n    TrueActivity: input.TrueActivity\n  });\n};\n\nvar serializeAws_restJson1CreateApplicationRequest = function (input, context) {\n  return __assign(__assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1CreateRecommenderConfigurationShape = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.RecommendationProviderIdType !== undefined && input.RecommendationProviderIdType !== null && {\n    RecommendationProviderIdType: input.RecommendationProviderIdType\n  }), input.RecommendationProviderRoleArn !== undefined && input.RecommendationProviderRoleArn !== null && {\n    RecommendationProviderRoleArn: input.RecommendationProviderRoleArn\n  }), input.RecommendationProviderUri !== undefined && input.RecommendationProviderUri !== null && {\n    RecommendationProviderUri: input.RecommendationProviderUri\n  }), input.RecommendationTransformerUri !== undefined && input.RecommendationTransformerUri !== null && {\n    RecommendationTransformerUri: input.RecommendationTransformerUri\n  }), input.RecommendationsDisplayName !== undefined && input.RecommendationsDisplayName !== null && {\n    RecommendationsDisplayName: input.RecommendationsDisplayName\n  }), input.RecommendationsPerMessage !== undefined && input.RecommendationsPerMessage !== null && {\n    RecommendationsPerMessage: input.RecommendationsPerMessage\n  });\n};\n\nvar serializeAws_restJson1CustomDeliveryConfiguration = function (input, context) {\n  return __assign(__assign({}, input.DeliveryUri !== undefined && input.DeliveryUri !== null && {\n    DeliveryUri: input.DeliveryUri\n  }), input.EndpointTypes !== undefined && input.EndpointTypes !== null && {\n    EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context)\n  });\n};\n\nvar serializeAws_restJson1CustomMessageActivity = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.DeliveryUri !== undefined && input.DeliveryUri !== null && {\n    DeliveryUri: input.DeliveryUri\n  }), input.EndpointTypes !== undefined && input.EndpointTypes !== null && {\n    EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context)\n  }), input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneyCustomMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\n\nvar serializeAws_restJson1DefaultMessage = function (input, context) {\n  return __assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  });\n};\n\nvar serializeAws_restJson1DefaultPushNotificationMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1DefaultPushNotificationTemplate = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1DirectMessageConfiguration = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ADMMessage !== undefined && input.ADMMessage !== null && {\n    ADMMessage: serializeAws_restJson1ADMMessage(input.ADMMessage, context)\n  }), input.APNSMessage !== undefined && input.APNSMessage !== null && {\n    APNSMessage: serializeAws_restJson1APNSMessage(input.APNSMessage, context)\n  }), input.BaiduMessage !== undefined && input.BaiduMessage !== null && {\n    BaiduMessage: serializeAws_restJson1BaiduMessage(input.BaiduMessage, context)\n  }), input.DefaultMessage !== undefined && input.DefaultMessage !== null && {\n    DefaultMessage: serializeAws_restJson1DefaultMessage(input.DefaultMessage, context)\n  }), input.DefaultPushNotificationMessage !== undefined && input.DefaultPushNotificationMessage !== null && {\n    DefaultPushNotificationMessage: serializeAws_restJson1DefaultPushNotificationMessage(input.DefaultPushNotificationMessage, context)\n  }), input.EmailMessage !== undefined && input.EmailMessage !== null && {\n    EmailMessage: serializeAws_restJson1EmailMessage(input.EmailMessage, context)\n  }), input.GCMMessage !== undefined && input.GCMMessage !== null && {\n    GCMMessage: serializeAws_restJson1GCMMessage(input.GCMMessage, context)\n  }), input.SMSMessage !== undefined && input.SMSMessage !== null && {\n    SMSMessage: serializeAws_restJson1SMSMessage(input.SMSMessage, context)\n  }), input.VoiceMessage !== undefined && input.VoiceMessage !== null && {\n    VoiceMessage: serializeAws_restJson1VoiceMessage(input.VoiceMessage, context)\n  });\n};\n\nvar serializeAws_restJson1EmailChannelRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.ConfigurationSet !== undefined && input.ConfigurationSet !== null && {\n    ConfigurationSet: input.ConfigurationSet\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  }), input.Identity !== undefined && input.Identity !== null && {\n    Identity: input.Identity\n  }), input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  });\n};\n\nvar serializeAws_restJson1EmailMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.FeedbackForwardingAddress !== undefined && input.FeedbackForwardingAddress !== null && {\n    FeedbackForwardingAddress: input.FeedbackForwardingAddress\n  }), input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  }), input.RawEmail !== undefined && input.RawEmail !== null && {\n    RawEmail: serializeAws_restJson1RawEmail(input.RawEmail, context)\n  }), input.ReplyToAddresses !== undefined && input.ReplyToAddresses !== null && {\n    ReplyToAddresses: serializeAws_restJson1ListOf__string(input.ReplyToAddresses, context)\n  }), input.SimpleEmail !== undefined && input.SimpleEmail !== null && {\n    SimpleEmail: serializeAws_restJson1SimpleEmail(input.SimpleEmail, context)\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  });\n};\n\nvar serializeAws_restJson1EmailMessageActivity = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneyEmailMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\n\nvar serializeAws_restJson1EmailTemplateRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.HtmlPart !== undefined && input.HtmlPart !== null && {\n    HtmlPart: input.HtmlPart\n  }), input.RecommenderId !== undefined && input.RecommenderId !== null && {\n    RecommenderId: input.RecommenderId\n  }), input.Subject !== undefined && input.Subject !== null && {\n    Subject: input.Subject\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.TextPart !== undefined && input.TextPart !== null && {\n    TextPart: input.TextPart\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1EndpointBatchItem = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Address !== undefined && input.Address !== null && {\n    Address: input.Address\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context)\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context)\n  }), input.EffectiveDate !== undefined && input.EffectiveDate !== null && {\n    EffectiveDate: input.EffectiveDate\n  }), input.EndpointStatus !== undefined && input.EndpointStatus !== null && {\n    EndpointStatus: input.EndpointStatus\n  }), input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1EndpointLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.OptOut !== undefined && input.OptOut !== null && {\n    OptOut: input.OptOut\n  }), input.RequestId !== undefined && input.RequestId !== null && {\n    RequestId: input.RequestId\n  }), input.User !== undefined && input.User !== null && {\n    User: serializeAws_restJson1EndpointUser(input.User, context)\n  });\n};\n\nvar serializeAws_restJson1EndpointBatchRequest = function (input, context) {\n  return __assign({}, input.Item !== undefined && input.Item !== null && {\n    Item: serializeAws_restJson1ListOfEndpointBatchItem(input.Item, context)\n  });\n};\n\nvar serializeAws_restJson1EndpointDemographic = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.AppVersion !== undefined && input.AppVersion !== null && {\n    AppVersion: input.AppVersion\n  }), input.Locale !== undefined && input.Locale !== null && {\n    Locale: input.Locale\n  }), input.Make !== undefined && input.Make !== null && {\n    Make: input.Make\n  }), input.Model !== undefined && input.Model !== null && {\n    Model: input.Model\n  }), input.ModelVersion !== undefined && input.ModelVersion !== null && {\n    ModelVersion: input.ModelVersion\n  }), input.Platform !== undefined && input.Platform !== null && {\n    Platform: input.Platform\n  }), input.PlatformVersion !== undefined && input.PlatformVersion !== null && {\n    PlatformVersion: input.PlatformVersion\n  }), input.Timezone !== undefined && input.Timezone !== null && {\n    Timezone: input.Timezone\n  });\n};\n\nvar serializeAws_restJson1EndpointLocation = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.City !== undefined && input.City !== null && {\n    City: input.City\n  }), input.Country !== undefined && input.Country !== null && {\n    Country: input.Country\n  }), input.Latitude !== undefined && input.Latitude !== null && {\n    Latitude: input.Latitude\n  }), input.Longitude !== undefined && input.Longitude !== null && {\n    Longitude: input.Longitude\n  }), input.PostalCode !== undefined && input.PostalCode !== null && {\n    PostalCode: input.PostalCode\n  }), input.Region !== undefined && input.Region !== null && {\n    Region: input.Region\n  });\n};\n\nvar serializeAws_restJson1EndpointRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Address !== undefined && input.Address !== null && {\n    Address: input.Address\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context)\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context)\n  }), input.EffectiveDate !== undefined && input.EffectiveDate !== null && {\n    EffectiveDate: input.EffectiveDate\n  }), input.EndpointStatus !== undefined && input.EndpointStatus !== null && {\n    EndpointStatus: input.EndpointStatus\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1EndpointLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.OptOut !== undefined && input.OptOut !== null && {\n    OptOut: input.OptOut\n  }), input.RequestId !== undefined && input.RequestId !== null && {\n    RequestId: input.RequestId\n  }), input.User !== undefined && input.User !== null && {\n    User: serializeAws_restJson1EndpointUser(input.User, context)\n  });\n};\n\nvar serializeAws_restJson1EndpointSendConfiguration = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.BodyOverride !== undefined && input.BodyOverride !== null && {\n    BodyOverride: input.BodyOverride\n  }), input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TitleOverride !== undefined && input.TitleOverride !== null && {\n    TitleOverride: input.TitleOverride\n  });\n};\n\nvar serializeAws_restJson1EndpointUser = function (input, context) {\n  return __assign(__assign({}, input.UserAttributes !== undefined && input.UserAttributes !== null && {\n    UserAttributes: serializeAws_restJson1MapOfListOf__string(input.UserAttributes, context)\n  }), input.UserId !== undefined && input.UserId !== null && {\n    UserId: input.UserId\n  });\n};\n\nvar serializeAws_restJson1Event = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.AppPackageName !== undefined && input.AppPackageName !== null && {\n    AppPackageName: input.AppPackageName\n  }), input.AppTitle !== undefined && input.AppTitle !== null && {\n    AppTitle: input.AppTitle\n  }), input.AppVersionCode !== undefined && input.AppVersionCode !== null && {\n    AppVersionCode: input.AppVersionCode\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context)\n  }), input.ClientSdkVersion !== undefined && input.ClientSdkVersion !== null && {\n    ClientSdkVersion: input.ClientSdkVersion\n  }), input.EventType !== undefined && input.EventType !== null && {\n    EventType: input.EventType\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.SdkName !== undefined && input.SdkName !== null && {\n    SdkName: input.SdkName\n  }), input.Session !== undefined && input.Session !== null && {\n    Session: serializeAws_restJson1Session(input.Session, context)\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: input.Timestamp\n  });\n};\n\nvar serializeAws_restJson1EventCondition = function (input, context) {\n  return __assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context)\n  }), input.MessageActivity !== undefined && input.MessageActivity !== null && {\n    MessageActivity: input.MessageActivity\n  });\n};\n\nvar serializeAws_restJson1EventDimensions = function (input, context) {\n  return __assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context)\n  }), input.EventType !== undefined && input.EventType !== null && {\n    EventType: serializeAws_restJson1SetDimension(input.EventType, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context)\n  });\n};\n\nvar serializeAws_restJson1EventFilter = function (input, context) {\n  return __assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context)\n  }), input.FilterType !== undefined && input.FilterType !== null && {\n    FilterType: input.FilterType\n  });\n};\n\nvar serializeAws_restJson1EventsBatch = function (input, context) {\n  return __assign(__assign({}, input.Endpoint !== undefined && input.Endpoint !== null && {\n    Endpoint: serializeAws_restJson1PublicEndpoint(input.Endpoint, context)\n  }), input.Events !== undefined && input.Events !== null && {\n    Events: serializeAws_restJson1MapOfEvent(input.Events, context)\n  });\n};\n\nvar serializeAws_restJson1EventsRequest = function (input, context) {\n  return __assign({}, input.BatchItem !== undefined && input.BatchItem !== null && {\n    BatchItem: serializeAws_restJson1MapOfEventsBatch(input.BatchItem, context)\n  });\n};\n\nvar serializeAws_restJson1EventStartCondition = function (input, context) {\n  return __assign(__assign({}, input.EventFilter !== undefined && input.EventFilter !== null && {\n    EventFilter: serializeAws_restJson1EventFilter(input.EventFilter, context)\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  });\n};\n\nvar serializeAws_restJson1ExportJobRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  }), input.S3UrlPrefix !== undefined && input.S3UrlPrefix !== null && {\n    S3UrlPrefix: input.S3UrlPrefix\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  }), input.SegmentVersion !== undefined && input.SegmentVersion !== null && {\n    SegmentVersion: input.SegmentVersion\n  });\n};\n\nvar serializeAws_restJson1GCMChannelRequest = function (input, context) {\n  return __assign(__assign({}, input.ApiKey !== undefined && input.ApiKey !== null && {\n    ApiKey: input.ApiKey\n  }), input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  });\n};\n\nvar serializeAws_restJson1GCMMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.CollapseKey !== undefined && input.CollapseKey !== null && {\n    CollapseKey: input.CollapseKey\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: serializeAws_restJson1MapOf__string(input.Data, context)\n  }), input.IconReference !== undefined && input.IconReference !== null && {\n    IconReference: input.IconReference\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.Priority !== undefined && input.Priority !== null && {\n    Priority: input.Priority\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.RestrictedPackageName !== undefined && input.RestrictedPackageName !== null && {\n    RestrictedPackageName: input.RestrictedPackageName\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.SmallImageIconUrl !== undefined && input.SmallImageIconUrl !== null && {\n    SmallImageIconUrl: input.SmallImageIconUrl\n  }), input.Sound !== undefined && input.Sound !== null && {\n    Sound: input.Sound\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1GPSCoordinates = function (input, context) {\n  return __assign(__assign({}, input.Latitude !== undefined && input.Latitude !== null && {\n    Latitude: input.Latitude\n  }), input.Longitude !== undefined && input.Longitude !== null && {\n    Longitude: input.Longitude\n  });\n};\n\nvar serializeAws_restJson1GPSPointDimension = function (input, context) {\n  return __assign(__assign({}, input.Coordinates !== undefined && input.Coordinates !== null && {\n    Coordinates: serializeAws_restJson1GPSCoordinates(input.Coordinates, context)\n  }), input.RangeInKilometers !== undefined && input.RangeInKilometers !== null && {\n    RangeInKilometers: input.RangeInKilometers\n  });\n};\n\nvar serializeAws_restJson1HoldoutActivity = function (input, context) {\n  return __assign(__assign({}, input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.Percentage !== undefined && input.Percentage !== null && {\n    Percentage: input.Percentage\n  });\n};\n\nvar serializeAws_restJson1ImportJobRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.DefineSegment !== undefined && input.DefineSegment !== null && {\n    DefineSegment: input.DefineSegment\n  }), input.ExternalId !== undefined && input.ExternalId !== null && {\n    ExternalId: input.ExternalId\n  }), input.Format !== undefined && input.Format !== null && {\n    Format: input.Format\n  }), input.RegisterEndpoints !== undefined && input.RegisterEndpoints !== null && {\n    RegisterEndpoints: input.RegisterEndpoints\n  }), input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  }), input.S3Url !== undefined && input.S3Url !== null && {\n    S3Url: input.S3Url\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  }), input.SegmentName !== undefined && input.SegmentName !== null && {\n    SegmentName: input.SegmentName\n  });\n};\n\nvar serializeAws_restJson1JourneyCustomMessage = function (input, context) {\n  return __assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: input.Data\n  });\n};\n\nvar serializeAws_restJson1JourneyEmailMessage = function (input, context) {\n  return __assign({}, input.FromAddress !== undefined && input.FromAddress !== null && {\n    FromAddress: input.FromAddress\n  });\n};\n\nvar serializeAws_restJson1JourneyLimits = function (input, context) {\n  return __assign(__assign(__assign({}, input.DailyCap !== undefined && input.DailyCap !== null && {\n    DailyCap: input.DailyCap\n  }), input.EndpointReentryCap !== undefined && input.EndpointReentryCap !== null && {\n    EndpointReentryCap: input.EndpointReentryCap\n  }), input.MessagesPerSecond !== undefined && input.MessagesPerSecond !== null && {\n    MessagesPerSecond: input.MessagesPerSecond\n  });\n};\n\nvar serializeAws_restJson1JourneyPushMessage = function (input, context) {\n  return __assign({}, input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  });\n};\n\nvar serializeAws_restJson1JourneySchedule = function (input, context) {\n  return __assign(__assign(__assign({}, input.EndTime !== undefined && input.EndTime !== null && {\n    EndTime: input.EndTime.toISOString().split(\".\")[0] + \"Z\"\n  }), input.StartTime !== undefined && input.StartTime !== null && {\n    StartTime: input.StartTime.toISOString().split(\".\")[0] + \"Z\"\n  }), input.Timezone !== undefined && input.Timezone !== null && {\n    Timezone: input.Timezone\n  });\n};\n\nvar serializeAws_restJson1JourneySMSMessage = function (input, context) {\n  return __assign(__assign({}, input.MessageType !== undefined && input.MessageType !== null && {\n    MessageType: input.MessageType\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  });\n};\n\nvar serializeAws_restJson1JourneyStateRequest = function (input, context) {\n  return __assign({}, input.State !== undefined && input.State !== null && {\n    State: input.State\n  });\n};\n\nvar serializeAws_restJson1ListOf__EndpointTypesElement = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1ListOf__string = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1ListOfEndpointBatchItem = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1EndpointBatchItem(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfMultiConditionalBranch = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1MultiConditionalBranch(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfRandomSplitEntry = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1RandomSplitEntry(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfSegmentDimensions = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1SegmentDimensions(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfSegmentGroup = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1SegmentGroup(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfSegmentReference = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1SegmentReference(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfSimpleCondition = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1SimpleCondition(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ListOfWriteTreatmentResource = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1WriteTreatmentResource(entry, context);\n  });\n};\n\nvar serializeAws_restJson1MapOf__double = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOf__string = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfActivity = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1Activity(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfAddressConfiguration = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1AddressConfiguration(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfAttributeDimension = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1AttributeDimension(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfEndpointSendConfiguration = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1EndpointSendConfiguration(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfEvent = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1Event(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfEventsBatch = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1EventsBatch(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfListOf__string = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1ListOf__string(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1MapOfMetricDimension = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1MetricDimension(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1Message = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Action !== undefined && input.Action !== null && {\n    Action: input.Action\n  }), input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && {\n    ImageIconUrl: input.ImageIconUrl\n  }), input.ImageSmallIconUrl !== undefined && input.ImageSmallIconUrl !== null && {\n    ImageSmallIconUrl: input.ImageSmallIconUrl\n  }), input.ImageUrl !== undefined && input.ImageUrl !== null && {\n    ImageUrl: input.ImageUrl\n  }), input.JsonBody !== undefined && input.JsonBody !== null && {\n    JsonBody: input.JsonBody\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.RawContent !== undefined && input.RawContent !== null && {\n    RawContent: input.RawContent\n  }), input.SilentPush !== undefined && input.SilentPush !== null && {\n    SilentPush: input.SilentPush\n  }), input.TimeToLive !== undefined && input.TimeToLive !== null && {\n    TimeToLive: input.TimeToLive\n  }), input.Title !== undefined && input.Title !== null && {\n    Title: input.Title\n  }), input.Url !== undefined && input.Url !== null && {\n    Url: input.Url\n  });\n};\n\nvar serializeAws_restJson1MessageConfiguration = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ADMMessage !== undefined && input.ADMMessage !== null && {\n    ADMMessage: serializeAws_restJson1Message(input.ADMMessage, context)\n  }), input.APNSMessage !== undefined && input.APNSMessage !== null && {\n    APNSMessage: serializeAws_restJson1Message(input.APNSMessage, context)\n  }), input.BaiduMessage !== undefined && input.BaiduMessage !== null && {\n    BaiduMessage: serializeAws_restJson1Message(input.BaiduMessage, context)\n  }), input.CustomMessage !== undefined && input.CustomMessage !== null && {\n    CustomMessage: serializeAws_restJson1CampaignCustomMessage(input.CustomMessage, context)\n  }), input.DefaultMessage !== undefined && input.DefaultMessage !== null && {\n    DefaultMessage: serializeAws_restJson1Message(input.DefaultMessage, context)\n  }), input.EmailMessage !== undefined && input.EmailMessage !== null && {\n    EmailMessage: serializeAws_restJson1CampaignEmailMessage(input.EmailMessage, context)\n  }), input.GCMMessage !== undefined && input.GCMMessage !== null && {\n    GCMMessage: serializeAws_restJson1Message(input.GCMMessage, context)\n  }), input.SMSMessage !== undefined && input.SMSMessage !== null && {\n    SMSMessage: serializeAws_restJson1CampaignSmsMessage(input.SMSMessage, context)\n  });\n};\n\nvar serializeAws_restJson1MessageRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.Addresses !== undefined && input.Addresses !== null && {\n    Addresses: serializeAws_restJson1MapOfAddressConfiguration(input.Addresses, context)\n  }), input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.Endpoints !== undefined && input.Endpoints !== null && {\n    Endpoints: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Endpoints, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context)\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TraceId !== undefined && input.TraceId !== null && {\n    TraceId: input.TraceId\n  });\n};\n\nvar serializeAws_restJson1MetricDimension = function (input, context) {\n  return __assign(__assign({}, input.ComparisonOperator !== undefined && input.ComparisonOperator !== null && {\n    ComparisonOperator: input.ComparisonOperator\n  }), input.Value !== undefined && input.Value !== null && {\n    Value: input.Value\n  });\n};\n\nvar serializeAws_restJson1MultiConditionalBranch = function (input, context) {\n  return __assign(__assign({}, input.Condition !== undefined && input.Condition !== null && {\n    Condition: serializeAws_restJson1SimpleCondition(input.Condition, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  });\n};\n\nvar serializeAws_restJson1MultiConditionalSplitActivity = function (input, context) {\n  return __assign(__assign(__assign({}, input.Branches !== undefined && input.Branches !== null && {\n    Branches: serializeAws_restJson1ListOfMultiConditionalBranch(input.Branches, context)\n  }), input.DefaultActivity !== undefined && input.DefaultActivity !== null && {\n    DefaultActivity: input.DefaultActivity\n  }), input.EvaluationWaitTime !== undefined && input.EvaluationWaitTime !== null && {\n    EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context)\n  });\n};\n\nvar serializeAws_restJson1NumberValidateRequest = function (input, context) {\n  return __assign(__assign({}, input.IsoCountryCode !== undefined && input.IsoCountryCode !== null && {\n    IsoCountryCode: input.IsoCountryCode\n  }), input.PhoneNumber !== undefined && input.PhoneNumber !== null && {\n    PhoneNumber: input.PhoneNumber\n  });\n};\n\nvar serializeAws_restJson1PublicEndpoint = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Address !== undefined && input.Address !== null && {\n    Address: input.Address\n  }), input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context)\n  }), input.ChannelType !== undefined && input.ChannelType !== null && {\n    ChannelType: input.ChannelType\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context)\n  }), input.EffectiveDate !== undefined && input.EffectiveDate !== null && {\n    EffectiveDate: input.EffectiveDate\n  }), input.EndpointStatus !== undefined && input.EndpointStatus !== null && {\n    EndpointStatus: input.EndpointStatus\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1EndpointLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context)\n  }), input.OptOut !== undefined && input.OptOut !== null && {\n    OptOut: input.OptOut\n  }), input.RequestId !== undefined && input.RequestId !== null && {\n    RequestId: input.RequestId\n  }), input.User !== undefined && input.User !== null && {\n    User: serializeAws_restJson1EndpointUser(input.User, context)\n  });\n};\n\nvar serializeAws_restJson1PushMessageActivity = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneyPushMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\n\nvar serializeAws_restJson1PushNotificationTemplateRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.ADM !== undefined && input.ADM !== null && {\n    ADM: serializeAws_restJson1AndroidPushNotificationTemplate(input.ADM, context)\n  }), input.APNS !== undefined && input.APNS !== null && {\n    APNS: serializeAws_restJson1APNSPushNotificationTemplate(input.APNS, context)\n  }), input.Baidu !== undefined && input.Baidu !== null && {\n    Baidu: serializeAws_restJson1AndroidPushNotificationTemplate(input.Baidu, context)\n  }), input.Default !== undefined && input.Default !== null && {\n    Default: serializeAws_restJson1DefaultPushNotificationTemplate(input.Default, context)\n  }), input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.GCM !== undefined && input.GCM !== null && {\n    GCM: serializeAws_restJson1AndroidPushNotificationTemplate(input.GCM, context)\n  }), input.RecommenderId !== undefined && input.RecommenderId !== null && {\n    RecommenderId: input.RecommenderId\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1QuietTime = function (input, context) {\n  return __assign(__assign({}, input.End !== undefined && input.End !== null && {\n    End: input.End\n  }), input.Start !== undefined && input.Start !== null && {\n    Start: input.Start\n  });\n};\n\nvar serializeAws_restJson1RandomSplitActivity = function (input, context) {\n  return __assign({}, input.Branches !== undefined && input.Branches !== null && {\n    Branches: serializeAws_restJson1ListOfRandomSplitEntry(input.Branches, context)\n  });\n};\n\nvar serializeAws_restJson1RandomSplitEntry = function (input, context) {\n  return __assign(__assign({}, input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.Percentage !== undefined && input.Percentage !== null && {\n    Percentage: input.Percentage\n  });\n};\n\nvar serializeAws_restJson1RawEmail = function (input, context) {\n  return __assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: context.base64Encoder(input.Data)\n  });\n};\n\nvar serializeAws_restJson1RecencyDimension = function (input, context) {\n  return __assign(__assign({}, input.Duration !== undefined && input.Duration !== null && {\n    Duration: input.Duration\n  }), input.RecencyType !== undefined && input.RecencyType !== null && {\n    RecencyType: input.RecencyType\n  });\n};\n\nvar serializeAws_restJson1Schedule = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.EndTime !== undefined && input.EndTime !== null && {\n    EndTime: input.EndTime\n  }), input.EventFilter !== undefined && input.EventFilter !== null && {\n    EventFilter: serializeAws_restJson1CampaignEventFilter(input.EventFilter, context)\n  }), input.Frequency !== undefined && input.Frequency !== null && {\n    Frequency: input.Frequency\n  }), input.IsLocalTime !== undefined && input.IsLocalTime !== null && {\n    IsLocalTime: input.IsLocalTime\n  }), input.QuietTime !== undefined && input.QuietTime !== null && {\n    QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context)\n  }), input.StartTime !== undefined && input.StartTime !== null && {\n    StartTime: input.StartTime\n  }), input.Timezone !== undefined && input.Timezone !== null && {\n    Timezone: input.Timezone\n  });\n};\n\nvar serializeAws_restJson1SegmentBehaviors = function (input, context) {\n  return __assign({}, input.Recency !== undefined && input.Recency !== null && {\n    Recency: serializeAws_restJson1RecencyDimension(input.Recency, context)\n  });\n};\n\nvar serializeAws_restJson1SegmentCondition = function (input, context) {\n  return __assign({}, input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  });\n};\n\nvar serializeAws_restJson1SegmentDemographics = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.AppVersion !== undefined && input.AppVersion !== null && {\n    AppVersion: serializeAws_restJson1SetDimension(input.AppVersion, context)\n  }), input.Channel !== undefined && input.Channel !== null && {\n    Channel: serializeAws_restJson1SetDimension(input.Channel, context)\n  }), input.DeviceType !== undefined && input.DeviceType !== null && {\n    DeviceType: serializeAws_restJson1SetDimension(input.DeviceType, context)\n  }), input.Make !== undefined && input.Make !== null && {\n    Make: serializeAws_restJson1SetDimension(input.Make, context)\n  }), input.Model !== undefined && input.Model !== null && {\n    Model: serializeAws_restJson1SetDimension(input.Model, context)\n  }), input.Platform !== undefined && input.Platform !== null && {\n    Platform: serializeAws_restJson1SetDimension(input.Platform, context)\n  });\n};\n\nvar serializeAws_restJson1SegmentDimensions = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context)\n  }), input.Behavior !== undefined && input.Behavior !== null && {\n    Behavior: serializeAws_restJson1SegmentBehaviors(input.Behavior, context)\n  }), input.Demographic !== undefined && input.Demographic !== null && {\n    Demographic: serializeAws_restJson1SegmentDemographics(input.Demographic, context)\n  }), input.Location !== undefined && input.Location !== null && {\n    Location: serializeAws_restJson1SegmentLocation(input.Location, context)\n  }), input.Metrics !== undefined && input.Metrics !== null && {\n    Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context)\n  }), input.UserAttributes !== undefined && input.UserAttributes !== null && {\n    UserAttributes: serializeAws_restJson1MapOfAttributeDimension(input.UserAttributes, context)\n  });\n};\n\nvar serializeAws_restJson1SegmentGroup = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1ListOfSegmentDimensions(input.Dimensions, context)\n  }), input.SourceSegments !== undefined && input.SourceSegments !== null && {\n    SourceSegments: serializeAws_restJson1ListOfSegmentReference(input.SourceSegments, context)\n  }), input.SourceType !== undefined && input.SourceType !== null && {\n    SourceType: input.SourceType\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\n\nvar serializeAws_restJson1SegmentGroupList = function (input, context) {\n  return __assign(__assign({}, input.Groups !== undefined && input.Groups !== null && {\n    Groups: serializeAws_restJson1ListOfSegmentGroup(input.Groups, context)\n  }), input.Include !== undefined && input.Include !== null && {\n    Include: input.Include\n  });\n};\n\nvar serializeAws_restJson1SegmentLocation = function (input, context) {\n  return __assign(__assign({}, input.Country !== undefined && input.Country !== null && {\n    Country: serializeAws_restJson1SetDimension(input.Country, context)\n  }), input.GPSPoint !== undefined && input.GPSPoint !== null && {\n    GPSPoint: serializeAws_restJson1GPSPointDimension(input.GPSPoint, context)\n  });\n};\n\nvar serializeAws_restJson1SegmentReference = function (input, context) {\n  return __assign(__assign({}, input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.Version !== undefined && input.Version !== null && {\n    Version: input.Version\n  });\n};\n\nvar serializeAws_restJson1SendUsersMessageRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Context !== undefined && input.Context !== null && {\n    Context: serializeAws_restJson1MapOf__string(input.Context, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context)\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TraceId !== undefined && input.TraceId !== null && {\n    TraceId: input.TraceId\n  }), input.Users !== undefined && input.Users !== null && {\n    Users: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Users, context)\n  });\n};\n\nvar serializeAws_restJson1Session = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Duration !== undefined && input.Duration !== null && {\n    Duration: input.Duration\n  }), input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.StartTimestamp !== undefined && input.StartTimestamp !== null && {\n    StartTimestamp: input.StartTimestamp\n  }), input.StopTimestamp !== undefined && input.StopTimestamp !== null && {\n    StopTimestamp: input.StopTimestamp\n  });\n};\n\nvar serializeAws_restJson1SetDimension = function (input, context) {\n  return __assign(__assign({}, input.DimensionType !== undefined && input.DimensionType !== null && {\n    DimensionType: input.DimensionType\n  }), input.Values !== undefined && input.Values !== null && {\n    Values: serializeAws_restJson1ListOf__string(input.Values, context)\n  });\n};\n\nvar serializeAws_restJson1SimpleCondition = function (input, context) {\n  return __assign(__assign(__assign({}, input.EventCondition !== undefined && input.EventCondition !== null && {\n    EventCondition: serializeAws_restJson1EventCondition(input.EventCondition, context)\n  }), input.SegmentCondition !== undefined && input.SegmentCondition !== null && {\n    SegmentCondition: serializeAws_restJson1SegmentCondition(input.SegmentCondition, context)\n  }), input.SegmentDimensions !== undefined && input.SegmentDimensions !== null && {\n    segmentDimensions: serializeAws_restJson1SegmentDimensions(input.SegmentDimensions, context)\n  });\n};\n\nvar serializeAws_restJson1SimpleEmail = function (input, context) {\n  return __assign(__assign(__assign({}, input.HtmlPart !== undefined && input.HtmlPart !== null && {\n    HtmlPart: serializeAws_restJson1SimpleEmailPart(input.HtmlPart, context)\n  }), input.Subject !== undefined && input.Subject !== null && {\n    Subject: serializeAws_restJson1SimpleEmailPart(input.Subject, context)\n  }), input.TextPart !== undefined && input.TextPart !== null && {\n    TextPart: serializeAws_restJson1SimpleEmailPart(input.TextPart, context)\n  });\n};\n\nvar serializeAws_restJson1SimpleEmailPart = function (input, context) {\n  return __assign(__assign({}, input.Charset !== undefined && input.Charset !== null && {\n    Charset: input.Charset\n  }), input.Data !== undefined && input.Data !== null && {\n    Data: input.Data\n  });\n};\n\nvar serializeAws_restJson1SMSChannelRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  }), input.ShortCode !== undefined && input.ShortCode !== null && {\n    ShortCode: input.ShortCode\n  });\n};\n\nvar serializeAws_restJson1SMSMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.Keyword !== undefined && input.Keyword !== null && {\n    Keyword: input.Keyword\n  }), input.MediaUrl !== undefined && input.MediaUrl !== null && {\n    MediaUrl: input.MediaUrl\n  }), input.MessageType !== undefined && input.MessageType !== null && {\n    MessageType: input.MessageType\n  }), input.OriginationNumber !== undefined && input.OriginationNumber !== null && {\n    OriginationNumber: input.OriginationNumber\n  }), input.SenderId !== undefined && input.SenderId !== null && {\n    SenderId: input.SenderId\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  });\n};\n\nvar serializeAws_restJson1SMSMessageActivity = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MessageConfig !== undefined && input.MessageConfig !== null && {\n    MessageConfig: serializeAws_restJson1JourneySMSMessage(input.MessageConfig, context)\n  }), input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.TemplateName !== undefined && input.TemplateName !== null && {\n    TemplateName: input.TemplateName\n  }), input.TemplateVersion !== undefined && input.TemplateVersion !== null && {\n    TemplateVersion: input.TemplateVersion\n  });\n};\n\nvar serializeAws_restJson1SMSTemplateRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.RecommenderId !== undefined && input.RecommenderId !== null && {\n    RecommenderId: input.RecommenderId\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1StartCondition = function (input, context) {\n  return __assign(__assign(__assign({}, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EventStartCondition !== undefined && input.EventStartCondition !== null && {\n    EventStartCondition: serializeAws_restJson1EventStartCondition(input.EventStartCondition, context)\n  }), input.SegmentStartCondition !== undefined && input.SegmentStartCondition !== null && {\n    SegmentStartCondition: serializeAws_restJson1SegmentCondition(input.SegmentStartCondition, context)\n  });\n};\n\nvar serializeAws_restJson1TagsModel = function (input, context) {\n  return __assign({}, input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1Template = function (input, context) {\n  return __assign(__assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.Version !== undefined && input.Version !== null && {\n    Version: input.Version\n  });\n};\n\nvar serializeAws_restJson1TemplateActiveVersionRequest = function (input, context) {\n  return __assign({}, input.Version !== undefined && input.Version !== null && {\n    Version: input.Version\n  });\n};\n\nvar serializeAws_restJson1TemplateConfiguration = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.EmailTemplate !== undefined && input.EmailTemplate !== null && {\n    EmailTemplate: serializeAws_restJson1Template(input.EmailTemplate, context)\n  }), input.PushTemplate !== undefined && input.PushTemplate !== null && {\n    PushTemplate: serializeAws_restJson1Template(input.PushTemplate, context)\n  }), input.SMSTemplate !== undefined && input.SMSTemplate !== null && {\n    SMSTemplate: serializeAws_restJson1Template(input.SMSTemplate, context)\n  }), input.VoiceTemplate !== undefined && input.VoiceTemplate !== null && {\n    VoiceTemplate: serializeAws_restJson1Template(input.VoiceTemplate, context)\n  });\n};\n\nvar serializeAws_restJson1UpdateAttributesRequest = function (input, context) {\n  return __assign({}, input.Blacklist !== undefined && input.Blacklist !== null && {\n    Blacklist: serializeAws_restJson1ListOf__string(input.Blacklist, context)\n  });\n};\n\nvar serializeAws_restJson1UpdateRecommenderConfigurationShape = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Attributes !== undefined && input.Attributes !== null && {\n    Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.RecommendationProviderIdType !== undefined && input.RecommendationProviderIdType !== null && {\n    RecommendationProviderIdType: input.RecommendationProviderIdType\n  }), input.RecommendationProviderRoleArn !== undefined && input.RecommendationProviderRoleArn !== null && {\n    RecommendationProviderRoleArn: input.RecommendationProviderRoleArn\n  }), input.RecommendationProviderUri !== undefined && input.RecommendationProviderUri !== null && {\n    RecommendationProviderUri: input.RecommendationProviderUri\n  }), input.RecommendationTransformerUri !== undefined && input.RecommendationTransformerUri !== null && {\n    RecommendationTransformerUri: input.RecommendationTransformerUri\n  }), input.RecommendationsDisplayName !== undefined && input.RecommendationsDisplayName !== null && {\n    RecommendationsDisplayName: input.RecommendationsDisplayName\n  }), input.RecommendationsPerMessage !== undefined && input.RecommendationsPerMessage !== null && {\n    RecommendationsPerMessage: input.RecommendationsPerMessage\n  });\n};\n\nvar serializeAws_restJson1VoiceChannelRequest = function (input, context) {\n  return __assign({}, input.Enabled !== undefined && input.Enabled !== null && {\n    Enabled: input.Enabled\n  });\n};\n\nvar serializeAws_restJson1VoiceMessage = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.LanguageCode !== undefined && input.LanguageCode !== null && {\n    LanguageCode: input.LanguageCode\n  }), input.OriginationNumber !== undefined && input.OriginationNumber !== null && {\n    OriginationNumber: input.OriginationNumber\n  }), input.Substitutions !== undefined && input.Substitutions !== null && {\n    Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context)\n  }), input.VoiceId !== undefined && input.VoiceId !== null && {\n    VoiceId: input.VoiceId\n  });\n};\n\nvar serializeAws_restJson1VoiceTemplateRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.Body !== undefined && input.Body !== null && {\n    Body: input.Body\n  }), input.DefaultSubstitutions !== undefined && input.DefaultSubstitutions !== null && {\n    DefaultSubstitutions: input.DefaultSubstitutions\n  }), input.LanguageCode !== undefined && input.LanguageCode !== null && {\n    LanguageCode: input.LanguageCode\n  }), input.TemplateDescription !== undefined && input.TemplateDescription !== null && {\n    TemplateDescription: input.TemplateDescription\n  }), input.VoiceId !== undefined && input.VoiceId !== null && {\n    VoiceId: input.VoiceId\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1WaitActivity = function (input, context) {\n  return __assign(__assign({}, input.NextActivity !== undefined && input.NextActivity !== null && {\n    NextActivity: input.NextActivity\n  }), input.WaitTime !== undefined && input.WaitTime !== null && {\n    WaitTime: serializeAws_restJson1WaitTime(input.WaitTime, context)\n  });\n};\n\nvar serializeAws_restJson1WaitTime = function (input, context) {\n  return __assign(__assign({}, input.WaitFor !== undefined && input.WaitFor !== null && {\n    WaitFor: input.WaitFor\n  }), input.WaitUntil !== undefined && input.WaitUntil !== null && {\n    WaitUntil: input.WaitUntil\n  });\n};\n\nvar serializeAws_restJson1WriteApplicationSettingsRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.CampaignHook !== undefined && input.CampaignHook !== null && {\n    CampaignHook: serializeAws_restJson1CampaignHook(input.CampaignHook, context)\n  }), input.CloudWatchMetricsEnabled !== undefined && input.CloudWatchMetricsEnabled !== null && {\n    CloudWatchMetricsEnabled: input.CloudWatchMetricsEnabled\n  }), input.EventTaggingEnabled !== undefined && input.EventTaggingEnabled !== null && {\n    EventTaggingEnabled: input.EventTaggingEnabled\n  }), input.Limits !== undefined && input.Limits !== null && {\n    Limits: serializeAws_restJson1CampaignLimits(input.Limits, context)\n  }), input.QuietTime !== undefined && input.QuietTime !== null && {\n    QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context)\n  });\n};\n\nvar serializeAws_restJson1WriteCampaignRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.AdditionalTreatments !== undefined && input.AdditionalTreatments !== null && {\n    AdditionalTreatments: serializeAws_restJson1ListOfWriteTreatmentResource(input.AdditionalTreatments, context)\n  }), input.CustomDeliveryConfiguration !== undefined && input.CustomDeliveryConfiguration !== null && {\n    CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(input.CustomDeliveryConfiguration, context)\n  }), input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.HoldoutPercent !== undefined && input.HoldoutPercent !== null && {\n    HoldoutPercent: input.HoldoutPercent\n  }), input.Hook !== undefined && input.Hook !== null && {\n    Hook: serializeAws_restJson1CampaignHook(input.Hook, context)\n  }), input.IsPaused !== undefined && input.IsPaused !== null && {\n    IsPaused: input.IsPaused\n  }), input.Limits !== undefined && input.Limits !== null && {\n    Limits: serializeAws_restJson1CampaignLimits(input.Limits, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context)\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.Schedule !== undefined && input.Schedule !== null && {\n    Schedule: serializeAws_restJson1Schedule(input.Schedule, context)\n  }), input.SegmentId !== undefined && input.SegmentId !== null && {\n    SegmentId: input.SegmentId\n  }), input.SegmentVersion !== undefined && input.SegmentVersion !== null && {\n    SegmentVersion: input.SegmentVersion\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TreatmentDescription !== undefined && input.TreatmentDescription !== null && {\n    TreatmentDescription: input.TreatmentDescription\n  }), input.TreatmentName !== undefined && input.TreatmentName !== null && {\n    TreatmentName: input.TreatmentName\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1WriteEventStream = function (input, context) {\n  return __assign(__assign({}, input.DestinationStreamArn !== undefined && input.DestinationStreamArn !== null && {\n    DestinationStreamArn: input.DestinationStreamArn\n  }), input.RoleArn !== undefined && input.RoleArn !== null && {\n    RoleArn: input.RoleArn\n  });\n};\n\nvar serializeAws_restJson1WriteJourneyRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.Activities !== undefined && input.Activities !== null && {\n    Activities: serializeAws_restJson1MapOfActivity(input.Activities, context)\n  }), input.CreationDate !== undefined && input.CreationDate !== null && {\n    CreationDate: input.CreationDate\n  }), input.LastModifiedDate !== undefined && input.LastModifiedDate !== null && {\n    LastModifiedDate: input.LastModifiedDate\n  }), input.Limits !== undefined && input.Limits !== null && {\n    Limits: serializeAws_restJson1JourneyLimits(input.Limits, context)\n  }), input.LocalTime !== undefined && input.LocalTime !== null && {\n    LocalTime: input.LocalTime\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.QuietTime !== undefined && input.QuietTime !== null && {\n    QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context)\n  }), input.RefreshFrequency !== undefined && input.RefreshFrequency !== null && {\n    RefreshFrequency: input.RefreshFrequency\n  }), input.Schedule !== undefined && input.Schedule !== null && {\n    Schedule: serializeAws_restJson1JourneySchedule(input.Schedule, context)\n  }), input.StartActivity !== undefined && input.StartActivity !== null && {\n    StartActivity: input.StartActivity\n  }), input.StartCondition !== undefined && input.StartCondition !== null && {\n    StartCondition: serializeAws_restJson1StartCondition(input.StartCondition, context)\n  }), input.State !== undefined && input.State !== null && {\n    State: input.State\n  });\n};\n\nvar serializeAws_restJson1WriteSegmentRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.Dimensions !== undefined && input.Dimensions !== null && {\n    Dimensions: serializeAws_restJson1SegmentDimensions(input.Dimensions, context)\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.SegmentGroups !== undefined && input.SegmentGroups !== null && {\n    SegmentGroups: serializeAws_restJson1SegmentGroupList(input.SegmentGroups, context)\n  }), input.tags !== undefined && input.tags !== null && {\n    tags: serializeAws_restJson1MapOf__string(input.tags, context)\n  });\n};\n\nvar serializeAws_restJson1WriteTreatmentResource = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.CustomDeliveryConfiguration !== undefined && input.CustomDeliveryConfiguration !== null && {\n    CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(input.CustomDeliveryConfiguration, context)\n  }), input.MessageConfiguration !== undefined && input.MessageConfiguration !== null && {\n    MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context)\n  }), input.Schedule !== undefined && input.Schedule !== null && {\n    Schedule: serializeAws_restJson1Schedule(input.Schedule, context)\n  }), input.SizePercent !== undefined && input.SizePercent !== null && {\n    SizePercent: input.SizePercent\n  }), input.TemplateConfiguration !== undefined && input.TemplateConfiguration !== null && {\n    TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context)\n  }), input.TreatmentDescription !== undefined && input.TreatmentDescription !== null && {\n    TreatmentDescription: input.TreatmentDescription\n  }), input.TreatmentName !== undefined && input.TreatmentName !== null && {\n    TreatmentName: input.TreatmentName\n  });\n};\n\nvar deserializeAws_restJson1ActivitiesResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfActivityResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1Activity = function (output, context) {\n  return {\n    CUSTOM: output.CUSTOM !== undefined && output.CUSTOM !== null ? deserializeAws_restJson1CustomMessageActivity(output.CUSTOM, context) : undefined,\n    ConditionalSplit: output.ConditionalSplit !== undefined && output.ConditionalSplit !== null ? deserializeAws_restJson1ConditionalSplitActivity(output.ConditionalSplit, context) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EMAIL: output.EMAIL !== undefined && output.EMAIL !== null ? deserializeAws_restJson1EmailMessageActivity(output.EMAIL, context) : undefined,\n    Holdout: output.Holdout !== undefined && output.Holdout !== null ? deserializeAws_restJson1HoldoutActivity(output.Holdout, context) : undefined,\n    MultiCondition: output.MultiCondition !== undefined && output.MultiCondition !== null ? deserializeAws_restJson1MultiConditionalSplitActivity(output.MultiCondition, context) : undefined,\n    PUSH: output.PUSH !== undefined && output.PUSH !== null ? deserializeAws_restJson1PushMessageActivity(output.PUSH, context) : undefined,\n    RandomSplit: output.RandomSplit !== undefined && output.RandomSplit !== null ? deserializeAws_restJson1RandomSplitActivity(output.RandomSplit, context) : undefined,\n    SMS: output.SMS !== undefined && output.SMS !== null ? deserializeAws_restJson1SMSMessageActivity(output.SMS, context) : undefined,\n    Wait: output.Wait !== undefined && output.Wait !== null ? deserializeAws_restJson1WaitActivity(output.Wait, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ActivityResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? output.Result : undefined,\n    ScheduledStart: output.ScheduledStart !== undefined && output.ScheduledStart !== null ? output.ScheduledStart : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    SuccessfulEndpointCount: output.SuccessfulEndpointCount !== undefined && output.SuccessfulEndpointCount !== null ? output.SuccessfulEndpointCount : undefined,\n    TimezonesCompletedCount: output.TimezonesCompletedCount !== undefined && output.TimezonesCompletedCount !== null ? output.TimezonesCompletedCount : undefined,\n    TimezonesTotalCount: output.TimezonesTotalCount !== undefined && output.TimezonesTotalCount !== null ? output.TimezonesTotalCount : undefined,\n    TotalEndpointCount: output.TotalEndpointCount !== undefined && output.TotalEndpointCount !== null ? output.TotalEndpointCount : undefined,\n    TreatmentId: output.TreatmentId !== undefined && output.TreatmentId !== null ? output.TreatmentId : undefined\n  };\n};\n\nvar deserializeAws_restJson1ADMChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1AndroidPushNotificationTemplate = function (output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SmallImageIconUrl: output.SmallImageIconUrl !== undefined && output.SmallImageIconUrl !== null ? output.SmallImageIconUrl : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\n\nvar deserializeAws_restJson1APNSChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1APNSPushNotificationTemplate = function (output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\n\nvar deserializeAws_restJson1APNSSandboxChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1APNSVoipChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1APNSVoipSandboxChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod: output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null ? output.DefaultAuthenticationMethod : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1ApplicationDateRangeKpiResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult: output.KpiResult !== undefined && output.KpiResult !== null ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ApplicationResponse = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ApplicationSettingsResource = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignHook: output.CampaignHook !== undefined && output.CampaignHook !== null ? deserializeAws_restJson1CampaignHook(output.CampaignHook, context) : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits: output.Limits !== undefined && output.Limits !== null ? deserializeAws_restJson1CampaignLimits(output.Limits, context) : undefined,\n    QuietTime: output.QuietTime !== undefined && output.QuietTime !== null ? deserializeAws_restJson1QuietTime(output.QuietTime, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ApplicationsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfApplicationResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1AttributeDimension = function (output, context) {\n  return {\n    AttributeType: output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Values: output.Values !== undefined && output.Values !== null ? deserializeAws_restJson1ListOf__string(output.Values, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1AttributesResource = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    AttributeType: output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1ListOf__string(output.Attributes, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1BaiduChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1BaseKpiResult = function (output, context) {\n  return {\n    Rows: output.Rows !== undefined && output.Rows !== null ? deserializeAws_restJson1ListOfResultRow(output.Rows, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignCustomMessage = function (output, context) {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignDateRangeKpiResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult: output.KpiResult !== undefined && output.KpiResult !== null ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignEmailMessage = function (output, context) {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HtmlBody: output.HtmlBody !== undefined && output.HtmlBody !== null ? output.HtmlBody : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignEventFilter = function (output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1EventDimensions(output.Dimensions, context) : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignHook = function (output, context) {\n  return {\n    LambdaFunctionName: output.LambdaFunctionName !== undefined && output.LambdaFunctionName !== null ? output.LambdaFunctionName : undefined,\n    Mode: output.Mode !== undefined && output.Mode !== null ? output.Mode : undefined,\n    WebUrl: output.WebUrl !== undefined && output.WebUrl !== null ? output.WebUrl : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignLimits = function (output, context) {\n  return {\n    Daily: output.Daily !== undefined && output.Daily !== null ? output.Daily : undefined,\n    MaximumDuration: output.MaximumDuration !== undefined && output.MaximumDuration !== null ? output.MaximumDuration : undefined,\n    MessagesPerSecond: output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null ? output.MessagesPerSecond : undefined,\n    Total: output.Total !== undefined && output.Total !== null ? output.Total : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignResponse = function (output, context) {\n  return {\n    AdditionalTreatments: output.AdditionalTreatments !== undefined && output.AdditionalTreatments !== null ? deserializeAws_restJson1ListOfTreatmentResource(output.AdditionalTreatments, context) : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    CustomDeliveryConfiguration: output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context) : undefined,\n    DefaultState: output.DefaultState !== undefined && output.DefaultState !== null ? deserializeAws_restJson1CampaignState(output.DefaultState, context) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    HoldoutPercent: output.HoldoutPercent !== undefined && output.HoldoutPercent !== null ? output.HoldoutPercent : undefined,\n    Hook: output.Hook !== undefined && output.Hook !== null ? deserializeAws_restJson1CampaignHook(output.Hook, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsPaused: output.IsPaused !== undefined && output.IsPaused !== null ? output.IsPaused : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits: output.Limits !== undefined && output.Limits !== null ? deserializeAws_restJson1CampaignLimits(output.Limits, context) : undefined,\n    MessageConfiguration: output.MessageConfiguration !== undefined && output.MessageConfiguration !== null ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context) : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Schedule: output.Schedule !== undefined && output.Schedule !== null ? deserializeAws_restJson1Schedule(output.Schedule, context) : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion: output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined,\n    State: output.State !== undefined && output.State !== null ? deserializeAws_restJson1CampaignState(output.State, context) : undefined,\n    TemplateConfiguration: output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context) : undefined,\n    TreatmentDescription: output.TreatmentDescription !== undefined && output.TreatmentDescription !== null ? output.TreatmentDescription : undefined,\n    TreatmentName: output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignSmsMessage = function (output, context) {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfCampaignResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1CampaignState = function (output, context) {\n  return {\n    CampaignStatus: output.CampaignStatus !== undefined && output.CampaignStatus !== null ? output.CampaignStatus : undefined\n  };\n};\n\nvar deserializeAws_restJson1ChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1ChannelsResponse = function (output, context) {\n  return {\n    Channels: output.Channels !== undefined && output.Channels !== null ? deserializeAws_restJson1MapOfChannelResponse(output.Channels, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Condition = function (output, context) {\n  return {\n    Conditions: output.Conditions !== undefined && output.Conditions !== null ? deserializeAws_restJson1ListOfSimpleCondition(output.Conditions, context) : undefined,\n    Operator: output.Operator !== undefined && output.Operator !== null ? output.Operator : undefined\n  };\n};\n\nvar deserializeAws_restJson1ConditionalSplitActivity = function (output, context) {\n  return {\n    Condition: output.Condition !== undefined && output.Condition !== null ? deserializeAws_restJson1Condition(output.Condition, context) : undefined,\n    EvaluationWaitTime: output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context) : undefined,\n    FalseActivity: output.FalseActivity !== undefined && output.FalseActivity !== null ? output.FalseActivity : undefined,\n    TrueActivity: output.TrueActivity !== undefined && output.TrueActivity !== null ? output.TrueActivity : undefined\n  };\n};\n\nvar deserializeAws_restJson1CreateTemplateMessageBody = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined\n  };\n};\n\nvar deserializeAws_restJson1CustomDeliveryConfiguration = function (output, context) {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes: output.EndpointTypes !== undefined && output.EndpointTypes !== null ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1CustomMessageActivity = function (output, context) {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes: output.EndpointTypes !== undefined && output.EndpointTypes !== null ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context) : undefined,\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneyCustomMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\n\nvar deserializeAws_restJson1DefaultPushNotificationTemplate = function (output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\n\nvar deserializeAws_restJson1EmailChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    ConfigurationSet: output.ConfigurationSet !== undefined && output.ConfigurationSet !== null ? output.ConfigurationSet : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Identity: output.Identity !== undefined && output.Identity !== null ? output.Identity : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    MessagesPerSecond: output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null ? output.MessagesPerSecond : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1EmailMessageActivity = function (output, context) {\n  return {\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneyEmailMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\n\nvar deserializeAws_restJson1EmailTemplateResponse = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    HtmlPart: output.HtmlPart !== undefined && output.HtmlPart !== null ? output.HtmlPart : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId: output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    Subject: output.Subject !== undefined && output.Subject !== null ? output.Subject : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    TextPart: output.TextPart !== undefined && output.TextPart !== null ? output.TextPart : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointDemographic = function (output, context) {\n  return {\n    AppVersion: output.AppVersion !== undefined && output.AppVersion !== null ? output.AppVersion : undefined,\n    Locale: output.Locale !== undefined && output.Locale !== null ? output.Locale : undefined,\n    Make: output.Make !== undefined && output.Make !== null ? output.Make : undefined,\n    Model: output.Model !== undefined && output.Model !== null ? output.Model : undefined,\n    ModelVersion: output.ModelVersion !== undefined && output.ModelVersion !== null ? output.ModelVersion : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PlatformVersion: output.PlatformVersion !== undefined && output.PlatformVersion !== null ? output.PlatformVersion : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointItemResponse = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointLocation = function (output, context) {\n  return {\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined,\n    PostalCode: output.PostalCode !== undefined && output.PostalCode !== null ? output.PostalCode : undefined,\n    Region: output.Region !== undefined && output.Region !== null ? output.Region : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointMessageResult = function (output, context) {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    DeliveryStatus: output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage: output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointResponse = function (output, context) {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOfListOf__string(output.Attributes, context) : undefined,\n    ChannelType: output.ChannelType !== undefined && output.ChannelType !== null ? output.ChannelType : undefined,\n    CohortId: output.CohortId !== undefined && output.CohortId !== null ? output.CohortId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Demographic: output.Demographic !== undefined && output.Demographic !== null ? deserializeAws_restJson1EndpointDemographic(output.Demographic, context) : undefined,\n    EffectiveDate: output.EffectiveDate !== undefined && output.EffectiveDate !== null ? output.EffectiveDate : undefined,\n    EndpointStatus: output.EndpointStatus !== undefined && output.EndpointStatus !== null ? output.EndpointStatus : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Location: output.Location !== undefined && output.Location !== null ? deserializeAws_restJson1EndpointLocation(output.Location, context) : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOf__double(output.Metrics, context) : undefined,\n    OptOut: output.OptOut !== undefined && output.OptOut !== null ? output.OptOut : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    User: output.User !== undefined && output.User !== null ? deserializeAws_restJson1EndpointUser(output.User, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfEndpointResponse(output.Item, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1EndpointUser = function (output, context) {\n  return {\n    UserAttributes: output.UserAttributes !== undefined && output.UserAttributes !== null ? deserializeAws_restJson1MapOfListOf__string(output.UserAttributes, context) : undefined,\n    UserId: output.UserId !== undefined && output.UserId !== null ? output.UserId : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventCondition = function (output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1EventDimensions(output.Dimensions, context) : undefined,\n    MessageActivity: output.MessageActivity !== undefined && output.MessageActivity !== null ? output.MessageActivity : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventDimensions = function (output, context) {\n  return {\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context) : undefined,\n    EventType: output.EventType !== undefined && output.EventType !== null ? deserializeAws_restJson1SetDimension(output.EventType, context) : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventFilter = function (output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1EventDimensions(output.Dimensions, context) : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventItemResponse = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventsResponse = function (output, context) {\n  return {\n    Results: output.Results !== undefined && output.Results !== null ? deserializeAws_restJson1MapOfItemResponse(output.Results, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventStartCondition = function (output, context) {\n  return {\n    EventFilter: output.EventFilter !== undefined && output.EventFilter !== null ? deserializeAws_restJson1EventFilter(output.EventFilter, context) : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined\n  };\n};\n\nvar deserializeAws_restJson1EventStream = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    DestinationStreamArn: output.DestinationStreamArn !== undefined && output.DestinationStreamArn !== null ? output.DestinationStreamArn : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    LastUpdatedBy: output.LastUpdatedBy !== undefined && output.LastUpdatedBy !== null ? output.LastUpdatedBy : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined\n  };\n};\n\nvar deserializeAws_restJson1ExportJobResource = function (output, context) {\n  return {\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3UrlPrefix: output.S3UrlPrefix !== undefined && output.S3UrlPrefix !== null ? output.S3UrlPrefix : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion: output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined\n  };\n};\n\nvar deserializeAws_restJson1ExportJobResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces: output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate: output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition: output.Definition !== undefined && output.Definition !== null ? deserializeAws_restJson1ExportJobResource(output.Definition, context) : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures: output.Failures !== undefined && output.Failures !== null ? deserializeAws_restJson1ListOf__string(output.Failures, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures: output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed: output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\n\nvar deserializeAws_restJson1ExportJobsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfExportJobResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1GCMChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1GPSCoordinates = function (output, context) {\n  return {\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined\n  };\n};\n\nvar deserializeAws_restJson1GPSPointDimension = function (output, context) {\n  return {\n    Coordinates: output.Coordinates !== undefined && output.Coordinates !== null ? deserializeAws_restJson1GPSCoordinates(output.Coordinates, context) : undefined,\n    RangeInKilometers: output.RangeInKilometers !== undefined && output.RangeInKilometers !== null ? output.RangeInKilometers : undefined\n  };\n};\n\nvar deserializeAws_restJson1HoldoutActivity = function (output, context) {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined\n  };\n};\n\nvar deserializeAws_restJson1ImportJobResource = function (output, context) {\n  return {\n    DefineSegment: output.DefineSegment !== undefined && output.DefineSegment !== null ? output.DefineSegment : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RegisterEndpoints: output.RegisterEndpoints !== undefined && output.RegisterEndpoints !== null ? output.RegisterEndpoints : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentName: output.SegmentName !== undefined && output.SegmentName !== null ? output.SegmentName : undefined\n  };\n};\n\nvar deserializeAws_restJson1ImportJobResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces: output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate: output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition: output.Definition !== undefined && output.Definition !== null ? deserializeAws_restJson1ImportJobResource(output.Definition, context) : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures: output.Failures !== undefined && output.Failures !== null ? deserializeAws_restJson1ListOf__string(output.Failures, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures: output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed: output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\n\nvar deserializeAws_restJson1ImportJobsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfImportJobResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1ItemResponse = function (output, context) {\n  return {\n    EndpointItemResponse: output.EndpointItemResponse !== undefined && output.EndpointItemResponse !== null ? deserializeAws_restJson1EndpointItemResponse(output.EndpointItemResponse, context) : undefined,\n    EventsItemResponse: output.EventsItemResponse !== undefined && output.EventsItemResponse !== null ? deserializeAws_restJson1MapOfEventItemResponse(output.EventsItemResponse, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyCustomMessage = function (output, context) {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyDateRangeKpiResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult: output.KpiResult !== undefined && output.KpiResult !== null ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyEmailMessage = function (output, context) {\n  return {\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyExecutionActivityMetricsResponse = function (output, context) {\n  return {\n    ActivityType: output.ActivityType !== undefined && output.ActivityType !== null ? output.ActivityType : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyActivityId: output.JourneyActivityId !== undefined && output.JourneyActivityId !== null ? output.JourneyActivityId : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime: output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null ? output.LastEvaluatedTime : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOf__string(output.Metrics, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyExecutionMetricsResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime: output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null ? output.LastEvaluatedTime : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOf__string(output.Metrics, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyLimits = function (output, context) {\n  return {\n    DailyCap: output.DailyCap !== undefined && output.DailyCap !== null ? output.DailyCap : undefined,\n    EndpointReentryCap: output.EndpointReentryCap !== undefined && output.EndpointReentryCap !== null ? output.EndpointReentryCap : undefined,\n    MessagesPerSecond: output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null ? output.MessagesPerSecond : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyPushMessage = function (output, context) {\n  return {\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneyResponse = function (output, context) {\n  return {\n    Activities: output.Activities !== undefined && output.Activities !== null ? deserializeAws_restJson1MapOfActivity(output.Activities, context) : undefined,\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits: output.Limits !== undefined && output.Limits !== null ? deserializeAws_restJson1JourneyLimits(output.Limits, context) : undefined,\n    LocalTime: output.LocalTime !== undefined && output.LocalTime !== null ? output.LocalTime : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    QuietTime: output.QuietTime !== undefined && output.QuietTime !== null ? deserializeAws_restJson1QuietTime(output.QuietTime, context) : undefined,\n    RefreshFrequency: output.RefreshFrequency !== undefined && output.RefreshFrequency !== null ? output.RefreshFrequency : undefined,\n    Schedule: output.Schedule !== undefined && output.Schedule !== null ? deserializeAws_restJson1JourneySchedule(output.Schedule, context) : undefined,\n    StartActivity: output.StartActivity !== undefined && output.StartActivity !== null ? output.StartActivity : undefined,\n    StartCondition: output.StartCondition !== undefined && output.StartCondition !== null ? deserializeAws_restJson1StartCondition(output.StartCondition, context) : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneySchedule = function (output, context) {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneySMSMessage = function (output, context) {\n  return {\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined\n  };\n};\n\nvar deserializeAws_restJson1JourneysResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfJourneyResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1ListOf__EndpointTypesElement = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restJson1ListOf__string = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_restJson1ListOfActivityResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ActivityResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfApplicationResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ApplicationResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfCampaignResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1CampaignResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfEndpointResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1EndpointResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfExportJobResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ExportJobResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfImportJobResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ImportJobResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfJourneyResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1JourneyResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfMultiConditionalBranch = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1MultiConditionalBranch(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfRandomSplitEntry = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1RandomSplitEntry(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfRecommenderConfigurationResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1RecommenderConfigurationResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfResultRow = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ResultRow(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfResultRowValue = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ResultRowValue(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfSegmentDimensions = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1SegmentDimensions(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfSegmentGroup = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1SegmentGroup(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfSegmentReference = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1SegmentReference(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfSegmentResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1SegmentResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfSimpleCondition = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1SimpleCondition(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfTemplateResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1TemplateResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfTemplateVersionResponse = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1TemplateVersionResponse(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListOfTreatmentResource = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1TreatmentResource(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1ListRecommenderConfigurationsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfRecommenderConfigurationResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1MapOf__double = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOf__integer = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOf__string = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfActivity = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1Activity(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfAttributeDimension = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1AttributeDimension(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfChannelResponse = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1ChannelResponse(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfEndpointMessageResult = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1EndpointMessageResult(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfEventItemResponse = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1EventItemResponse(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfItemResponse = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1ItemResponse(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfListOf__string = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1ListOf__string(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfMapOfEndpointMessageResult = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1MapOfEndpointMessageResult(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfMessageResult = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1MessageResult(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1MapOfMetricDimension = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1MetricDimension(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1Message = function (output, context) {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageSmallIconUrl: output.ImageSmallIconUrl !== undefined && output.ImageSmallIconUrl !== null ? output.ImageSmallIconUrl : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    JsonBody: output.JsonBody !== undefined && output.JsonBody !== null ? output.JsonBody : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SilentPush: output.SilentPush !== undefined && output.SilentPush !== null ? output.SilentPush : undefined,\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined\n  };\n};\n\nvar deserializeAws_restJson1MessageBody = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined\n  };\n};\n\nvar deserializeAws_restJson1MessageConfiguration = function (output, context) {\n  return {\n    ADMMessage: output.ADMMessage !== undefined && output.ADMMessage !== null ? deserializeAws_restJson1Message(output.ADMMessage, context) : undefined,\n    APNSMessage: output.APNSMessage !== undefined && output.APNSMessage !== null ? deserializeAws_restJson1Message(output.APNSMessage, context) : undefined,\n    BaiduMessage: output.BaiduMessage !== undefined && output.BaiduMessage !== null ? deserializeAws_restJson1Message(output.BaiduMessage, context) : undefined,\n    CustomMessage: output.CustomMessage !== undefined && output.CustomMessage !== null ? deserializeAws_restJson1CampaignCustomMessage(output.CustomMessage, context) : undefined,\n    DefaultMessage: output.DefaultMessage !== undefined && output.DefaultMessage !== null ? deserializeAws_restJson1Message(output.DefaultMessage, context) : undefined,\n    EmailMessage: output.EmailMessage !== undefined && output.EmailMessage !== null ? deserializeAws_restJson1CampaignEmailMessage(output.EmailMessage, context) : undefined,\n    GCMMessage: output.GCMMessage !== undefined && output.GCMMessage !== null ? deserializeAws_restJson1Message(output.GCMMessage, context) : undefined,\n    SMSMessage: output.SMSMessage !== undefined && output.SMSMessage !== null ? deserializeAws_restJson1CampaignSmsMessage(output.SMSMessage, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1MessageResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndpointResult: output.EndpointResult !== undefined && output.EndpointResult !== null ? deserializeAws_restJson1MapOfEndpointMessageResult(output.EndpointResult, context) : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? deserializeAws_restJson1MapOfMessageResult(output.Result, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1MessageResult = function (output, context) {\n  return {\n    DeliveryStatus: output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage: output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1MetricDimension = function (output, context) {\n  return {\n    ComparisonOperator: output.ComparisonOperator !== undefined && output.ComparisonOperator !== null ? output.ComparisonOperator : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined\n  };\n};\n\nvar deserializeAws_restJson1MultiConditionalBranch = function (output, context) {\n  return {\n    Condition: output.Condition !== undefined && output.Condition !== null ? deserializeAws_restJson1SimpleCondition(output.Condition, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined\n  };\n};\n\nvar deserializeAws_restJson1MultiConditionalSplitActivity = function (output, context) {\n  return {\n    Branches: output.Branches !== undefined && output.Branches !== null ? deserializeAws_restJson1ListOfMultiConditionalBranch(output.Branches, context) : undefined,\n    DefaultActivity: output.DefaultActivity !== undefined && output.DefaultActivity !== null ? output.DefaultActivity : undefined,\n    EvaluationWaitTime: output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1NumberValidateResponse = function (output, context) {\n  return {\n    Carrier: output.Carrier !== undefined && output.Carrier !== null ? output.Carrier : undefined,\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    CleansedPhoneNumberE164: output.CleansedPhoneNumberE164 !== undefined && output.CleansedPhoneNumberE164 !== null ? output.CleansedPhoneNumberE164 : undefined,\n    CleansedPhoneNumberNational: output.CleansedPhoneNumberNational !== undefined && output.CleansedPhoneNumberNational !== null ? output.CleansedPhoneNumberNational : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    CountryCodeIso2: output.CountryCodeIso2 !== undefined && output.CountryCodeIso2 !== null ? output.CountryCodeIso2 : undefined,\n    CountryCodeNumeric: output.CountryCodeNumeric !== undefined && output.CountryCodeNumeric !== null ? output.CountryCodeNumeric : undefined,\n    County: output.County !== undefined && output.County !== null ? output.County : undefined,\n    OriginalCountryCodeIso2: output.OriginalCountryCodeIso2 !== undefined && output.OriginalCountryCodeIso2 !== null ? output.OriginalCountryCodeIso2 : undefined,\n    OriginalPhoneNumber: output.OriginalPhoneNumber !== undefined && output.OriginalPhoneNumber !== null ? output.OriginalPhoneNumber : undefined,\n    PhoneType: output.PhoneType !== undefined && output.PhoneType !== null ? output.PhoneType : undefined,\n    PhoneTypeCode: output.PhoneTypeCode !== undefined && output.PhoneTypeCode !== null ? output.PhoneTypeCode : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n    ZipCode: output.ZipCode !== undefined && output.ZipCode !== null ? output.ZipCode : undefined\n  };\n};\n\nvar deserializeAws_restJson1PushMessageActivity = function (output, context) {\n  return {\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneyPushMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\n\nvar deserializeAws_restJson1PushNotificationTemplateResponse = function (output, context) {\n  return {\n    ADM: output.ADM !== undefined && output.ADM !== null ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.ADM, context) : undefined,\n    APNS: output.APNS !== undefined && output.APNS !== null ? deserializeAws_restJson1APNSPushNotificationTemplate(output.APNS, context) : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Baidu: output.Baidu !== undefined && output.Baidu !== null ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.Baidu, context) : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Default: output.Default !== undefined && output.Default !== null ? deserializeAws_restJson1DefaultPushNotificationTemplate(output.Default, context) : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    GCM: output.GCM !== undefined && output.GCM !== null ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.GCM, context) : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId: output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1QuietTime = function (output, context) {\n  return {\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined\n  };\n};\n\nvar deserializeAws_restJson1RandomSplitActivity = function (output, context) {\n  return {\n    Branches: output.Branches !== undefined && output.Branches !== null ? deserializeAws_restJson1ListOfRandomSplitEntry(output.Branches, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1RandomSplitEntry = function (output, context) {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined\n  };\n};\n\nvar deserializeAws_restJson1RecencyDimension = function (output, context) {\n  return {\n    Duration: output.Duration !== undefined && output.Duration !== null ? output.Duration : undefined,\n    RecencyType: output.RecencyType !== undefined && output.RecencyType !== null ? output.RecencyType : undefined\n  };\n};\n\nvar deserializeAws_restJson1RecommenderConfigurationResponse = function (output, context) {\n  return {\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOf__string(output.Attributes, context) : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    RecommendationProviderIdType: output.RecommendationProviderIdType !== undefined && output.RecommendationProviderIdType !== null ? output.RecommendationProviderIdType : undefined,\n    RecommendationProviderRoleArn: output.RecommendationProviderRoleArn !== undefined && output.RecommendationProviderRoleArn !== null ? output.RecommendationProviderRoleArn : undefined,\n    RecommendationProviderUri: output.RecommendationProviderUri !== undefined && output.RecommendationProviderUri !== null ? output.RecommendationProviderUri : undefined,\n    RecommendationTransformerUri: output.RecommendationTransformerUri !== undefined && output.RecommendationTransformerUri !== null ? output.RecommendationTransformerUri : undefined,\n    RecommendationsDisplayName: output.RecommendationsDisplayName !== undefined && output.RecommendationsDisplayName !== null ? output.RecommendationsDisplayName : undefined,\n    RecommendationsPerMessage: output.RecommendationsPerMessage !== undefined && output.RecommendationsPerMessage !== null ? output.RecommendationsPerMessage : undefined\n  };\n};\n\nvar deserializeAws_restJson1ResultRow = function (output, context) {\n  return {\n    GroupedBys: output.GroupedBys !== undefined && output.GroupedBys !== null ? deserializeAws_restJson1ListOfResultRowValue(output.GroupedBys, context) : undefined,\n    Values: output.Values !== undefined && output.Values !== null ? deserializeAws_restJson1ListOfResultRowValue(output.Values, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ResultRowValue = function (output, context) {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined\n  };\n};\n\nvar deserializeAws_restJson1Schedule = function (output, context) {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? output.EndTime : undefined,\n    EventFilter: output.EventFilter !== undefined && output.EventFilter !== null ? deserializeAws_restJson1CampaignEventFilter(output.EventFilter, context) : undefined,\n    Frequency: output.Frequency !== undefined && output.Frequency !== null ? output.Frequency : undefined,\n    IsLocalTime: output.IsLocalTime !== undefined && output.IsLocalTime !== null ? output.IsLocalTime : undefined,\n    QuietTime: output.QuietTime !== undefined && output.QuietTime !== null ? deserializeAws_restJson1QuietTime(output.QuietTime, context) : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? output.StartTime : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentBehaviors = function (output, context) {\n  return {\n    Recency: output.Recency !== undefined && output.Recency !== null ? deserializeAws_restJson1RecencyDimension(output.Recency, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentCondition = function (output, context) {\n  return {\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentDemographics = function (output, context) {\n  return {\n    AppVersion: output.AppVersion !== undefined && output.AppVersion !== null ? deserializeAws_restJson1SetDimension(output.AppVersion, context) : undefined,\n    Channel: output.Channel !== undefined && output.Channel !== null ? deserializeAws_restJson1SetDimension(output.Channel, context) : undefined,\n    DeviceType: output.DeviceType !== undefined && output.DeviceType !== null ? deserializeAws_restJson1SetDimension(output.DeviceType, context) : undefined,\n    Make: output.Make !== undefined && output.Make !== null ? deserializeAws_restJson1SetDimension(output.Make, context) : undefined,\n    Model: output.Model !== undefined && output.Model !== null ? deserializeAws_restJson1SetDimension(output.Model, context) : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? deserializeAws_restJson1SetDimension(output.Platform, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentDimensions = function (output, context) {\n  return {\n    Attributes: output.Attributes !== undefined && output.Attributes !== null ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context) : undefined,\n    Behavior: output.Behavior !== undefined && output.Behavior !== null ? deserializeAws_restJson1SegmentBehaviors(output.Behavior, context) : undefined,\n    Demographic: output.Demographic !== undefined && output.Demographic !== null ? deserializeAws_restJson1SegmentDemographics(output.Demographic, context) : undefined,\n    Location: output.Location !== undefined && output.Location !== null ? deserializeAws_restJson1SegmentLocation(output.Location, context) : undefined,\n    Metrics: output.Metrics !== undefined && output.Metrics !== null ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context) : undefined,\n    UserAttributes: output.UserAttributes !== undefined && output.UserAttributes !== null ? deserializeAws_restJson1MapOfAttributeDimension(output.UserAttributes, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentGroup = function (output, context) {\n  return {\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1ListOfSegmentDimensions(output.Dimensions, context) : undefined,\n    SourceSegments: output.SourceSegments !== undefined && output.SourceSegments !== null ? deserializeAws_restJson1ListOfSegmentReference(output.SourceSegments, context) : undefined,\n    SourceType: output.SourceType !== undefined && output.SourceType !== null ? output.SourceType : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentGroupList = function (output, context) {\n  return {\n    Groups: output.Groups !== undefined && output.Groups !== null ? deserializeAws_restJson1ListOfSegmentGroup(output.Groups, context) : undefined,\n    Include: output.Include !== undefined && output.Include !== null ? output.Include : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentImportResource = function (output, context) {\n  return {\n    ChannelCounts: output.ChannelCounts !== undefined && output.ChannelCounts !== null ? deserializeAws_restJson1MapOf__integer(output.ChannelCounts, context) : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    Size: output.Size !== undefined && output.Size !== null ? output.Size : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentLocation = function (output, context) {\n  return {\n    Country: output.Country !== undefined && output.Country !== null ? deserializeAws_restJson1SetDimension(output.Country, context) : undefined,\n    GPSPoint: output.GPSPoint !== undefined && output.GPSPoint !== null ? deserializeAws_restJson1GPSPointDimension(output.GPSPoint, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentReference = function (output, context) {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Dimensions: output.Dimensions !== undefined && output.Dimensions !== null ? deserializeAws_restJson1SegmentDimensions(output.Dimensions, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    ImportDefinition: output.ImportDefinition !== undefined && output.ImportDefinition !== null ? deserializeAws_restJson1SegmentImportResource(output.ImportDefinition, context) : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SegmentGroups: output.SegmentGroups !== undefined && output.SegmentGroups !== null ? deserializeAws_restJson1SegmentGroupList(output.SegmentGroups, context) : undefined,\n    SegmentType: output.SegmentType !== undefined && output.SegmentType !== null ? output.SegmentType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SegmentsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfSegmentResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1SendUsersMessageResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? deserializeAws_restJson1MapOfMapOfEndpointMessageResult(output.Result, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SetDimension = function (output, context) {\n  return {\n    DimensionType: output.DimensionType !== undefined && output.DimensionType !== null ? output.DimensionType : undefined,\n    Values: output.Values !== undefined && output.Values !== null ? deserializeAws_restJson1ListOf__string(output.Values, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SimpleCondition = function (output, context) {\n  return {\n    EventCondition: output.EventCondition !== undefined && output.EventCondition !== null ? deserializeAws_restJson1EventCondition(output.EventCondition, context) : undefined,\n    SegmentCondition: output.SegmentCondition !== undefined && output.SegmentCondition !== null ? deserializeAws_restJson1SegmentCondition(output.SegmentCondition, context) : undefined,\n    SegmentDimensions: output.segmentDimensions !== undefined && output.segmentDimensions !== null ? deserializeAws_restJson1SegmentDimensions(output.segmentDimensions, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SMSChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PromotionalMessagesPerSecond: output.PromotionalMessagesPerSecond !== undefined && output.PromotionalMessagesPerSecond !== null ? output.PromotionalMessagesPerSecond : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n    ShortCode: output.ShortCode !== undefined && output.ShortCode !== null ? output.ShortCode : undefined,\n    TransactionalMessagesPerSecond: output.TransactionalMessagesPerSecond !== undefined && output.TransactionalMessagesPerSecond !== null ? output.TransactionalMessagesPerSecond : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1SMSMessageActivity = function (output, context) {\n  return {\n    MessageConfig: output.MessageConfig !== undefined && output.MessageConfig !== null ? deserializeAws_restJson1JourneySMSMessage(output.MessageConfig, context) : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion: output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined\n  };\n};\n\nvar deserializeAws_restJson1SMSTemplateResponse = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId: output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1StartCondition = function (output, context) {\n  return {\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EventStartCondition: output.EventStartCondition !== undefined && output.EventStartCondition !== null ? deserializeAws_restJson1EventStartCondition(output.EventStartCondition, context) : undefined,\n    SegmentStartCondition: output.SegmentStartCondition !== undefined && output.SegmentStartCondition !== null ? deserializeAws_restJson1SegmentCondition(output.SegmentStartCondition, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1TagsModel = function (output, context) {\n  return {\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Template = function (output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1TemplateConfiguration = function (output, context) {\n  return {\n    EmailTemplate: output.EmailTemplate !== undefined && output.EmailTemplate !== null ? deserializeAws_restJson1Template(output.EmailTemplate, context) : undefined,\n    PushTemplate: output.PushTemplate !== undefined && output.PushTemplate !== null ? deserializeAws_restJson1Template(output.PushTemplate, context) : undefined,\n    SMSTemplate: output.SMSTemplate !== undefined && output.SMSTemplate !== null ? deserializeAws_restJson1Template(output.SMSTemplate, context) : undefined,\n    VoiceTemplate: output.VoiceTemplate !== undefined && output.VoiceTemplate !== null ? deserializeAws_restJson1Template(output.VoiceTemplate, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1TemplateResponse = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1TemplatesResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfTemplateResponse(output.Item, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_restJson1TemplateVersionResponse = function (output, context) {\n  return {\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1TemplateVersionsResponse = function (output, context) {\n  return {\n    Item: output.Item !== undefined && output.Item !== null ? deserializeAws_restJson1ListOfTemplateVersionResponse(output.Item, context) : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined\n  };\n};\n\nvar deserializeAws_restJson1TreatmentResource = function (output, context) {\n  return {\n    CustomDeliveryConfiguration: output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context) : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    MessageConfiguration: output.MessageConfiguration !== undefined && output.MessageConfiguration !== null ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context) : undefined,\n    Schedule: output.Schedule !== undefined && output.Schedule !== null ? deserializeAws_restJson1Schedule(output.Schedule, context) : undefined,\n    SizePercent: output.SizePercent !== undefined && output.SizePercent !== null ? output.SizePercent : undefined,\n    State: output.State !== undefined && output.State !== null ? deserializeAws_restJson1CampaignState(output.State, context) : undefined,\n    TemplateConfiguration: output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context) : undefined,\n    TreatmentDescription: output.TreatmentDescription !== undefined && output.TreatmentDescription !== null ? output.TreatmentDescription : undefined,\n    TreatmentName: output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined\n  };\n};\n\nvar deserializeAws_restJson1VoiceChannelResponse = function (output, context) {\n  return {\n    ApplicationId: output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential: output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy: output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined\n  };\n};\n\nvar deserializeAws_restJson1VoiceTemplateResponse = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions: output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null ? output.DefaultSubstitutions : undefined,\n    LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n    LastModifiedDate: output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription: output.TemplateDescription !== undefined && output.TemplateDescription !== null ? output.TemplateDescription : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    VoiceId: output.VoiceId !== undefined && output.VoiceId !== null ? output.VoiceId : undefined,\n    tags: output.tags !== undefined && output.tags !== null ? deserializeAws_restJson1MapOf__string(output.tags, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1WaitActivity = function (output, context) {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    WaitTime: output.WaitTime !== undefined && output.WaitTime !== null ? deserializeAws_restJson1WaitTime(output.WaitTime, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1WaitTime = function (output, context) {\n  return {\n    WaitFor: output.WaitFor !== undefined && output.WaitFor !== null ? output.WaitFor : undefined,\n    WaitUntil: output.WaitUntil !== undefined && output.WaitUntil !== null ? output.WaitUntil : undefined\n  };\n};\n\nvar deserializeMetadata = function (output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\n\n\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":{"version":3,"mappings":"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","names":["HttpRequest","__HttpRequest","extendedEncodeURIComponent","__extendedEncodeURIComponent","serializeAws_restJson1CreateAppCommand","input","context","headers","resolvedPath","CreateApplicationRequest","undefined","body","serializeAws_restJson1CreateApplicationRequest","JSON","stringify","endpoint","_a","_c","hostname","_b","protocol","port","method","path","serializeAws_restJson1CreateCampaignCommand","ApplicationId","labelValue","length","Error","replace","WriteCampaignRequest","serializeAws_restJson1WriteCampaignRequest","serializeAws_restJson1CreateEmailTemplateCommand","TemplateName","EmailTemplateRequest","serializeAws_restJson1EmailTemplateRequest","serializeAws_restJson1CreateExportJobCommand","ExportJobRequest","serializeAws_restJson1ExportJobRequest","serializeAws_restJson1CreateImportJobCommand","ImportJobRequest","serializeAws_restJson1ImportJobRequest","serializeAws_restJson1CreateJourneyCommand","WriteJourneyRequest","serializeAws_restJson1WriteJourneyRequest","serializeAws_restJson1CreatePushTemplateCommand","PushNotificationTemplateRequest","serializeAws_restJson1PushNotificationTemplateRequest","serializeAws_restJson1CreateRecommenderConfigurationCommand","CreateRecommenderConfiguration","serializeAws_restJson1CreateRecommenderConfigurationShape","serializeAws_restJson1CreateSegmentCommand","WriteSegmentRequest","serializeAws_restJson1WriteSegmentRequest","serializeAws_restJson1CreateSmsTemplateCommand","SMSTemplateRequest","serializeAws_restJson1SMSTemplateRequest","serializeAws_restJson1CreateVoiceTemplateCommand","VoiceTemplateRequest","serializeAws_restJson1VoiceTemplateRequest","serializeAws_restJson1DeleteAdmChannelCommand","serializeAws_restJson1DeleteApnsChannelCommand","serializeAws_restJson1DeleteApnsSandboxChannelCommand","serializeAws_restJson1DeleteApnsVoipChannelCommand","serializeAws_restJson1DeleteApnsVoipSandboxChannelCommand","serializeAws_restJson1DeleteAppCommand","serializeAws_restJson1DeleteBaiduChannelCommand","serializeAws_restJson1DeleteCampaignCommand","CampaignId","serializeAws_restJson1DeleteEmailChannelCommand","serializeAws_restJson1DeleteEmailTemplateCommand","query","Version","version","serializeAws_restJson1DeleteEndpointCommand","EndpointId","serializeAws_restJson1DeleteEventStreamCommand","serializeAws_restJson1DeleteGcmChannelCommand","serializeAws_restJson1DeleteJourneyCommand","JourneyId","serializeAws_restJson1DeletePushTemplateCommand","serializeAws_restJson1DeleteRecommenderConfigurationCommand","RecommenderId","serializeAws_restJson1DeleteSegmentCommand","SegmentId","serializeAws_restJson1DeleteSmsChannelCommand","serializeAws_restJson1DeleteSmsTemplateCommand","serializeAws_restJson1DeleteUserEndpointsCommand","UserId","serializeAws_restJson1DeleteVoiceChannelCommand","serializeAws_restJson1DeleteVoiceTemplateCommand","serializeAws_restJson1GetAdmChannelCommand","serializeAws_restJson1GetApnsChannelCommand","serializeAws_restJson1GetApnsSandboxChannelCommand","serializeAws_restJson1GetApnsVoipChannelCommand","serializeAws_restJson1GetApnsVoipSandboxChannelCommand","serializeAws_restJson1GetAppCommand","serializeAws_restJson1GetApplicationDateRangeKpiCommand","KpiName","EndTime","toISOString","split","toString","NextToken","PageSize","StartTime","serializeAws_restJson1GetApplicationSettingsCommand","serializeAws_restJson1GetAppsCommand","Token","token","serializeAws_restJson1GetBaiduChannelCommand","serializeAws_restJson1GetCampaignCommand","serializeAws_restJson1GetCampaignActivitiesCommand","serializeAws_restJson1GetCampaignDateRangeKpiCommand","serializeAws_restJson1GetCampaignsCommand","serializeAws_restJson1GetCampaignVersionCommand","serializeAws_restJson1GetCampaignVersionsCommand","serializeAws_restJson1GetChannelsCommand","serializeAws_restJson1GetEmailChannelCommand","serializeAws_restJson1GetEmailTemplateCommand","serializeAws_restJson1GetEndpointCommand","serializeAws_restJson1GetEventStreamCommand","serializeAws_restJson1GetExportJobCommand","JobId","serializeAws_restJson1GetExportJobsCommand","serializeAws_restJson1GetGcmChannelCommand","serializeAws_restJson1GetImportJobCommand","serializeAws_restJson1GetImportJobsCommand","serializeAws_restJson1GetJourneyCommand","serializeAws_restJson1GetJourneyDateRangeKpiCommand","serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand","JourneyActivityId","serializeAws_restJson1GetJourneyExecutionMetricsCommand","serializeAws_restJson1GetPushTemplateCommand","serializeAws_restJson1GetRecommenderConfigurationCommand","serializeAws_restJson1GetRecommenderConfigurationsCommand","serializeAws_restJson1GetSegmentCommand","serializeAws_restJson1GetSegmentExportJobsCommand","serializeAws_restJson1GetSegmentImportJobsCommand","serializeAws_restJson1GetSegmentsCommand","serializeAws_restJson1GetSegmentVersionCommand","serializeAws_restJson1GetSegmentVersionsCommand","serializeAws_restJson1GetSmsChannelCommand","serializeAws_restJson1GetSmsTemplateCommand","serializeAws_restJson1GetUserEndpointsCommand","serializeAws_restJson1GetVoiceChannelCommand","serializeAws_restJson1GetVoiceTemplateCommand","serializeAws_restJson1ListJourneysCommand","serializeAws_restJson1ListTagsForResourceCommand","ResourceArn","serializeAws_restJson1ListTemplatesCommand","Prefix","prefix","TemplateType","serializeAws_restJson1ListTemplateVersionsCommand","serializeAws_restJson1PhoneNumberValidateCommand","NumberValidateRequest","serializeAws_restJson1NumberValidateRequest","serializeAws_restJson1PutEventsCommand","EventsRequest","serializeAws_restJson1EventsRequest","serializeAws_restJson1PutEventStreamCommand","WriteEventStream","serializeAws_restJson1WriteEventStream","serializeAws_restJson1RemoveAttributesCommand","AttributeType","UpdateAttributesRequest","serializeAws_restJson1UpdateAttributesRequest","serializeAws_restJson1SendMessagesCommand","MessageRequest","serializeAws_restJson1MessageRequest","serializeAws_restJson1SendUsersMessagesCommand","SendUsersMessageRequest","serializeAws_restJson1SendUsersMessageRequest","serializeAws_restJson1TagResourceCommand","TagsModel","serializeAws_restJson1TagsModel","serializeAws_restJson1UntagResourceCommand","TagKeys","tagKeys","map","_entry","serializeAws_restJson1UpdateAdmChannelCommand","ADMChannelRequest","serializeAws_restJson1ADMChannelRequest","serializeAws_restJson1UpdateApnsChannelCommand","APNSChannelRequest","serializeAws_restJson1APNSChannelRequest","serializeAws_restJson1UpdateApnsSandboxChannelCommand","APNSSandboxChannelRequest","serializeAws_restJson1APNSSandboxChannelRequest","serializeAws_restJson1UpdateApnsVoipChannelCommand","APNSVoipChannelRequest","serializeAws_restJson1APNSVoipChannelRequest","serializeAws_restJson1UpdateApnsVoipSandboxChannelCommand","APNSVoipSandboxChannelRequest","serializeAws_restJson1APNSVoipSandboxChannelRequest","serializeAws_restJson1UpdateApplicationSettingsCommand","WriteApplicationSettingsRequest","serializeAws_restJson1WriteApplicationSettingsRequest","serializeAws_restJson1UpdateBaiduChannelCommand","BaiduChannelRequest","serializeAws_restJson1BaiduChannelRequest","serializeAws_restJson1UpdateCampaignCommand","serializeAws_restJson1UpdateEmailChannelCommand","EmailChannelRequest","serializeAws_restJson1EmailChannelRequest","serializeAws_restJson1UpdateEmailTemplateCommand","CreateNewVersion","serializeAws_restJson1UpdateEndpointCommand","EndpointRequest","serializeAws_restJson1EndpointRequest","serializeAws_restJson1UpdateEndpointsBatchCommand","EndpointBatchRequest","serializeAws_restJson1EndpointBatchRequest","serializeAws_restJson1UpdateGcmChannelCommand","GCMChannelRequest","serializeAws_restJson1GCMChannelRequest","serializeAws_restJson1UpdateJourneyCommand","serializeAws_restJson1UpdateJourneyStateCommand","JourneyStateRequest","serializeAws_restJson1JourneyStateRequest","serializeAws_restJson1UpdatePushTemplateCommand","serializeAws_restJson1UpdateRecommenderConfigurationCommand","UpdateRecommenderConfiguration","serializeAws_restJson1UpdateRecommenderConfigurationShape","serializeAws_restJson1UpdateSegmentCommand","serializeAws_restJson1UpdateSmsChannelCommand","SMSChannelRequest","serializeAws_restJson1SMSChannelRequest","serializeAws_restJson1UpdateSmsTemplateCommand","serializeAws_restJson1UpdateTemplateActiveVersionCommand","TemplateActiveVersionRequest","serializeAws_restJson1TemplateActiveVersionRequest","serializeAws_restJson1UpdateVoiceChannelCommand","VoiceChannelRequest","serializeAws_restJson1VoiceChannelRequest","serializeAws_restJson1UpdateVoiceTemplateCommand","deserializeAws_restJson1CreateAppCommand","output","statusCode","deserializeAws_restJson1CreateAppCommandError","contents","$metadata","deserializeMetadata","ApplicationResponse","parseBody","data","deserializeAws_restJson1ApplicationResponse","Promise","resolve","parsedOutput","_k","_l","errorCode","loadRestJsonErrorCode","deserializeAws_restJson1BadRequestExceptionResponse","response","name","deserializeAws_restJson1ForbiddenExceptionResponse","deserializeAws_restJson1InternalServerErrorExceptionResponse","deserializeAws_restJson1MethodNotAllowedExceptionResponse","deserializeAws_restJson1NotFoundExceptionResponse","deserializeAws_restJson1PayloadTooLargeExceptionResponse","deserializeAws_restJson1TooManyRequestsExceptionResponse","parsedBody","code","Code","__assign","message","Message","$fault","reject","Object","assign","deserializeAws_restJson1CreateCampaignCommand","deserializeAws_restJson1CreateCampaignCommandError","CampaignResponse","deserializeAws_restJson1CampaignResponse","deserializeAws_restJson1CreateEmailTemplateCommand","deserializeAws_restJson1CreateEmailTemplateCommandError","CreateTemplateMessageBody","deserializeAws_restJson1CreateTemplateMessageBody","_h","_j","deserializeAws_restJson1CreateExportJobCommand","deserializeAws_restJson1CreateExportJobCommandError","ExportJobResponse","deserializeAws_restJson1ExportJobResponse","deserializeAws_restJson1CreateImportJobCommand","deserializeAws_restJson1CreateImportJobCommandError","ImportJobResponse","deserializeAws_restJson1ImportJobResponse","deserializeAws_restJson1CreateJourneyCommand","deserializeAws_restJson1CreateJourneyCommandError","JourneyResponse","deserializeAws_restJson1JourneyResponse","deserializeAws_restJson1CreatePushTemplateCommand","deserializeAws_restJson1CreatePushTemplateCommandError","deserializeAws_restJson1CreateRecommenderConfigurationCommand","deserializeAws_restJson1CreateRecommenderConfigurationCommandError","RecommenderConfigurationResponse","deserializeAws_restJson1RecommenderConfigurationResponse","deserializeAws_restJson1CreateSegmentCommand","deserializeAws_restJson1CreateSegmentCommandError","SegmentResponse","deserializeAws_restJson1SegmentResponse","deserializeAws_restJson1CreateSmsTemplateCommand","deserializeAws_restJson1CreateSmsTemplateCommandError","deserializeAws_restJson1CreateVoiceTemplateCommand","deserializeAws_restJson1CreateVoiceTemplateCommandError","deserializeAws_restJson1DeleteAdmChannelCommand","deserializeAws_restJson1DeleteAdmChannelCommandError","ADMChannelResponse","deserializeAws_restJson1ADMChannelResponse","deserializeAws_restJson1DeleteApnsChannelCommand","deserializeAws_restJson1DeleteApnsChannelCommandError","APNSChannelResponse","deserializeAws_restJson1APNSChannelResponse","deserializeAws_restJson1DeleteApnsSandboxChannelCommand","deserializeAws_restJson1DeleteApnsSandboxChannelCommandError","APNSSandboxChannelResponse","deserializeAws_restJson1APNSSandboxChannelResponse","deserializeAws_restJson1DeleteApnsVoipChannelCommand","deserializeAws_restJson1DeleteApnsVoipChannelCommandError","APNSVoipChannelResponse","deserializeAws_restJson1APNSVoipChannelResponse","deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommand","deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError","APNSVoipSandboxChannelResponse","deserializeAws_restJson1APNSVoipSandboxChannelResponse","deserializeAws_restJson1DeleteAppCommand","deserializeAws_restJson1DeleteAppCommandError","deserializeAws_restJson1DeleteBaiduChannelCommand","deserializeAws_restJson1DeleteBaiduChannelCommandError","BaiduChannelResponse","deserializeAws_restJson1BaiduChannelResponse","deserializeAws_restJson1DeleteCampaignCommand","deserializeAws_restJson1DeleteCampaignCommandError","deserializeAws_restJson1DeleteEmailChannelCommand","deserializeAws_restJson1DeleteEmailChannelCommandError","EmailChannelResponse","deserializeAws_restJson1EmailChannelResponse","deserializeAws_restJson1DeleteEmailTemplateCommand","deserializeAws_restJson1DeleteEmailTemplateCommandError","MessageBody","deserializeAws_restJson1MessageBody","deserializeAws_restJson1DeleteEndpointCommand","deserializeAws_restJson1DeleteEndpointCommandError","EndpointResponse","deserializeAws_restJson1EndpointResponse","deserializeAws_restJson1DeleteEventStreamCommand","deserializeAws_restJson1DeleteEventStreamCommandError","EventStream","deserializeAws_restJson1EventStream","deserializeAws_restJson1DeleteGcmChannelCommand","deserializeAws_restJson1DeleteGcmChannelCommandError","GCMChannelResponse","deserializeAws_restJson1GCMChannelResponse","deserializeAws_restJson1DeleteJourneyCommand","deserializeAws_restJson1DeleteJourneyCommandError","deserializeAws_restJson1DeletePushTemplateCommand","deserializeAws_restJson1DeletePushTemplateCommandError","deserializeAws_restJson1DeleteRecommenderConfigurationCommand","deserializeAws_restJson1DeleteRecommenderConfigurationCommandError","deserializeAws_restJson1DeleteSegmentCommand","deserializeAws_restJson1DeleteSegmentCommandError","deserializeAws_restJson1DeleteSmsChannelCommand","deserializeAws_restJson1DeleteSmsChannelCommandError","SMSChannelResponse","deserializeAws_restJson1SMSChannelResponse","deserializeAws_restJson1DeleteSmsTemplateCommand","deserializeAws_restJson1DeleteSmsTemplateCommandError","deserializeAws_restJson1DeleteUserEndpointsCommand","deserializeAws_restJson1DeleteUserEndpointsCommandError","EndpointsResponse","deserializeAws_restJson1EndpointsResponse","deserializeAws_restJson1DeleteVoiceChannelCommand","deserializeAws_restJson1DeleteVoiceChannelCommandError","VoiceChannelResponse","deserializeAws_restJson1VoiceChannelResponse","deserializeAws_restJson1DeleteVoiceTemplateCommand","deserializeAws_restJson1DeleteVoiceTemplateCommandError","deserializeAws_restJson1GetAdmChannelCommand","deserializeAws_restJson1GetAdmChannelCommandError","deserializeAws_restJson1GetApnsChannelCommand","deserializeAws_restJson1GetApnsChannelCommandError","deserializeAws_restJson1GetApnsSandboxChannelCommand","deserializeAws_restJson1GetApnsSandboxChannelCommandError","deserializeAws_restJson1GetApnsVoipChannelCommand","deserializeAws_restJson1GetApnsVoipChannelCommandError","deserializeAws_restJson1GetApnsVoipSandboxChannelCommand","deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError","deserializeAws_restJson1GetAppCommand","deserializeAws_restJson1GetAppCommandError","deserializeAws_restJson1GetApplicationDateRangeKpiCommand","deserializeAws_restJson1GetApplicationDateRangeKpiCommandError","ApplicationDateRangeKpiResponse","deserializeAws_restJson1ApplicationDateRangeKpiResponse","deserializeAws_restJson1GetApplicationSettingsCommand","deserializeAws_restJson1GetApplicationSettingsCommandError","ApplicationSettingsResource","deserializeAws_restJson1ApplicationSettingsResource","deserializeAws_restJson1GetAppsCommand","deserializeAws_restJson1GetAppsCommandError","ApplicationsResponse","deserializeAws_restJson1ApplicationsResponse","deserializeAws_restJson1GetBaiduChannelCommand","deserializeAws_restJson1GetBaiduChannelCommandError","deserializeAws_restJson1GetCampaignCommand","deserializeAws_restJson1GetCampaignCommandError","deserializeAws_restJson1GetCampaignActivitiesCommand","deserializeAws_restJson1GetCampaignActivitiesCommandError","ActivitiesResponse","deserializeAws_restJson1ActivitiesResponse","deserializeAws_restJson1GetCampaignDateRangeKpiCommand","deserializeAws_restJson1GetCampaignDateRangeKpiCommandError","CampaignDateRangeKpiResponse","deserializeAws_restJson1CampaignDateRangeKpiResponse","deserializeAws_restJson1GetCampaignsCommand","deserializeAws_restJson1GetCampaignsCommandError","CampaignsResponse","deserializeAws_restJson1CampaignsResponse","deserializeAws_restJson1GetCampaignVersionCommand","deserializeAws_restJson1GetCampaignVersionCommandError","deserializeAws_restJson1GetCampaignVersionsCommand","deserializeAws_restJson1GetCampaignVersionsCommandError","deserializeAws_restJson1GetChannelsCommand","deserializeAws_restJson1GetChannelsCommandError","ChannelsResponse","deserializeAws_restJson1ChannelsResponse","deserializeAws_restJson1GetEmailChannelCommand","deserializeAws_restJson1GetEmailChannelCommandError","deserializeAws_restJson1GetEmailTemplateCommand","deserializeAws_restJson1GetEmailTemplateCommandError","EmailTemplateResponse","deserializeAws_restJson1EmailTemplateResponse","deserializeAws_restJson1GetEndpointCommand","deserializeAws_restJson1GetEndpointCommandError","deserializeAws_restJson1GetEventStreamCommand","deserializeAws_restJson1GetEventStreamCommandError","deserializeAws_restJson1GetExportJobCommand","deserializeAws_restJson1GetExportJobCommandError","deserializeAws_restJson1GetExportJobsCommand","deserializeAws_restJson1GetExportJobsCommandError","ExportJobsResponse","deserializeAws_restJson1ExportJobsResponse","deserializeAws_restJson1GetGcmChannelCommand","deserializeAws_restJson1GetGcmChannelCommandError","deserializeAws_restJson1GetImportJobCommand","deserializeAws_restJson1GetImportJobCommandError","deserializeAws_restJson1GetImportJobsCommand","deserializeAws_restJson1GetImportJobsCommandError","ImportJobsResponse","deserializeAws_restJson1ImportJobsResponse","deserializeAws_restJson1GetJourneyCommand","deserializeAws_restJson1GetJourneyCommandError","deserializeAws_restJson1GetJourneyDateRangeKpiCommand","deserializeAws_restJson1GetJourneyDateRangeKpiCommandError","JourneyDateRangeKpiResponse","deserializeAws_restJson1JourneyDateRangeKpiResponse","deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand","deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError","JourneyExecutionActivityMetricsResponse","deserializeAws_restJson1JourneyExecutionActivityMetricsResponse","deserializeAws_restJson1GetJourneyExecutionMetricsCommand","deserializeAws_restJson1GetJourneyExecutionMetricsCommandError","JourneyExecutionMetricsResponse","deserializeAws_restJson1JourneyExecutionMetricsResponse","deserializeAws_restJson1GetPushTemplateCommand","deserializeAws_restJson1GetPushTemplateCommandError","PushNotificationTemplateResponse","deserializeAws_restJson1PushNotificationTemplateResponse","deserializeAws_restJson1GetRecommenderConfigurationCommand","deserializeAws_restJson1GetRecommenderConfigurationCommandError","deserializeAws_restJson1GetRecommenderConfigurationsCommand","deserializeAws_restJson1GetRecommenderConfigurationsCommandError","ListRecommenderConfigurationsResponse","deserializeAws_restJson1ListRecommenderConfigurationsResponse","deserializeAws_restJson1GetSegmentCommand","deserializeAws_restJson1GetSegmentCommandError","deserializeAws_restJson1GetSegmentExportJobsCommand","deserializeAws_restJson1GetSegmentExportJobsCommandError","deserializeAws_restJson1GetSegmentImportJobsCommand","deserializeAws_restJson1GetSegmentImportJobsCommandError","deserializeAws_restJson1GetSegmentsCommand","deserializeAws_restJson1GetSegmentsCommandError","SegmentsResponse","deserializeAws_restJson1SegmentsResponse","deserializeAws_restJson1GetSegmentVersionCommand","deserializeAws_restJson1GetSegmentVersionCommandError","deserializeAws_restJson1GetSegmentVersionsCommand","deserializeAws_restJson1GetSegmentVersionsCommandError","deserializeAws_restJson1GetSmsChannelCommand","deserializeAws_restJson1GetSmsChannelCommandError","deserializeAws_restJson1GetSmsTemplateCommand","deserializeAws_restJson1GetSmsTemplateCommandError","SMSTemplateResponse","deserializeAws_restJson1SMSTemplateResponse","deserializeAws_restJson1GetUserEndpointsCommand","deserializeAws_restJson1GetUserEndpointsCommandError","deserializeAws_restJson1GetVoiceChannelCommand","deserializeAws_restJson1GetVoiceChannelCommandError","deserializeAws_restJson1GetVoiceTemplateCommand","deserializeAws_restJson1GetVoiceTemplateCommandError","VoiceTemplateResponse","deserializeAws_restJson1VoiceTemplateResponse","deserializeAws_restJson1ListJourneysCommand","deserializeAws_restJson1ListJourneysCommandError","JourneysResponse","deserializeAws_restJson1JourneysResponse","deserializeAws_restJson1ListTagsForResourceCommand","deserializeAws_restJson1ListTagsForResourceCommandError","deserializeAws_restJson1TagsModel","deserializeAws_restJson1ListTemplatesCommand","deserializeAws_restJson1ListTemplatesCommandError","TemplatesResponse","deserializeAws_restJson1TemplatesResponse","deserializeAws_restJson1ListTemplateVersionsCommand","deserializeAws_restJson1ListTemplateVersionsCommandError","TemplateVersionsResponse","deserializeAws_restJson1TemplateVersionsResponse","deserializeAws_restJson1PhoneNumberValidateCommand","deserializeAws_restJson1PhoneNumberValidateCommandError","NumberValidateResponse","deserializeAws_restJson1NumberValidateResponse","deserializeAws_restJson1PutEventsCommand","deserializeAws_restJson1PutEventsCommandError","EventsResponse","deserializeAws_restJson1EventsResponse","deserializeAws_restJson1PutEventStreamCommand","deserializeAws_restJson1PutEventStreamCommandError","deserializeAws_restJson1RemoveAttributesCommand","deserializeAws_restJson1RemoveAttributesCommandError","AttributesResource","deserializeAws_restJson1AttributesResource","deserializeAws_restJson1SendMessagesCommand","deserializeAws_restJson1SendMessagesCommandError","MessageResponse","deserializeAws_restJson1MessageResponse","deserializeAws_restJson1SendUsersMessagesCommand","deserializeAws_restJson1SendUsersMessagesCommandError","SendUsersMessageResponse","deserializeAws_restJson1SendUsersMessageResponse","deserializeAws_restJson1TagResourceCommand","deserializeAws_restJson1TagResourceCommandError","collectBody","deserializeAws_restJson1UntagResourceCommand","deserializeAws_restJson1UntagResourceCommandError","deserializeAws_restJson1UpdateAdmChannelCommand","deserializeAws_restJson1UpdateAdmChannelCommandError","deserializeAws_restJson1UpdateApnsChannelCommand","deserializeAws_restJson1UpdateApnsChannelCommandError","deserializeAws_restJson1UpdateApnsSandboxChannelCommand","deserializeAws_restJson1UpdateApnsSandboxChannelCommandError","deserializeAws_restJson1UpdateApnsVoipChannelCommand","deserializeAws_restJson1UpdateApnsVoipChannelCommandError","deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommand","deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError","deserializeAws_restJson1UpdateApplicationSettingsCommand","deserializeAws_restJson1UpdateApplicationSettingsCommandError","deserializeAws_restJson1UpdateBaiduChannelCommand","deserializeAws_restJson1UpdateBaiduChannelCommandError","deserializeAws_restJson1UpdateCampaignCommand","deserializeAws_restJson1UpdateCampaignCommandError","deserializeAws_restJson1UpdateEmailChannelCommand","deserializeAws_restJson1UpdateEmailChannelCommandError","deserializeAws_restJson1UpdateEmailTemplateCommand","deserializeAws_restJson1UpdateEmailTemplateCommandError","deserializeAws_restJson1UpdateEndpointCommand","deserializeAws_restJson1UpdateEndpointCommandError","deserializeAws_restJson1UpdateEndpointsBatchCommand","deserializeAws_restJson1UpdateEndpointsBatchCommandError","deserializeAws_restJson1UpdateGcmChannelCommand","deserializeAws_restJson1UpdateGcmChannelCommandError","deserializeAws_restJson1UpdateJourneyCommand","deserializeAws_restJson1UpdateJourneyCommandError","_m","deserializeAws_restJson1ConflictExceptionResponse","deserializeAws_restJson1UpdateJourneyStateCommand","deserializeAws_restJson1UpdateJourneyStateCommandError","deserializeAws_restJson1UpdatePushTemplateCommand","deserializeAws_restJson1UpdatePushTemplateCommandError","deserializeAws_restJson1UpdateRecommenderConfigurationCommand","deserializeAws_restJson1UpdateRecommenderConfigurationCommandError","deserializeAws_restJson1UpdateSegmentCommand","deserializeAws_restJson1UpdateSegmentCommandError","deserializeAws_restJson1UpdateSmsChannelCommand","deserializeAws_restJson1UpdateSmsChannelCommandError","deserializeAws_restJson1UpdateSmsTemplateCommand","deserializeAws_restJson1UpdateSmsTemplateCommandError","deserializeAws_restJson1UpdateTemplateActiveVersionCommand","deserializeAws_restJson1UpdateTemplateActiveVersionCommandError","deserializeAws_restJson1UpdateVoiceChannelCommand","deserializeAws_restJson1UpdateVoiceChannelCommandError","deserializeAws_restJson1UpdateVoiceTemplateCommand","deserializeAws_restJson1UpdateVoiceTemplateCommandError","RequestID","serializeAws_restJson1Activity","CUSTOM","serializeAws_restJson1CustomMessageActivity","ConditionalSplit","serializeAws_restJson1ConditionalSplitActivity","Description","EMAIL","serializeAws_restJson1EmailMessageActivity","Holdout","serializeAws_restJson1HoldoutActivity","MultiCondition","serializeAws_restJson1MultiConditionalSplitActivity","PUSH","serializeAws_restJson1PushMessageActivity","RandomSplit","serializeAws_restJson1RandomSplitActivity","SMS","serializeAws_restJson1SMSMessageActivity","Wait","serializeAws_restJson1WaitActivity","serializeAws_restJson1AddressConfiguration","BodyOverride","ChannelType","Context","serializeAws_restJson1MapOf__string","RawContent","Substitutions","serializeAws_restJson1MapOfListOf__string","TitleOverride","ClientId","ClientSecret","Enabled","serializeAws_restJson1ADMMessage","Action","Body","ConsolidationKey","Data","ExpiresAfter","IconReference","ImageIconUrl","ImageUrl","MD5","SilentPush","SmallImageIconUrl","Sound","Title","Url","serializeAws_restJson1AndroidPushNotificationTemplate","BundleId","Certificate","DefaultAuthenticationMethod","PrivateKey","TeamId","TokenKey","TokenKeyId","serializeAws_restJson1APNSMessage","APNSPushType","Badge","Category","CollapseId","MediaUrl","PreferredAuthenticationMethod","Priority","ThreadId","TimeToLive","serializeAws_restJson1APNSPushNotificationTemplate","serializeAws_restJson1AttributeDimension","Values","serializeAws_restJson1ListOf__string","ApiKey","SecretKey","serializeAws_restJson1BaiduMessage","serializeAws_restJson1CampaignCustomMessage","serializeAws_restJson1CampaignEmailMessage","FromAddress","HtmlBody","serializeAws_restJson1CampaignEventFilter","Dimensions","serializeAws_restJson1EventDimensions","FilterType","serializeAws_restJson1CampaignHook","LambdaFunctionName","Mode","WebUrl","serializeAws_restJson1CampaignLimits","Daily","MaximumDuration","MessagesPerSecond","Total","serializeAws_restJson1CampaignSmsMessage","MessageType","SenderId","serializeAws_restJson1Condition","Conditions","serializeAws_restJson1ListOfSimpleCondition","Operator","Condition","EvaluationWaitTime","serializeAws_restJson1WaitTime","FalseActivity","TrueActivity","Name","tags","Attributes","RecommendationProviderIdType","RecommendationProviderRoleArn","RecommendationProviderUri","RecommendationTransformerUri","RecommendationsDisplayName","RecommendationsPerMessage","serializeAws_restJson1CustomDeliveryConfiguration","DeliveryUri","EndpointTypes","serializeAws_restJson1ListOf__EndpointTypesElement","MessageConfig","serializeAws_restJson1JourneyCustomMessage","NextActivity","TemplateVersion","serializeAws_restJson1DefaultMessage","serializeAws_restJson1DefaultPushNotificationMessage","serializeAws_restJson1DefaultPushNotificationTemplate","serializeAws_restJson1DirectMessageConfiguration","ADMMessage","APNSMessage","BaiduMessage","DefaultMessage","DefaultPushNotificationMessage","EmailMessage","serializeAws_restJson1EmailMessage","GCMMessage","serializeAws_restJson1GCMMessage","SMSMessage","serializeAws_restJson1SMSMessage","VoiceMessage","serializeAws_restJson1VoiceMessage","ConfigurationSet","Identity","RoleArn","FeedbackForwardingAddress","RawEmail","serializeAws_restJson1RawEmail","ReplyToAddresses","SimpleEmail","serializeAws_restJson1SimpleEmail","serializeAws_restJson1JourneyEmailMessage","DefaultSubstitutions","HtmlPart","Subject","TemplateDescription","TextPart","serializeAws_restJson1EndpointBatchItem","Address","Demographic","serializeAws_restJson1EndpointDemographic","EffectiveDate","EndpointStatus","Id","Location","serializeAws_restJson1EndpointLocation","Metrics","serializeAws_restJson1MapOf__double","OptOut","RequestId","User","serializeAws_restJson1EndpointUser","Item","serializeAws_restJson1ListOfEndpointBatchItem","AppVersion","Locale","Make","Model","ModelVersion","Platform","PlatformVersion","Timezone","City","Country","Latitude","Longitude","PostalCode","Region","serializeAws_restJson1EndpointSendConfiguration","UserAttributes","serializeAws_restJson1Event","AppPackageName","AppTitle","AppVersionCode","ClientSdkVersion","EventType","SdkName","Session","serializeAws_restJson1Session","Timestamp","serializeAws_restJson1EventCondition","MessageActivity","serializeAws_restJson1MapOfAttributeDimension","serializeAws_restJson1SetDimension","serializeAws_restJson1MapOfMetricDimension","serializeAws_restJson1EventFilter","serializeAws_restJson1EventsBatch","Endpoint","serializeAws_restJson1PublicEndpoint","Events","serializeAws_restJson1MapOfEvent","BatchItem","serializeAws_restJson1MapOfEventsBatch","serializeAws_restJson1EventStartCondition","EventFilter","S3UrlPrefix","SegmentVersion","CollapseKey","RestrictedPackageName","serializeAws_restJson1GPSCoordinates","serializeAws_restJson1GPSPointDimension","Coordinates","RangeInKilometers","Percentage","DefineSegment","ExternalId","Format","RegisterEndpoints","S3Url","SegmentName","serializeAws_restJson1JourneyLimits","DailyCap","EndpointReentryCap","serializeAws_restJson1JourneyPushMessage","serializeAws_restJson1JourneySchedule","serializeAws_restJson1JourneySMSMessage","State","filter","e","entry","serializeAws_restJson1ListOfMultiConditionalBranch","serializeAws_restJson1MultiConditionalBranch","serializeAws_restJson1ListOfRandomSplitEntry","serializeAws_restJson1RandomSplitEntry","serializeAws_restJson1ListOfSegmentDimensions","serializeAws_restJson1SegmentDimensions","serializeAws_restJson1ListOfSegmentGroup","serializeAws_restJson1SegmentGroup","serializeAws_restJson1ListOfSegmentReference","serializeAws_restJson1SegmentReference","serializeAws_restJson1SimpleCondition","serializeAws_restJson1ListOfWriteTreatmentResource","serializeAws_restJson1WriteTreatmentResource","entries","reduce","acc","key","value","serializeAws_restJson1MapOfActivity","serializeAws_restJson1MapOfAddressConfiguration","serializeAws_restJson1MapOfEndpointSendConfiguration","serializeAws_restJson1MetricDimension","serializeAws_restJson1Message","ImageSmallIconUrl","JsonBody","serializeAws_restJson1MessageConfiguration","CustomMessage","Addresses","Endpoints","MessageConfiguration","TemplateConfiguration","serializeAws_restJson1TemplateConfiguration","TraceId","ComparisonOperator","Value","Branches","DefaultActivity","IsoCountryCode","PhoneNumber","ADM","APNS","Baidu","Default","GCM","serializeAws_restJson1QuietTime","End","Start","base64Encoder","serializeAws_restJson1RecencyDimension","Duration","RecencyType","serializeAws_restJson1Schedule","Frequency","IsLocalTime","QuietTime","serializeAws_restJson1SegmentBehaviors","Recency","serializeAws_restJson1SegmentCondition","serializeAws_restJson1SegmentDemographics","Channel","DeviceType","Behavior","serializeAws_restJson1SegmentLocation","SourceSegments","SourceType","Type","serializeAws_restJson1SegmentGroupList","Groups","Include","GPSPoint","Users","StartTimestamp","StopTimestamp","DimensionType","EventCondition","SegmentCondition","SegmentDimensions","segmentDimensions","serializeAws_restJson1SimpleEmailPart","Charset","ShortCode","Keyword","OriginationNumber","serializeAws_restJson1StartCondition","EventStartCondition","SegmentStartCondition","serializeAws_restJson1Template","EmailTemplate","PushTemplate","SMSTemplate","VoiceTemplate","Blacklist","LanguageCode","VoiceId","WaitTime","WaitFor","WaitUntil","CampaignHook","CloudWatchMetricsEnabled","EventTaggingEnabled","Limits","AdditionalTreatments","CustomDeliveryConfiguration","HoldoutPercent","Hook","IsPaused","Schedule","TreatmentDescription","TreatmentName","DestinationStreamArn","Activities","CreationDate","LastModifiedDate","LocalTime","RefreshFrequency","StartActivity","StartCondition","SegmentGroups","SizePercent","deserializeAws_restJson1ListOfActivityResponse","deserializeAws_restJson1Activity","deserializeAws_restJson1CustomMessageActivity","deserializeAws_restJson1ConditionalSplitActivity","deserializeAws_restJson1EmailMessageActivity","deserializeAws_restJson1HoldoutActivity","deserializeAws_restJson1MultiConditionalSplitActivity","deserializeAws_restJson1PushMessageActivity","deserializeAws_restJson1RandomSplitActivity","deserializeAws_restJson1SMSMessageActivity","deserializeAws_restJson1WaitActivity","deserializeAws_restJson1ActivityResponse","Result","ScheduledStart","SuccessfulEndpointCount","TimezonesCompletedCount","TimezonesTotalCount","TotalEndpointCount","TreatmentId","HasCredential","IsArchived","LastModifiedBy","deserializeAws_restJson1AndroidPushNotificationTemplate","HasTokenKey","deserializeAws_restJson1APNSPushNotificationTemplate","Date","KpiResult","deserializeAws_restJson1BaseKpiResult","Arn","deserializeAws_restJson1MapOf__string","deserializeAws_restJson1CampaignHook","deserializeAws_restJson1CampaignLimits","deserializeAws_restJson1QuietTime","deserializeAws_restJson1ListOfApplicationResponse","deserializeAws_restJson1AttributeDimension","deserializeAws_restJson1ListOf__string","Credential","Rows","deserializeAws_restJson1ListOfResultRow","deserializeAws_restJson1CampaignCustomMessage","deserializeAws_restJson1CampaignEmailMessage","deserializeAws_restJson1CampaignEventFilter","deserializeAws_restJson1EventDimensions","deserializeAws_restJson1ListOfTreatmentResource","deserializeAws_restJson1CustomDeliveryConfiguration","DefaultState","deserializeAws_restJson1CampaignState","deserializeAws_restJson1MessageConfiguration","deserializeAws_restJson1Schedule","deserializeAws_restJson1TemplateConfiguration","deserializeAws_restJson1CampaignSmsMessage","deserializeAws_restJson1ListOfCampaignResponse","CampaignStatus","deserializeAws_restJson1ChannelResponse","Channels","deserializeAws_restJson1MapOfChannelResponse","deserializeAws_restJson1Condition","deserializeAws_restJson1ListOfSimpleCondition","deserializeAws_restJson1WaitTime","deserializeAws_restJson1ListOf__EndpointTypesElement","deserializeAws_restJson1JourneyCustomMessage","deserializeAws_restJson1DefaultPushNotificationTemplate","deserializeAws_restJson1JourneyEmailMessage","deserializeAws_restJson1EndpointDemographic","deserializeAws_restJson1EndpointItemResponse","StatusCode","deserializeAws_restJson1EndpointLocation","deserializeAws_restJson1EndpointMessageResult","DeliveryStatus","MessageId","StatusMessage","UpdatedToken","deserializeAws_restJson1MapOfListOf__string","CohortId","deserializeAws_restJson1MapOf__double","deserializeAws_restJson1EndpointUser","deserializeAws_restJson1ListOfEndpointResponse","deserializeAws_restJson1EventCondition","deserializeAws_restJson1MapOfAttributeDimension","deserializeAws_restJson1SetDimension","deserializeAws_restJson1MapOfMetricDimension","deserializeAws_restJson1EventFilter","deserializeAws_restJson1EventItemResponse","Results","deserializeAws_restJson1MapOfItemResponse","deserializeAws_restJson1EventStartCondition","LastUpdatedBy","deserializeAws_restJson1ExportJobResource","CompletedPieces","CompletionDate","Definition","FailedPieces","Failures","JobStatus","TotalFailures","TotalPieces","TotalProcessed","deserializeAws_restJson1ListOfExportJobResponse","deserializeAws_restJson1GPSCoordinates","deserializeAws_restJson1GPSPointDimension","deserializeAws_restJson1ImportJobResource","deserializeAws_restJson1ListOfImportJobResponse","deserializeAws_restJson1ItemResponse","EndpointItemResponse","EventsItemResponse","deserializeAws_restJson1MapOfEventItemResponse","ActivityType","LastEvaluatedTime","deserializeAws_restJson1JourneyLimits","deserializeAws_restJson1JourneyPushMessage","deserializeAws_restJson1MapOfActivity","deserializeAws_restJson1JourneySchedule","deserializeAws_restJson1StartCondition","deserializeAws_restJson1JourneySMSMessage","deserializeAws_restJson1ListOfJourneyResponse","deserializeAws_restJson1ListOfMultiConditionalBranch","deserializeAws_restJson1MultiConditionalBranch","deserializeAws_restJson1ListOfRandomSplitEntry","deserializeAws_restJson1RandomSplitEntry","deserializeAws_restJson1ListOfRecommenderConfigurationResponse","deserializeAws_restJson1ResultRow","deserializeAws_restJson1ListOfResultRowValue","deserializeAws_restJson1ResultRowValue","deserializeAws_restJson1ListOfSegmentDimensions","deserializeAws_restJson1SegmentDimensions","deserializeAws_restJson1ListOfSegmentGroup","deserializeAws_restJson1SegmentGroup","deserializeAws_restJson1ListOfSegmentReference","deserializeAws_restJson1SegmentReference","deserializeAws_restJson1ListOfSegmentResponse","deserializeAws_restJson1SimpleCondition","deserializeAws_restJson1ListOfTemplateResponse","deserializeAws_restJson1TemplateResponse","deserializeAws_restJson1ListOfTemplateVersionResponse","deserializeAws_restJson1TemplateVersionResponse","deserializeAws_restJson1TreatmentResource","deserializeAws_restJson1MapOf__integer","deserializeAws_restJson1MapOfEndpointMessageResult","deserializeAws_restJson1MapOfMapOfEndpointMessageResult","deserializeAws_restJson1MapOfMessageResult","deserializeAws_restJson1MessageResult","deserializeAws_restJson1MetricDimension","deserializeAws_restJson1Message","EndpointResult","Carrier","CleansedPhoneNumberE164","CleansedPhoneNumberNational","CountryCodeIso2","CountryCodeNumeric","County","OriginalCountryCodeIso2","OriginalPhoneNumber","PhoneType","PhoneTypeCode","ZipCode","deserializeAws_restJson1RecencyDimension","GroupedBys","Key","deserializeAws_restJson1SegmentBehaviors","deserializeAws_restJson1SegmentCondition","deserializeAws_restJson1SegmentDemographics","deserializeAws_restJson1SegmentLocation","deserializeAws_restJson1SegmentGroupList","deserializeAws_restJson1SegmentImportResource","ChannelCounts","Size","ImportDefinition","SegmentType","PromotionalMessagesPerSecond","TransactionalMessagesPerSecond","deserializeAws_restJson1Template","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","isSerializableHeaderValue","getOwnPropertyNames","includes","size","encoded","parse","findKey","object","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","headerKey"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\github\\resumeprojectsrepo\\resumeprojects\\EliteManaging\\node_modules\\@aws-sdk\\client-pinpoint\\protocols\\Aws_restJson1.ts"],"sourcesContent":["import { CreateAppCommandInput, CreateAppCommandOutput } from \"../commands/CreateAppCommand\";\nimport { CreateCampaignCommandInput, CreateCampaignCommandOutput } from \"../commands/CreateCampaignCommand\";\nimport {\n  CreateEmailTemplateCommandInput,\n  CreateEmailTemplateCommandOutput,\n} from \"../commands/CreateEmailTemplateCommand\";\nimport { CreateExportJobCommandInput, CreateExportJobCommandOutput } from \"../commands/CreateExportJobCommand\";\nimport { CreateImportJobCommandInput, CreateImportJobCommandOutput } from \"../commands/CreateImportJobCommand\";\nimport { CreateJourneyCommandInput, CreateJourneyCommandOutput } from \"../commands/CreateJourneyCommand\";\nimport { CreatePushTemplateCommandInput, CreatePushTemplateCommandOutput } from \"../commands/CreatePushTemplateCommand\";\nimport {\n  CreateRecommenderConfigurationCommandInput,\n  CreateRecommenderConfigurationCommandOutput,\n} from \"../commands/CreateRecommenderConfigurationCommand\";\nimport { CreateSegmentCommandInput, CreateSegmentCommandOutput } from \"../commands/CreateSegmentCommand\";\nimport { CreateSmsTemplateCommandInput, CreateSmsTemplateCommandOutput } from \"../commands/CreateSmsTemplateCommand\";\nimport {\n  CreateVoiceTemplateCommandInput,\n  CreateVoiceTemplateCommandOutput,\n} from \"../commands/CreateVoiceTemplateCommand\";\nimport { DeleteAdmChannelCommandInput, DeleteAdmChannelCommandOutput } from \"../commands/DeleteAdmChannelCommand\";\nimport { DeleteApnsChannelCommandInput, DeleteApnsChannelCommandOutput } from \"../commands/DeleteApnsChannelCommand\";\nimport {\n  DeleteApnsSandboxChannelCommandInput,\n  DeleteApnsSandboxChannelCommandOutput,\n} from \"../commands/DeleteApnsSandboxChannelCommand\";\nimport {\n  DeleteApnsVoipChannelCommandInput,\n  DeleteApnsVoipChannelCommandOutput,\n} from \"../commands/DeleteApnsVoipChannelCommand\";\nimport {\n  DeleteApnsVoipSandboxChannelCommandInput,\n  DeleteApnsVoipSandboxChannelCommandOutput,\n} from \"../commands/DeleteApnsVoipSandboxChannelCommand\";\nimport { DeleteAppCommandInput, DeleteAppCommandOutput } from \"../commands/DeleteAppCommand\";\nimport { DeleteBaiduChannelCommandInput, DeleteBaiduChannelCommandOutput } from \"../commands/DeleteBaiduChannelCommand\";\nimport { DeleteCampaignCommandInput, DeleteCampaignCommandOutput } from \"../commands/DeleteCampaignCommand\";\nimport { DeleteEmailChannelCommandInput, DeleteEmailChannelCommandOutput } from \"../commands/DeleteEmailChannelCommand\";\nimport {\n  DeleteEmailTemplateCommandInput,\n  DeleteEmailTemplateCommandOutput,\n} from \"../commands/DeleteEmailTemplateCommand\";\nimport { DeleteEndpointCommandInput, DeleteEndpointCommandOutput } from \"../commands/DeleteEndpointCommand\";\nimport { DeleteEventStreamCommandInput, DeleteEventStreamCommandOutput } from \"../commands/DeleteEventStreamCommand\";\nimport { DeleteGcmChannelCommandInput, DeleteGcmChannelCommandOutput } from \"../commands/DeleteGcmChannelCommand\";\nimport { DeleteJourneyCommandInput, DeleteJourneyCommandOutput } from \"../commands/DeleteJourneyCommand\";\nimport { DeletePushTemplateCommandInput, DeletePushTemplateCommandOutput } from \"../commands/DeletePushTemplateCommand\";\nimport {\n  DeleteRecommenderConfigurationCommandInput,\n  DeleteRecommenderConfigurationCommandOutput,\n} from \"../commands/DeleteRecommenderConfigurationCommand\";\nimport { DeleteSegmentCommandInput, DeleteSegmentCommandOutput } from \"../commands/DeleteSegmentCommand\";\nimport { DeleteSmsChannelCommandInput, DeleteSmsChannelCommandOutput } from \"../commands/DeleteSmsChannelCommand\";\nimport { DeleteSmsTemplateCommandInput, DeleteSmsTemplateCommandOutput } from \"../commands/DeleteSmsTemplateCommand\";\nimport {\n  DeleteUserEndpointsCommandInput,\n  DeleteUserEndpointsCommandOutput,\n} from \"../commands/DeleteUserEndpointsCommand\";\nimport { DeleteVoiceChannelCommandInput, DeleteVoiceChannelCommandOutput } from \"../commands/DeleteVoiceChannelCommand\";\nimport {\n  DeleteVoiceTemplateCommandInput,\n  DeleteVoiceTemplateCommandOutput,\n} from \"../commands/DeleteVoiceTemplateCommand\";\nimport { GetAdmChannelCommandInput, GetAdmChannelCommandOutput } from \"../commands/GetAdmChannelCommand\";\nimport { GetApnsChannelCommandInput, GetApnsChannelCommandOutput } from \"../commands/GetApnsChannelCommand\";\nimport {\n  GetApnsSandboxChannelCommandInput,\n  GetApnsSandboxChannelCommandOutput,\n} from \"../commands/GetApnsSandboxChannelCommand\";\nimport { GetApnsVoipChannelCommandInput, GetApnsVoipChannelCommandOutput } from \"../commands/GetApnsVoipChannelCommand\";\nimport {\n  GetApnsVoipSandboxChannelCommandInput,\n  GetApnsVoipSandboxChannelCommandOutput,\n} from \"../commands/GetApnsVoipSandboxChannelCommand\";\nimport { GetAppCommandInput, GetAppCommandOutput } from \"../commands/GetAppCommand\";\nimport {\n  GetApplicationDateRangeKpiCommandInput,\n  GetApplicationDateRangeKpiCommandOutput,\n} from \"../commands/GetApplicationDateRangeKpiCommand\";\nimport {\n  GetApplicationSettingsCommandInput,\n  GetApplicationSettingsCommandOutput,\n} from \"../commands/GetApplicationSettingsCommand\";\nimport { GetAppsCommandInput, GetAppsCommandOutput } from \"../commands/GetAppsCommand\";\nimport { GetBaiduChannelCommandInput, GetBaiduChannelCommandOutput } from \"../commands/GetBaiduChannelCommand\";\nimport {\n  GetCampaignActivitiesCommandInput,\n  GetCampaignActivitiesCommandOutput,\n} from \"../commands/GetCampaignActivitiesCommand\";\nimport { GetCampaignCommandInput, GetCampaignCommandOutput } from \"../commands/GetCampaignCommand\";\nimport {\n  GetCampaignDateRangeKpiCommandInput,\n  GetCampaignDateRangeKpiCommandOutput,\n} from \"../commands/GetCampaignDateRangeKpiCommand\";\nimport { GetCampaignVersionCommandInput, GetCampaignVersionCommandOutput } from \"../commands/GetCampaignVersionCommand\";\nimport {\n  GetCampaignVersionsCommandInput,\n  GetCampaignVersionsCommandOutput,\n} from \"../commands/GetCampaignVersionsCommand\";\nimport { GetCampaignsCommandInput, GetCampaignsCommandOutput } from \"../commands/GetCampaignsCommand\";\nimport { GetChannelsCommandInput, GetChannelsCommandOutput } from \"../commands/GetChannelsCommand\";\nimport { GetEmailChannelCommandInput, GetEmailChannelCommandOutput } from \"../commands/GetEmailChannelCommand\";\nimport { GetEmailTemplateCommandInput, GetEmailTemplateCommandOutput } from \"../commands/GetEmailTemplateCommand\";\nimport { GetEndpointCommandInput, GetEndpointCommandOutput } from \"../commands/GetEndpointCommand\";\nimport { GetEventStreamCommandInput, GetEventStreamCommandOutput } from \"../commands/GetEventStreamCommand\";\nimport { GetExportJobCommandInput, GetExportJobCommandOutput } from \"../commands/GetExportJobCommand\";\nimport { GetExportJobsCommandInput, GetExportJobsCommandOutput } from \"../commands/GetExportJobsCommand\";\nimport { GetGcmChannelCommandInput, GetGcmChannelCommandOutput } from \"../commands/GetGcmChannelCommand\";\nimport { GetImportJobCommandInput, GetImportJobCommandOutput } from \"../commands/GetImportJobCommand\";\nimport { GetImportJobsCommandInput, GetImportJobsCommandOutput } from \"../commands/GetImportJobsCommand\";\nimport { GetJourneyCommandInput, GetJourneyCommandOutput } from \"../commands/GetJourneyCommand\";\nimport {\n  GetJourneyDateRangeKpiCommandInput,\n  GetJourneyDateRangeKpiCommandOutput,\n} from \"../commands/GetJourneyDateRangeKpiCommand\";\nimport {\n  GetJourneyExecutionActivityMetricsCommandInput,\n  GetJourneyExecutionActivityMetricsCommandOutput,\n} from \"../commands/GetJourneyExecutionActivityMetricsCommand\";\nimport {\n  GetJourneyExecutionMetricsCommandInput,\n  GetJourneyExecutionMetricsCommandOutput,\n} from \"../commands/GetJourneyExecutionMetricsCommand\";\nimport { GetPushTemplateCommandInput, GetPushTemplateCommandOutput } from \"../commands/GetPushTemplateCommand\";\nimport {\n  GetRecommenderConfigurationCommandInput,\n  GetRecommenderConfigurationCommandOutput,\n} from \"../commands/GetRecommenderConfigurationCommand\";\nimport {\n  GetRecommenderConfigurationsCommandInput,\n  GetRecommenderConfigurationsCommandOutput,\n} from \"../commands/GetRecommenderConfigurationsCommand\";\nimport { GetSegmentCommandInput, GetSegmentCommandOutput } from \"../commands/GetSegmentCommand\";\nimport {\n  GetSegmentExportJobsCommandInput,\n  GetSegmentExportJobsCommandOutput,\n} from \"../commands/GetSegmentExportJobsCommand\";\nimport {\n  GetSegmentImportJobsCommandInput,\n  GetSegmentImportJobsCommandOutput,\n} from \"../commands/GetSegmentImportJobsCommand\";\nimport { GetSegmentVersionCommandInput, GetSegmentVersionCommandOutput } from \"../commands/GetSegmentVersionCommand\";\nimport { GetSegmentVersionsCommandInput, GetSegmentVersionsCommandOutput } from \"../commands/GetSegmentVersionsCommand\";\nimport { GetSegmentsCommandInput, GetSegmentsCommandOutput } from \"../commands/GetSegmentsCommand\";\nimport { GetSmsChannelCommandInput, GetSmsChannelCommandOutput } from \"../commands/GetSmsChannelCommand\";\nimport { GetSmsTemplateCommandInput, GetSmsTemplateCommandOutput } from \"../commands/GetSmsTemplateCommand\";\nimport { GetUserEndpointsCommandInput, GetUserEndpointsCommandOutput } from \"../commands/GetUserEndpointsCommand\";\nimport { GetVoiceChannelCommandInput, GetVoiceChannelCommandOutput } from \"../commands/GetVoiceChannelCommand\";\nimport { GetVoiceTemplateCommandInput, GetVoiceTemplateCommandOutput } from \"../commands/GetVoiceTemplateCommand\";\nimport { ListJourneysCommandInput, ListJourneysCommandOutput } from \"../commands/ListJourneysCommand\";\nimport {\n  ListTagsForResourceCommandInput,\n  ListTagsForResourceCommandOutput,\n} from \"../commands/ListTagsForResourceCommand\";\nimport {\n  ListTemplateVersionsCommandInput,\n  ListTemplateVersionsCommandOutput,\n} from \"../commands/ListTemplateVersionsCommand\";\nimport { ListTemplatesCommandInput, ListTemplatesCommandOutput } from \"../commands/ListTemplatesCommand\";\nimport {\n  PhoneNumberValidateCommandInput,\n  PhoneNumberValidateCommandOutput,\n} from \"../commands/PhoneNumberValidateCommand\";\nimport { PutEventStreamCommandInput, PutEventStreamCommandOutput } from \"../commands/PutEventStreamCommand\";\nimport { PutEventsCommandInput, PutEventsCommandOutput } from \"../commands/PutEventsCommand\";\nimport { RemoveAttributesCommandInput, RemoveAttributesCommandOutput } from \"../commands/RemoveAttributesCommand\";\nimport { SendMessagesCommandInput, SendMessagesCommandOutput } from \"../commands/SendMessagesCommand\";\nimport { SendUsersMessagesCommandInput, SendUsersMessagesCommandOutput } from \"../commands/SendUsersMessagesCommand\";\nimport { TagResourceCommandInput, TagResourceCommandOutput } from \"../commands/TagResourceCommand\";\nimport { UntagResourceCommandInput, UntagResourceCommandOutput } from \"../commands/UntagResourceCommand\";\nimport { UpdateAdmChannelCommandInput, UpdateAdmChannelCommandOutput } from \"../commands/UpdateAdmChannelCommand\";\nimport { UpdateApnsChannelCommandInput, UpdateApnsChannelCommandOutput } from \"../commands/UpdateApnsChannelCommand\";\nimport {\n  UpdateApnsSandboxChannelCommandInput,\n  UpdateApnsSandboxChannelCommandOutput,\n} from \"../commands/UpdateApnsSandboxChannelCommand\";\nimport {\n  UpdateApnsVoipChannelCommandInput,\n  UpdateApnsVoipChannelCommandOutput,\n} from \"../commands/UpdateApnsVoipChannelCommand\";\nimport {\n  UpdateApnsVoipSandboxChannelCommandInput,\n  UpdateApnsVoipSandboxChannelCommandOutput,\n} from \"../commands/UpdateApnsVoipSandboxChannelCommand\";\nimport {\n  UpdateApplicationSettingsCommandInput,\n  UpdateApplicationSettingsCommandOutput,\n} from \"../commands/UpdateApplicationSettingsCommand\";\nimport { UpdateBaiduChannelCommandInput, UpdateBaiduChannelCommandOutput } from \"../commands/UpdateBaiduChannelCommand\";\nimport { UpdateCampaignCommandInput, UpdateCampaignCommandOutput } from \"../commands/UpdateCampaignCommand\";\nimport { UpdateEmailChannelCommandInput, UpdateEmailChannelCommandOutput } from \"../commands/UpdateEmailChannelCommand\";\nimport {\n  UpdateEmailTemplateCommandInput,\n  UpdateEmailTemplateCommandOutput,\n} from \"../commands/UpdateEmailTemplateCommand\";\nimport { UpdateEndpointCommandInput, UpdateEndpointCommandOutput } from \"../commands/UpdateEndpointCommand\";\nimport {\n  UpdateEndpointsBatchCommandInput,\n  UpdateEndpointsBatchCommandOutput,\n} from \"../commands/UpdateEndpointsBatchCommand\";\nimport { UpdateGcmChannelCommandInput, UpdateGcmChannelCommandOutput } from \"../commands/UpdateGcmChannelCommand\";\nimport { UpdateJourneyCommandInput, UpdateJourneyCommandOutput } from \"../commands/UpdateJourneyCommand\";\nimport { UpdateJourneyStateCommandInput, UpdateJourneyStateCommandOutput } from \"../commands/UpdateJourneyStateCommand\";\nimport { UpdatePushTemplateCommandInput, UpdatePushTemplateCommandOutput } from \"../commands/UpdatePushTemplateCommand\";\nimport {\n  UpdateRecommenderConfigurationCommandInput,\n  UpdateRecommenderConfigurationCommandOutput,\n} from \"../commands/UpdateRecommenderConfigurationCommand\";\nimport { UpdateSegmentCommandInput, UpdateSegmentCommandOutput } from \"../commands/UpdateSegmentCommand\";\nimport { UpdateSmsChannelCommandInput, UpdateSmsChannelCommandOutput } from \"../commands/UpdateSmsChannelCommand\";\nimport { UpdateSmsTemplateCommandInput, UpdateSmsTemplateCommandOutput } from \"../commands/UpdateSmsTemplateCommand\";\nimport {\n  UpdateTemplateActiveVersionCommandInput,\n  UpdateTemplateActiveVersionCommandOutput,\n} from \"../commands/UpdateTemplateActiveVersionCommand\";\nimport { UpdateVoiceChannelCommandInput, UpdateVoiceChannelCommandOutput } from \"../commands/UpdateVoiceChannelCommand\";\nimport {\n  UpdateVoiceTemplateCommandInput,\n  UpdateVoiceTemplateCommandOutput,\n} from \"../commands/UpdateVoiceTemplateCommand\";\nimport {\n  ADMChannelRequest,\n  ADMChannelResponse,\n  ADMMessage,\n  APNSChannelRequest,\n  APNSChannelResponse,\n  APNSMessage,\n  APNSPushNotificationTemplate,\n  APNSSandboxChannelRequest,\n  APNSSandboxChannelResponse,\n  APNSVoipChannelRequest,\n  APNSVoipChannelResponse,\n  APNSVoipSandboxChannelRequest,\n  APNSVoipSandboxChannelResponse,\n  ActivitiesResponse,\n  Activity,\n  ActivityResponse,\n  AddressConfiguration,\n  AndroidPushNotificationTemplate,\n  ApplicationDateRangeKpiResponse,\n  ApplicationResponse,\n  ApplicationSettingsResource,\n  ApplicationsResponse,\n  AttributeDimension,\n  AttributesResource,\n  BadRequestException,\n  BaiduChannelRequest,\n  BaiduChannelResponse,\n  BaiduMessage,\n  BaseKpiResult,\n  CampaignCustomMessage,\n  CampaignDateRangeKpiResponse,\n  CampaignEmailMessage,\n  CampaignEventFilter,\n  CampaignHook,\n  CampaignLimits,\n  CampaignResponse,\n  CampaignSmsMessage,\n  CampaignState,\n  CampaignsResponse,\n  ChannelResponse,\n  ChannelsResponse,\n  Condition,\n  ConditionalSplitActivity,\n  ConflictException,\n  CreateApplicationRequest,\n  CreateRecommenderConfigurationShape,\n  CreateTemplateMessageBody,\n  CustomDeliveryConfiguration,\n  CustomMessageActivity,\n  DefaultMessage,\n  DefaultPushNotificationMessage,\n  DefaultPushNotificationTemplate,\n  DirectMessageConfiguration,\n  EmailChannelRequest,\n  EmailChannelResponse,\n  EmailMessage,\n  EmailMessageActivity,\n  EmailTemplateRequest,\n  EmailTemplateResponse,\n  EndpointBatchItem,\n  EndpointBatchRequest,\n  EndpointDemographic,\n  EndpointItemResponse,\n  EndpointLocation,\n  EndpointMessageResult,\n  EndpointRequest,\n  EndpointResponse,\n  EndpointSendConfiguration,\n  EndpointUser,\n  EndpointsResponse,\n  Event,\n  EventCondition,\n  EventDimensions,\n  EventFilter,\n  EventItemResponse,\n  EventStartCondition,\n  EventStream,\n  EventsBatch,\n  EventsRequest,\n  EventsResponse,\n  ExportJobRequest,\n  ExportJobResource,\n  ExportJobResponse,\n  ExportJobsResponse,\n  ForbiddenException,\n  GCMChannelRequest,\n  GCMChannelResponse,\n  GCMMessage,\n  GPSCoordinates,\n  GPSPointDimension,\n  HoldoutActivity,\n  ImportJobRequest,\n  ImportJobResource,\n  ImportJobResponse,\n  ImportJobsResponse,\n  InternalServerErrorException,\n  ItemResponse,\n  JourneyCustomMessage,\n  JourneyEmailMessage,\n  JourneyLimits,\n  JourneyPushMessage,\n  JourneyResponse,\n  JourneySMSMessage,\n  JourneySchedule,\n  Message,\n  MessageBody,\n  MessageConfiguration,\n  MethodNotAllowedException,\n  MetricDimension,\n  MultiConditionalBranch,\n  MultiConditionalSplitActivity,\n  NotFoundException,\n  PayloadTooLargeException,\n  PublicEndpoint,\n  PushMessageActivity,\n  PushNotificationTemplateRequest,\n  QuietTime,\n  RandomSplitActivity,\n  RandomSplitEntry,\n  RawEmail,\n  RecencyDimension,\n  RecommenderConfigurationResponse,\n  ResultRow,\n  ResultRowValue,\n  SMSChannelResponse,\n  SMSMessage,\n  SMSMessageActivity,\n  SMSTemplateRequest,\n  Schedule,\n  SegmentBehaviors,\n  SegmentCondition,\n  SegmentDemographics,\n  SegmentDimensions,\n  SegmentGroup,\n  SegmentGroupList,\n  SegmentImportResource,\n  SegmentLocation,\n  SegmentReference,\n  SegmentResponse,\n  Session,\n  SetDimension,\n  SimpleCondition,\n  SimpleEmail,\n  SimpleEmailPart,\n  StartCondition,\n  Template,\n  TemplateConfiguration,\n  TooManyRequestsException,\n  TreatmentResource,\n  VoiceChannelResponse,\n  VoiceMessage,\n  VoiceTemplateRequest,\n  WaitActivity,\n  WaitTime,\n  WriteCampaignRequest,\n  WriteJourneyRequest,\n  WriteSegmentRequest,\n  WriteTreatmentResource,\n  __EndpointTypesElement,\n} from \"../models/models_0\";\nimport {\n  JourneyDateRangeKpiResponse,\n  JourneyExecutionActivityMetricsResponse,\n  JourneyExecutionMetricsResponse,\n  JourneyStateRequest,\n  JourneysResponse,\n  ListRecommenderConfigurationsResponse,\n  MessageRequest,\n  MessageResponse,\n  MessageResult,\n  NumberValidateRequest,\n  NumberValidateResponse,\n  PushNotificationTemplateResponse,\n  SMSChannelRequest,\n  SMSTemplateResponse,\n  SegmentsResponse,\n  SendUsersMessageRequest,\n  SendUsersMessageResponse,\n  TagsModel,\n  TemplateActiveVersionRequest,\n  TemplateResponse,\n  TemplateVersionResponse,\n  TemplateVersionsResponse,\n  TemplatesResponse,\n  UpdateAttributesRequest,\n  UpdateRecommenderConfigurationShape,\n  VoiceChannelRequest,\n  VoiceTemplateResponse,\n  WriteApplicationSettingsRequest,\n  WriteEventStream,\n} from \"../models/models_1\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport {\n  SmithyException as __SmithyException,\n  extendedEncodeURIComponent as __extendedEncodeURIComponent,\n} from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_restJson1CreateAppCommand = async (\n  input: CreateAppCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps\";\n  let body: any;\n  if (input.CreateApplicationRequest !== undefined) {\n    body = serializeAws_restJson1CreateApplicationRequest(input.CreateApplicationRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateCampaignCommand = async (\n  input: CreateCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteCampaignRequest !== undefined) {\n    body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateEmailTemplateCommand = async (\n  input: CreateEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.EmailTemplateRequest !== undefined) {\n    body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateExportJobCommand = async (\n  input: CreateExportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.ExportJobRequest !== undefined) {\n    body = serializeAws_restJson1ExportJobRequest(input.ExportJobRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateImportJobCommand = async (\n  input: CreateImportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.ImportJobRequest !== undefined) {\n    body = serializeAws_restJson1ImportJobRequest(input.ImportJobRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateJourneyCommand = async (\n  input: CreateJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteJourneyRequest !== undefined) {\n    body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreatePushTemplateCommand = async (\n  input: CreatePushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.PushNotificationTemplateRequest !== undefined) {\n    body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateRecommenderConfigurationCommand = async (\n  input: CreateRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/recommenders\";\n  let body: any;\n  if (input.CreateRecommenderConfiguration !== undefined) {\n    body = serializeAws_restJson1CreateRecommenderConfigurationShape(input.CreateRecommenderConfiguration, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateSegmentCommand = async (\n  input: CreateSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteSegmentRequest !== undefined) {\n    body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateSmsTemplateCommand = async (\n  input: CreateSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.SMSTemplateRequest !== undefined) {\n    body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1CreateVoiceTemplateCommand = async (\n  input: CreateVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  let body: any;\n  if (input.VoiceTemplateRequest !== undefined) {\n    body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteAdmChannelCommand = async (\n  input: DeleteAdmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsChannelCommand = async (\n  input: DeleteApnsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsSandboxChannelCommand = async (\n  input: DeleteApnsSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsVoipChannelCommand = async (\n  input: DeleteApnsVoipChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = async (\n  input: DeleteApnsVoipSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteAppCommand = async (\n  input: DeleteAppCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteBaiduChannelCommand = async (\n  input: DeleteBaiduChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteCampaignCommand = async (\n  input: DeleteCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEmailChannelCommand = async (\n  input: DeleteEmailChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEmailTemplateCommand = async (\n  input: DeleteEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEndpointCommand = async (\n  input: DeleteEndpointCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.EndpointId !== undefined) {\n    const labelValue: string = input.EndpointId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteEventStreamCommand = async (\n  input: DeleteEventStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteGcmChannelCommand = async (\n  input: DeleteGcmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteJourneyCommand = async (\n  input: DeleteJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeletePushTemplateCommand = async (\n  input: DeletePushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteRecommenderConfigurationCommand = async (\n  input: DeleteRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n  if (input.RecommenderId !== undefined) {\n    const labelValue: string = input.RecommenderId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteSegmentCommand = async (\n  input: DeleteSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteSmsChannelCommand = async (\n  input: DeleteSmsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteSmsTemplateCommand = async (\n  input: DeleteSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteUserEndpointsCommand = async (\n  input: DeleteUserEndpointsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.UserId !== undefined) {\n    const labelValue: string = input.UserId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: UserId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteVoiceChannelCommand = async (\n  input: DeleteVoiceChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1DeleteVoiceTemplateCommand = async (\n  input: DeleteVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetAdmChannelCommand = async (\n  input: GetAdmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsChannelCommand = async (\n  input: GetApnsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsSandboxChannelCommand = async (\n  input: GetApnsSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsVoipChannelCommand = async (\n  input: GetApnsVoipChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApnsVoipSandboxChannelCommand = async (\n  input: GetApnsVoipSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetAppCommand = async (\n  input: GetAppCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApplicationDateRangeKpiCommand = async (\n  input: GetApplicationDateRangeKpiCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/kpis/daterange/{KpiName}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.KpiName !== undefined) {\n    const labelValue: string = input.KpiName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: KpiName.\");\n  }\n  const query: any = {\n    ...(input.EndTime !== undefined && { \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString() }),\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.StartTime !== undefined && {\n      \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString(),\n    }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetApplicationSettingsCommand = async (\n  input: GetApplicationSettingsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetAppsCommand = async (\n  input: GetAppsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps\";\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetBaiduChannelCommand = async (\n  input: GetBaiduChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignCommand = async (\n  input: GetCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignActivitiesCommand = async (\n  input: GetCampaignActivitiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/activities\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignDateRangeKpiCommand = async (\n  input: GetCampaignDateRangeKpiCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/kpis/daterange/{KpiName}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  if (input.KpiName !== undefined) {\n    const labelValue: string = input.KpiName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: KpiName.\");\n  }\n  const query: any = {\n    ...(input.EndTime !== undefined && { \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString() }),\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.StartTime !== undefined && {\n      \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString(),\n    }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignsCommand = async (\n  input: GetCampaignsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignVersionCommand = async (\n  input: GetCampaignVersionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions/{Version}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  if (input.Version !== undefined) {\n    const labelValue: string = input.Version;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Version.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Version.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetCampaignVersionsCommand = async (\n  input: GetCampaignVersionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetChannelsCommand = async (\n  input: GetChannelsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEmailChannelCommand = async (\n  input: GetEmailChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEmailTemplateCommand = async (\n  input: GetEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEndpointCommand = async (\n  input: GetEndpointCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.EndpointId !== undefined) {\n    const labelValue: string = input.EndpointId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetEventStreamCommand = async (\n  input: GetEventStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetExportJobCommand = async (\n  input: GetExportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export/{JobId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JobId !== undefined) {\n    const labelValue: string = input.JobId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JobId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetExportJobsCommand = async (\n  input: GetExportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/export\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetGcmChannelCommand = async (\n  input: GetGcmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetImportJobCommand = async (\n  input: GetImportJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import/{JobId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JobId !== undefined) {\n    const labelValue: string = input.JobId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JobId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JobId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JobId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetImportJobsCommand = async (\n  input: GetImportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/jobs/import\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyCommand = async (\n  input: GetJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyDateRangeKpiCommand = async (\n  input: GetJourneyDateRangeKpiCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/kpis/daterange/{KpiName}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  if (input.KpiName !== undefined) {\n    const labelValue: string = input.KpiName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: KpiName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{KpiName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: KpiName.\");\n  }\n  const query: any = {\n    ...(input.EndTime !== undefined && { \"end-time\": (input.EndTime.toISOString().split(\".\")[0] + \"Z\").toString() }),\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.StartTime !== undefined && {\n      \"start-time\": (input.StartTime.toISOString().split(\".\")[0] + \"Z\").toString(),\n    }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = async (\n  input: GetJourneyExecutionActivityMetricsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/activities/{JourneyActivityId}/execution-metrics\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyActivityId !== undefined) {\n    const labelValue: string = input.JourneyActivityId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyActivityId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyActivityId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyActivityId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetJourneyExecutionMetricsCommand = async (\n  input: GetJourneyExecutionMetricsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/execution-metrics\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetPushTemplateCommand = async (\n  input: GetPushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetRecommenderConfigurationCommand = async (\n  input: GetRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n  if (input.RecommenderId !== undefined) {\n    const labelValue: string = input.RecommenderId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetRecommenderConfigurationsCommand = async (\n  input: GetRecommenderConfigurationsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/recommenders\";\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentCommand = async (\n  input: GetSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentExportJobsCommand = async (\n  input: GetSegmentExportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/export\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentImportJobsCommand = async (\n  input: GetSegmentImportJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/import\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentsCommand = async (\n  input: GetSegmentsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentVersionCommand = async (\n  input: GetSegmentVersionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions/{Version}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  if (input.Version !== undefined) {\n    const labelValue: string = input.Version;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: Version.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{Version}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: Version.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSegmentVersionsCommand = async (\n  input: GetSegmentVersionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}/versions\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSmsChannelCommand = async (\n  input: GetSmsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetSmsTemplateCommand = async (\n  input: GetSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetUserEndpointsCommand = async (\n  input: GetUserEndpointsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/users/{UserId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.UserId !== undefined) {\n    const labelValue: string = input.UserId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: UserId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{UserId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: UserId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetVoiceChannelCommand = async (\n  input: GetVoiceChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1GetVoiceTemplateCommand = async (\n  input: GetVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListJourneysCommand = async (\n  input: ListJourneysCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  const query: any = {\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Token !== undefined && { token: input.Token }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListTagsForResourceCommand = async (\n  input: ListTagsForResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/tags/{ResourceArn}\";\n  if (input.ResourceArn !== undefined) {\n    const labelValue: string = input.ResourceArn;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n  }\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListTemplatesCommand = async (\n  input: ListTemplatesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates\";\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n    ...(input.Prefix !== undefined && { prefix: input.Prefix }),\n    ...(input.TemplateType !== undefined && { \"template-type\": input.TemplateType }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1ListTemplateVersionsCommand = async (\n  input: ListTemplateVersionsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/versions\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  if (input.TemplateType !== undefined) {\n    const labelValue: string = input.TemplateType;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n  }\n  const query: any = {\n    ...(input.NextToken !== undefined && { \"next-token\": input.NextToken }),\n    ...(input.PageSize !== undefined && { \"page-size\": input.PageSize }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"GET\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PhoneNumberValidateCommand = async (\n  input: PhoneNumberValidateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/phone/number/validate\";\n  let body: any;\n  if (input.NumberValidateRequest !== undefined) {\n    body = serializeAws_restJson1NumberValidateRequest(input.NumberValidateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PutEventsCommand = async (\n  input: PutEventsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/events\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.EventsRequest !== undefined) {\n    body = serializeAws_restJson1EventsRequest(input.EventsRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1PutEventStreamCommand = async (\n  input: PutEventStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/eventstream\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteEventStream !== undefined) {\n    body = serializeAws_restJson1WriteEventStream(input.WriteEventStream, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1RemoveAttributesCommand = async (\n  input: RemoveAttributesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/attributes/{AttributeType}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.AttributeType !== undefined) {\n    const labelValue: string = input.AttributeType;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: AttributeType.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{AttributeType}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: AttributeType.\");\n  }\n  let body: any;\n  if (input.UpdateAttributesRequest !== undefined) {\n    body = serializeAws_restJson1UpdateAttributesRequest(input.UpdateAttributesRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1SendMessagesCommand = async (\n  input: SendMessagesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/messages\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.MessageRequest !== undefined) {\n    body = serializeAws_restJson1MessageRequest(input.MessageRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1SendUsersMessagesCommand = async (\n  input: SendUsersMessagesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/users-messages\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.SendUsersMessageRequest !== undefined) {\n    body = serializeAws_restJson1SendUsersMessageRequest(input.SendUsersMessageRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1TagResourceCommand = async (\n  input: TagResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/tags/{ResourceArn}\";\n  if (input.ResourceArn !== undefined) {\n    const labelValue: string = input.ResourceArn;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n  }\n  let body: any;\n  if (input.TagsModel !== undefined) {\n    body = serializeAws_restJson1TagsModel(input.TagsModel, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UntagResourceCommand = async (\n  input: UntagResourceCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {};\n  let resolvedPath = \"/v1/tags/{ResourceArn}\";\n  if (input.ResourceArn !== undefined) {\n    const labelValue: string = input.ResourceArn;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ResourceArn.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ResourceArn}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ResourceArn.\");\n  }\n  const query: any = {\n    ...(input.TagKeys !== undefined && { tagKeys: (input.TagKeys || []).map((_entry) => _entry) }),\n  };\n  let body: any;\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"DELETE\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateAdmChannelCommand = async (\n  input: UpdateAdmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/adm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.ADMChannelRequest !== undefined) {\n    body = serializeAws_restJson1ADMChannelRequest(input.ADMChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsChannelCommand = async (\n  input: UpdateApnsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSChannelRequest(input.APNSChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsSandboxChannelCommand = async (\n  input: UpdateApnsSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSSandboxChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSSandboxChannelRequest(input.APNSSandboxChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsVoipChannelCommand = async (\n  input: UpdateApnsVoipChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSVoipChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSVoipChannelRequest(input.APNSVoipChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = async (\n  input: UpdateApnsVoipSandboxChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/apns_voip_sandbox\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.APNSVoipSandboxChannelRequest !== undefined) {\n    body = serializeAws_restJson1APNSVoipSandboxChannelRequest(input.APNSVoipSandboxChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateApplicationSettingsCommand = async (\n  input: UpdateApplicationSettingsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/settings\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.WriteApplicationSettingsRequest !== undefined) {\n    body = serializeAws_restJson1WriteApplicationSettingsRequest(input.WriteApplicationSettingsRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateBaiduChannelCommand = async (\n  input: UpdateBaiduChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/baidu\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.BaiduChannelRequest !== undefined) {\n    body = serializeAws_restJson1BaiduChannelRequest(input.BaiduChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateCampaignCommand = async (\n  input: UpdateCampaignCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/campaigns/{CampaignId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.CampaignId !== undefined) {\n    const labelValue: string = input.CampaignId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: CampaignId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{CampaignId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: CampaignId.\");\n  }\n  let body: any;\n  if (input.WriteCampaignRequest !== undefined) {\n    body = serializeAws_restJson1WriteCampaignRequest(input.WriteCampaignRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEmailChannelCommand = async (\n  input: UpdateEmailChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/email\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.EmailChannelRequest !== undefined) {\n    body = serializeAws_restJson1EmailChannelRequest(input.EmailChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEmailTemplateCommand = async (\n  input: UpdateEmailTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/email\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.EmailTemplateRequest !== undefined) {\n    body = serializeAws_restJson1EmailTemplateRequest(input.EmailTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEndpointCommand = async (\n  input: UpdateEndpointCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints/{EndpointId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.EndpointId !== undefined) {\n    const labelValue: string = input.EndpointId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: EndpointId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{EndpointId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: EndpointId.\");\n  }\n  let body: any;\n  if (input.EndpointRequest !== undefined) {\n    body = serializeAws_restJson1EndpointRequest(input.EndpointRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateEndpointsBatchCommand = async (\n  input: UpdateEndpointsBatchCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/endpoints\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.EndpointBatchRequest !== undefined) {\n    body = serializeAws_restJson1EndpointBatchRequest(input.EndpointBatchRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateGcmChannelCommand = async (\n  input: UpdateGcmChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/gcm\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.GCMChannelRequest !== undefined) {\n    body = serializeAws_restJson1GCMChannelRequest(input.GCMChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateJourneyCommand = async (\n  input: UpdateJourneyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  if (input.WriteJourneyRequest !== undefined) {\n    body = serializeAws_restJson1WriteJourneyRequest(input.WriteJourneyRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateJourneyStateCommand = async (\n  input: UpdateJourneyStateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/journeys/{JourneyId}/state\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.JourneyId !== undefined) {\n    const labelValue: string = input.JourneyId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: JourneyId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{JourneyId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: JourneyId.\");\n  }\n  let body: any;\n  if (input.JourneyStateRequest !== undefined) {\n    body = serializeAws_restJson1JourneyStateRequest(input.JourneyStateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdatePushTemplateCommand = async (\n  input: UpdatePushTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/push\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.PushNotificationTemplateRequest !== undefined) {\n    body = serializeAws_restJson1PushNotificationTemplateRequest(input.PushNotificationTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateRecommenderConfigurationCommand = async (\n  input: UpdateRecommenderConfigurationCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/recommenders/{RecommenderId}\";\n  if (input.RecommenderId !== undefined) {\n    const labelValue: string = input.RecommenderId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: RecommenderId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{RecommenderId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: RecommenderId.\");\n  }\n  let body: any;\n  if (input.UpdateRecommenderConfiguration !== undefined) {\n    body = serializeAws_restJson1UpdateRecommenderConfigurationShape(input.UpdateRecommenderConfiguration, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateSegmentCommand = async (\n  input: UpdateSegmentCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/segments/{SegmentId}\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  if (input.SegmentId !== undefined) {\n    const labelValue: string = input.SegmentId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: SegmentId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{SegmentId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: SegmentId.\");\n  }\n  let body: any;\n  if (input.WriteSegmentRequest !== undefined) {\n    body = serializeAws_restJson1WriteSegmentRequest(input.WriteSegmentRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateSmsChannelCommand = async (\n  input: UpdateSmsChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/sms\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.SMSChannelRequest !== undefined) {\n    body = serializeAws_restJson1SMSChannelRequest(input.SMSChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateSmsTemplateCommand = async (\n  input: UpdateSmsTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/sms\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.SMSTemplateRequest !== undefined) {\n    body = serializeAws_restJson1SMSTemplateRequest(input.SMSTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateTemplateActiveVersionCommand = async (\n  input: UpdateTemplateActiveVersionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/{TemplateType}/active-version\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  if (input.TemplateType !== undefined) {\n    const labelValue: string = input.TemplateType;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateType.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateType}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateType.\");\n  }\n  let body: any;\n  if (input.TemplateActiveVersionRequest !== undefined) {\n    body = serializeAws_restJson1TemplateActiveVersionRequest(input.TemplateActiveVersionRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateVoiceChannelCommand = async (\n  input: UpdateVoiceChannelCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/apps/{ApplicationId}/channels/voice\";\n  if (input.ApplicationId !== undefined) {\n    const labelValue: string = input.ApplicationId;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: ApplicationId.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{ApplicationId}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: ApplicationId.\");\n  }\n  let body: any;\n  if (input.VoiceChannelRequest !== undefined) {\n    body = serializeAws_restJson1VoiceChannelRequest(input.VoiceChannelRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    body,\n  });\n};\n\nexport const serializeAws_restJson1UpdateVoiceTemplateCommand = async (\n  input: UpdateVoiceTemplateCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: any = {\n    \"content-type\": \"application/json\",\n  };\n  let resolvedPath = \"/v1/templates/{TemplateName}/voice\";\n  if (input.TemplateName !== undefined) {\n    const labelValue: string = input.TemplateName;\n    if (labelValue.length <= 0) {\n      throw new Error(\"Empty value provided for input HTTP label: TemplateName.\");\n    }\n    resolvedPath = resolvedPath.replace(\"{TemplateName}\", __extendedEncodeURIComponent(labelValue));\n  } else {\n    throw new Error(\"No value provided for input HTTP label: TemplateName.\");\n  }\n  const query: any = {\n    ...(input.CreateNewVersion !== undefined && { \"create-new-version\": input.CreateNewVersion.toString() }),\n    ...(input.Version !== undefined && { version: input.Version }),\n  };\n  let body: any;\n  if (input.VoiceTemplateRequest !== undefined) {\n    body = serializeAws_restJson1VoiceTemplateRequest(input.VoiceTemplateRequest, context);\n  }\n  if (body === undefined) {\n    body = {};\n  }\n  body = JSON.stringify(body);\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  return new __HttpRequest({\n    protocol,\n    hostname,\n    port,\n    method: \"PUT\",\n    headers,\n    path: resolvedPath,\n    query,\n    body,\n  });\n};\n\nexport const deserializeAws_restJson1CreateAppCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateAppCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateAppCommandError(output, context);\n  }\n  const contents: CreateAppCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateAppCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateAppCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateCampaignCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateCampaignCommandError(output, context);\n  }\n  const contents: CreateCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateEmailTemplateCommandError(output, context);\n  }\n  const contents: CreateEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateExportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateExportJobCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateExportJobCommandError(output, context);\n  }\n  const contents: CreateExportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateExportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateExportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateImportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateImportJobCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateImportJobCommandError(output, context);\n  }\n  const contents: CreateImportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateImportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateImportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateJourneyCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateJourneyCommandError(output, context);\n  }\n  const contents: CreateJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreatePushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreatePushTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreatePushTemplateCommandError(output, context);\n  }\n  const contents: CreatePushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreatePushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreatePushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: CreateRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSegmentCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateSegmentCommandError(output, context);\n  }\n  const contents: CreateSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateSmsTemplateCommandError(output, context);\n  }\n  const contents: CreateSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1CreateVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 201 && output.statusCode >= 300) {\n    return deserializeAws_restJson1CreateVoiceTemplateCommandError(output, context);\n  }\n  const contents: CreateVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CreateTemplateMessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CreateTemplateMessageBody = deserializeAws_restJson1CreateTemplateMessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1CreateVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteAdmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAdmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteAdmChannelCommandError(output, context);\n  }\n  const contents: DeleteAdmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ADMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteAdmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAdmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsSandboxChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsVoipChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsVoipChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsVoipChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsVoipChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError(output, context);\n  }\n  const contents: DeleteApnsVoipSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteApnsVoipSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteApnsVoipSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteAppCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAppCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteAppCommandError(output, context);\n  }\n  const contents: DeleteAppCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteAppCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteAppCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteBaiduChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBaiduChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteBaiduChannelCommandError(output, context);\n  }\n  const contents: DeleteBaiduChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BaiduChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteBaiduChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteBaiduChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteCampaignCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteCampaignCommandError(output, context);\n  }\n  const contents: DeleteCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEmailChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEmailChannelCommandError(output, context);\n  }\n  const contents: DeleteEmailChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEmailChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEmailTemplateCommandError(output, context);\n  }\n  const contents: DeleteEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEndpointCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEndpointCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEndpointCommandError(output, context);\n  }\n  const contents: DeleteEndpointCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEndpointCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEndpointCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteEventStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEventStreamCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteEventStreamCommandError(output, context);\n  }\n  const contents: DeleteEventStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventStream: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteEventStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteEventStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteGcmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteGcmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteGcmChannelCommandError(output, context);\n  }\n  const contents: DeleteGcmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    GCMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteGcmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteGcmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteJourneyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteJourneyCommandError(output, context);\n  }\n  const contents: DeleteJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeletePushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeletePushTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeletePushTemplateCommandError(output, context);\n  }\n  const contents: DeletePushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeletePushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeletePushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: DeleteRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSegmentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteSegmentCommandError(output, context);\n  }\n  const contents: DeleteSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteSmsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteSmsChannelCommandError(output, context);\n  }\n  const contents: DeleteSmsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteSmsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteSmsTemplateCommandError(output, context);\n  }\n  const contents: DeleteSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteUserEndpointsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteUserEndpointsCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteUserEndpointsCommandError(output, context);\n  }\n  const contents: DeleteUserEndpointsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteUserEndpointsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteUserEndpointsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteVoiceChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteVoiceChannelCommandError(output, context);\n  }\n  const contents: DeleteVoiceChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteVoiceChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1DeleteVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1DeleteVoiceTemplateCommandError(output, context);\n  }\n  const contents: DeleteVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1DeleteVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetAdmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAdmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetAdmChannelCommandError(output, context);\n  }\n  const contents: GetAdmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ADMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetAdmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAdmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsChannelCommandError(output, context);\n  }\n  const contents: GetApnsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsSandboxChannelCommandError(output, context);\n  }\n  const contents: GetApnsSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsVoipChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsVoipChannelCommandError(output, context);\n  }\n  const contents: GetApnsVoipChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsVoipChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApnsVoipSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError(output, context);\n  }\n  const contents: GetApnsVoipSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApnsVoipSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApnsVoipSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetAppCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetAppCommandError(output, context);\n  }\n  const contents: GetAppCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationResponse = deserializeAws_restJson1ApplicationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetAppCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApplicationDateRangeKpiCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationDateRangeKpiCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApplicationDateRangeKpiCommandError(output, context);\n  }\n  const contents: GetApplicationDateRangeKpiCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationDateRangeKpiResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationDateRangeKpiResponse = deserializeAws_restJson1ApplicationDateRangeKpiResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApplicationDateRangeKpiCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationDateRangeKpiCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetApplicationSettingsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationSettingsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetApplicationSettingsCommandError(output, context);\n  }\n  const contents: GetApplicationSettingsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationSettingsResource: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetApplicationSettingsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetApplicationSettingsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetAppsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetAppsCommandError(output, context);\n  }\n  const contents: GetAppsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationsResponse = deserializeAws_restJson1ApplicationsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetAppsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetAppsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetBaiduChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBaiduChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetBaiduChannelCommandError(output, context);\n  }\n  const contents: GetBaiduChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BaiduChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetBaiduChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetBaiduChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignCommandError(output, context);\n  }\n  const contents: GetCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignActivitiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignActivitiesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignActivitiesCommandError(output, context);\n  }\n  const contents: GetCampaignActivitiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ActivitiesResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ActivitiesResponse = deserializeAws_restJson1ActivitiesResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignActivitiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignActivitiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignDateRangeKpiCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignDateRangeKpiCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignDateRangeKpiCommandError(output, context);\n  }\n  const contents: GetCampaignDateRangeKpiCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignDateRangeKpiResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignDateRangeKpiResponse = deserializeAws_restJson1CampaignDateRangeKpiResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignDateRangeKpiCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignDateRangeKpiCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignsCommandError(output, context);\n  }\n  const contents: GetCampaignsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignVersionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignVersionCommandError(output, context);\n  }\n  const contents: GetCampaignVersionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignVersionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetCampaignVersionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetCampaignVersionsCommandError(output, context);\n  }\n  const contents: GetCampaignVersionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignsResponse = deserializeAws_restJson1CampaignsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetCampaignVersionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetCampaignVersionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetChannelsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetChannelsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetChannelsCommandError(output, context);\n  }\n  const contents: GetChannelsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ChannelsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ChannelsResponse = deserializeAws_restJson1ChannelsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetChannelsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetChannelsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEmailChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEmailChannelCommandError(output, context);\n  }\n  const contents: GetEmailChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEmailChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEmailTemplateCommandError(output, context);\n  }\n  const contents: GetEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailTemplateResponse = deserializeAws_restJson1EmailTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEndpointCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEndpointCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEndpointCommandError(output, context);\n  }\n  const contents: GetEndpointCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointResponse = deserializeAws_restJson1EndpointResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEndpointCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEndpointCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetEventStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEventStreamCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetEventStreamCommandError(output, context);\n  }\n  const contents: GetEventStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventStream: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetEventStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetEventStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetExportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetExportJobCommandError(output, context);\n  }\n  const contents: GetExportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobResponse = deserializeAws_restJson1ExportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetExportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetExportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetExportJobsCommandError(output, context);\n  }\n  const contents: GetExportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetExportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetExportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetGcmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetGcmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetGcmChannelCommandError(output, context);\n  }\n  const contents: GetGcmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    GCMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetGcmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetGcmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetImportJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetImportJobCommandError(output, context);\n  }\n  const contents: GetImportJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobResponse = deserializeAws_restJson1ImportJobResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetImportJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetImportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetImportJobsCommandError(output, context);\n  }\n  const contents: GetImportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetImportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetImportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyCommandError(output, context);\n  }\n  const contents: GetJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyDateRangeKpiCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyDateRangeKpiCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyDateRangeKpiCommandError(output, context);\n  }\n  const contents: GetJourneyDateRangeKpiCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyDateRangeKpiResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyDateRangeKpiResponse = deserializeAws_restJson1JourneyDateRangeKpiResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyDateRangeKpiCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyDateRangeKpiCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionActivityMetricsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError(output, context);\n  }\n  const contents: GetJourneyExecutionActivityMetricsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyExecutionActivityMetricsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyExecutionActivityMetricsResponse = deserializeAws_restJson1JourneyExecutionActivityMetricsResponse(\n    data,\n    context\n  );\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyExecutionActivityMetricsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionActivityMetricsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetJourneyExecutionMetricsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionMetricsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetJourneyExecutionMetricsCommandError(output, context);\n  }\n  const contents: GetJourneyExecutionMetricsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyExecutionMetricsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyExecutionMetricsResponse = deserializeAws_restJson1JourneyExecutionMetricsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetJourneyExecutionMetricsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetJourneyExecutionMetricsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetPushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetPushTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetPushTemplateCommandError(output, context);\n  }\n  const contents: GetPushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    PushNotificationTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.PushNotificationTemplateResponse = deserializeAws_restJson1PushNotificationTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetPushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetPushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: GetRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetRecommenderConfigurationsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetRecommenderConfigurationsCommandError(output, context);\n  }\n  const contents: GetRecommenderConfigurationsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ListRecommenderConfigurationsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ListRecommenderConfigurationsResponse = deserializeAws_restJson1ListRecommenderConfigurationsResponse(\n    data,\n    context\n  );\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetRecommenderConfigurationsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecommenderConfigurationsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentCommandError(output, context);\n  }\n  const contents: GetSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentExportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentExportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentExportJobsCommandError(output, context);\n  }\n  const contents: GetSegmentExportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ExportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ExportJobsResponse = deserializeAws_restJson1ExportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentExportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentExportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentImportJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentImportJobsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentImportJobsCommandError(output, context);\n  }\n  const contents: GetSegmentImportJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ImportJobsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ImportJobsResponse = deserializeAws_restJson1ImportJobsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentImportJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentImportJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentsCommandError(output, context);\n  }\n  const contents: GetSegmentsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentVersionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentVersionCommandError(output, context);\n  }\n  const contents: GetSegmentVersionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentVersionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSegmentVersionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSegmentVersionsCommandError(output, context);\n  }\n  const contents: GetSegmentVersionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentsResponse = deserializeAws_restJson1SegmentsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSegmentVersionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSegmentVersionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSmsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSmsChannelCommandError(output, context);\n  }\n  const contents: GetSmsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSmsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetSmsTemplateCommandError(output, context);\n  }\n  const contents: GetSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSTemplateResponse = deserializeAws_restJson1SMSTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetUserEndpointsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetUserEndpointsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetUserEndpointsCommandError(output, context);\n  }\n  const contents: GetUserEndpointsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EndpointsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EndpointsResponse = deserializeAws_restJson1EndpointsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetUserEndpointsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetUserEndpointsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetVoiceChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetVoiceChannelCommandError(output, context);\n  }\n  const contents: GetVoiceChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetVoiceChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1GetVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1GetVoiceTemplateCommandError(output, context);\n  }\n  const contents: GetVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceTemplateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceTemplateResponse = deserializeAws_restJson1VoiceTemplateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1GetVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListJourneysCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListJourneysCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListJourneysCommandError(output, context);\n  }\n  const contents: ListJourneysCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneysResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneysResponse = deserializeAws_restJson1JourneysResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListJourneysCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListJourneysCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListTagsForResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForResourceCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListTagsForResourceCommandError(output, context);\n  }\n  const contents: ListTagsForResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    TagsModel: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.TagsModel = deserializeAws_restJson1TagsModel(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListTagsForResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListTemplatesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplatesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListTemplatesCommandError(output, context);\n  }\n  const contents: ListTemplatesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    TemplatesResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.TemplatesResponse = deserializeAws_restJson1TemplatesResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListTemplatesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplatesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1ListTemplateVersionsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplateVersionsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1ListTemplateVersionsCommandError(output, context);\n  }\n  const contents: ListTemplateVersionsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    TemplateVersionsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.TemplateVersionsResponse = deserializeAws_restJson1TemplateVersionsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1ListTemplateVersionsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTemplateVersionsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PhoneNumberValidateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PhoneNumberValidateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PhoneNumberValidateCommandError(output, context);\n  }\n  const contents: PhoneNumberValidateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    NumberValidateResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.NumberValidateResponse = deserializeAws_restJson1NumberValidateResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PhoneNumberValidateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PhoneNumberValidateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PutEventsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventsCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PutEventsCommandError(output, context);\n  }\n  const contents: PutEventsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventsResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventsResponse = deserializeAws_restJson1EventsResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PutEventsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1PutEventStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventStreamCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1PutEventStreamCommandError(output, context);\n  }\n  const contents: PutEventStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EventStream: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EventStream = deserializeAws_restJson1EventStream(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1PutEventStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutEventStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1RemoveAttributesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveAttributesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1RemoveAttributesCommandError(output, context);\n  }\n  const contents: RemoveAttributesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    AttributesResource: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.AttributesResource = deserializeAws_restJson1AttributesResource(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1RemoveAttributesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveAttributesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1SendMessagesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendMessagesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1SendMessagesCommandError(output, context);\n  }\n  const contents: SendMessagesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageResponse = deserializeAws_restJson1MessageResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1SendMessagesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendMessagesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1SendUsersMessagesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendUsersMessagesCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1SendUsersMessagesCommandError(output, context);\n  }\n  const contents: SendUsersMessagesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SendUsersMessageResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SendUsersMessageResponse = deserializeAws_restJson1SendUsersMessageResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1SendUsersMessagesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SendUsersMessagesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1TagResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagResourceCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restJson1TagResourceCommandError(output, context);\n  }\n  const contents: TagResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1TagResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TagResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UntagResourceCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagResourceCommandOutput> => {\n  if (output.statusCode !== 204 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UntagResourceCommandError(output, context);\n  }\n  const contents: UntagResourceCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  await collectBody(output.body, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UntagResourceCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UntagResourceCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateAdmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateAdmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateAdmChannelCommandError(output, context);\n  }\n  const contents: UpdateAdmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ADMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ADMChannelResponse = deserializeAws_restJson1ADMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateAdmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateAdmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSChannelResponse = deserializeAws_restJson1APNSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsSandboxChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSSandboxChannelResponse = deserializeAws_restJson1APNSSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsVoipChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsVoipChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsVoipChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipChannelResponse = deserializeAws_restJson1APNSVoipChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsVoipChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipSandboxChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError(output, context);\n  }\n  const contents: UpdateApnsVoipSandboxChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    APNSVoipSandboxChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.APNSVoipSandboxChannelResponse = deserializeAws_restJson1APNSVoipSandboxChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApnsVoipSandboxChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApnsVoipSandboxChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateApplicationSettingsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApplicationSettingsCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateApplicationSettingsCommandError(output, context);\n  }\n  const contents: UpdateApplicationSettingsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ApplicationSettingsResource: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.ApplicationSettingsResource = deserializeAws_restJson1ApplicationSettingsResource(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateApplicationSettingsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateApplicationSettingsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateBaiduChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateBaiduChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateBaiduChannelCommandError(output, context);\n  }\n  const contents: UpdateBaiduChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    BaiduChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.BaiduChannelResponse = deserializeAws_restJson1BaiduChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateBaiduChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateBaiduChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateCampaignCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateCampaignCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateCampaignCommandError(output, context);\n  }\n  const contents: UpdateCampaignCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    CampaignResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.CampaignResponse = deserializeAws_restJson1CampaignResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateCampaignCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateCampaignCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEmailChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEmailChannelCommandError(output, context);\n  }\n  const contents: UpdateEmailChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    EmailChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.EmailChannelResponse = deserializeAws_restJson1EmailChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEmailChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEmailTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEmailTemplateCommandError(output, context);\n  }\n  const contents: UpdateEmailTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEmailTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEmailTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEndpointCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEndpointCommandError(output, context);\n  }\n  const contents: UpdateEndpointCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEndpointCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateEndpointsBatchCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointsBatchCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateEndpointsBatchCommandError(output, context);\n  }\n  const contents: UpdateEndpointsBatchCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateEndpointsBatchCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateEndpointsBatchCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateGcmChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateGcmChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateGcmChannelCommandError(output, context);\n  }\n  const contents: UpdateGcmChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    GCMChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.GCMChannelResponse = deserializeAws_restJson1GCMChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateGcmChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateGcmChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateJourneyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateJourneyCommandError(output, context);\n  }\n  const contents: UpdateJourneyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateJourneyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.pinpoint#ConflictException\":\n      response = {\n        ...(await deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateJourneyStateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyStateCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateJourneyStateCommandError(output, context);\n  }\n  const contents: UpdateJourneyStateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    JourneyResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.JourneyResponse = deserializeAws_restJson1JourneyResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateJourneyStateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateJourneyStateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdatePushTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdatePushTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdatePushTemplateCommandError(output, context);\n  }\n  const contents: UpdatePushTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdatePushTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdatePushTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateRecommenderConfigurationCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateRecommenderConfigurationCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateRecommenderConfigurationCommandError(output, context);\n  }\n  const contents: UpdateRecommenderConfigurationCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    RecommenderConfigurationResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.RecommenderConfigurationResponse = deserializeAws_restJson1RecommenderConfigurationResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateRecommenderConfigurationCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateRecommenderConfigurationCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateSegmentCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSegmentCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateSegmentCommandError(output, context);\n  }\n  const contents: UpdateSegmentCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SegmentResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SegmentResponse = deserializeAws_restJson1SegmentResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateSegmentCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSegmentCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateSmsChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateSmsChannelCommandError(output, context);\n  }\n  const contents: UpdateSmsChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    SMSChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.SMSChannelResponse = deserializeAws_restJson1SMSChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateSmsChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateSmsTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateSmsTemplateCommandError(output, context);\n  }\n  const contents: UpdateSmsTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateSmsTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateSmsTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateTemplateActiveVersionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateTemplateActiveVersionCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateTemplateActiveVersionCommandError(output, context);\n  }\n  const contents: UpdateTemplateActiveVersionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateTemplateActiveVersionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateTemplateActiveVersionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateVoiceChannelCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceChannelCommandOutput> => {\n  if (output.statusCode !== 200 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateVoiceChannelCommandError(output, context);\n  }\n  const contents: UpdateVoiceChannelCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    VoiceChannelResponse: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.VoiceChannelResponse = deserializeAws_restJson1VoiceChannelResponse(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateVoiceChannelCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceChannelCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_restJson1UpdateVoiceTemplateCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceTemplateCommandOutput> => {\n  if (output.statusCode !== 202 && output.statusCode >= 300) {\n    return deserializeAws_restJson1UpdateVoiceTemplateCommandError(output, context);\n  }\n  const contents: UpdateVoiceTemplateCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    MessageBody: undefined,\n  };\n  const data: any = await parseBody(output.body, context);\n  contents.MessageBody = deserializeAws_restJson1MessageBody(data, context);\n  return Promise.resolve(contents);\n};\n\nconst deserializeAws_restJson1UpdateVoiceTemplateCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateVoiceTemplateCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"BadRequestException\":\n    case \"com.amazonaws.pinpoint#BadRequestException\":\n      response = {\n        ...(await deserializeAws_restJson1BadRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ForbiddenException\":\n    case \"com.amazonaws.pinpoint#ForbiddenException\":\n      response = {\n        ...(await deserializeAws_restJson1ForbiddenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerErrorException\":\n    case \"com.amazonaws.pinpoint#InternalServerErrorException\":\n      response = {\n        ...(await deserializeAws_restJson1InternalServerErrorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"MethodNotAllowedException\":\n    case \"com.amazonaws.pinpoint#MethodNotAllowedException\":\n      response = {\n        ...(await deserializeAws_restJson1MethodNotAllowedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"NotFoundException\":\n    case \"com.amazonaws.pinpoint#NotFoundException\":\n      response = {\n        ...(await deserializeAws_restJson1NotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"PayloadTooLargeException\":\n    case \"com.amazonaws.pinpoint#PayloadTooLargeException\":\n      response = {\n        ...(await deserializeAws_restJson1PayloadTooLargeExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.pinpoint#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_restJson1BadRequestExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<BadRequestException> => {\n  const contents: BadRequestException = {\n    name: \"BadRequestException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ConflictExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConflictException> => {\n  const contents: ConflictException = {\n    name: \"ConflictException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1ForbiddenExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ForbiddenException> => {\n  const contents: ForbiddenException = {\n    name: \"ForbiddenException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1InternalServerErrorExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InternalServerErrorException> => {\n  const contents: InternalServerErrorException = {\n    name: \"InternalServerErrorException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1MethodNotAllowedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<MethodNotAllowedException> => {\n  const contents: MethodNotAllowedException = {\n    name: \"MethodNotAllowedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1NotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<NotFoundException> => {\n  const contents: NotFoundException = {\n    name: \"NotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1PayloadTooLargeExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<PayloadTooLargeException> => {\n  const contents: PayloadTooLargeException = {\n    name: \"PayloadTooLargeException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst deserializeAws_restJson1TooManyRequestsExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<TooManyRequestsException> => {\n  const contents: TooManyRequestsException = {\n    name: \"TooManyRequestsException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    Message: undefined,\n    RequestID: undefined,\n  };\n  const data: any = parsedOutput.body;\n  if (data.Message !== undefined && data.Message !== null) {\n    contents.Message = data.Message;\n  }\n  if (data.RequestID !== undefined && data.RequestID !== null) {\n    contents.RequestID = data.RequestID;\n  }\n  return contents;\n};\n\nconst serializeAws_restJson1Activity = (input: Activity, context: __SerdeContext): any => {\n  return {\n    ...(input.CUSTOM !== undefined &&\n      input.CUSTOM !== null && { CUSTOM: serializeAws_restJson1CustomMessageActivity(input.CUSTOM, context) }),\n    ...(input.ConditionalSplit !== undefined &&\n      input.ConditionalSplit !== null && {\n        ConditionalSplit: serializeAws_restJson1ConditionalSplitActivity(input.ConditionalSplit, context),\n      }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EMAIL !== undefined &&\n      input.EMAIL !== null && { EMAIL: serializeAws_restJson1EmailMessageActivity(input.EMAIL, context) }),\n    ...(input.Holdout !== undefined &&\n      input.Holdout !== null && { Holdout: serializeAws_restJson1HoldoutActivity(input.Holdout, context) }),\n    ...(input.MultiCondition !== undefined &&\n      input.MultiCondition !== null && {\n        MultiCondition: serializeAws_restJson1MultiConditionalSplitActivity(input.MultiCondition, context),\n      }),\n    ...(input.PUSH !== undefined &&\n      input.PUSH !== null && { PUSH: serializeAws_restJson1PushMessageActivity(input.PUSH, context) }),\n    ...(input.RandomSplit !== undefined &&\n      input.RandomSplit !== null && {\n        RandomSplit: serializeAws_restJson1RandomSplitActivity(input.RandomSplit, context),\n      }),\n    ...(input.SMS !== undefined &&\n      input.SMS !== null && { SMS: serializeAws_restJson1SMSMessageActivity(input.SMS, context) }),\n    ...(input.Wait !== undefined &&\n      input.Wait !== null && { Wait: serializeAws_restJson1WaitActivity(input.Wait, context) }),\n  };\n};\n\nconst serializeAws_restJson1AddressConfiguration = (input: AddressConfiguration, context: __SerdeContext): any => {\n  return {\n    ...(input.BodyOverride !== undefined && input.BodyOverride !== null && { BodyOverride: input.BodyOverride }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TitleOverride !== undefined && input.TitleOverride !== null && { TitleOverride: input.TitleOverride }),\n  };\n};\n\nconst serializeAws_restJson1ADMChannelRequest = (input: ADMChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ClientId !== undefined && input.ClientId !== null && { ClientId: input.ClientId }),\n    ...(input.ClientSecret !== undefined && input.ClientSecret !== null && { ClientSecret: input.ClientSecret }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n  };\n};\n\nconst serializeAws_restJson1ADMMessage = (input: ADMMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.ConsolidationKey !== undefined &&\n      input.ConsolidationKey !== null && { ConsolidationKey: input.ConsolidationKey }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.ExpiresAfter !== undefined && input.ExpiresAfter !== null && { ExpiresAfter: input.ExpiresAfter }),\n    ...(input.IconReference !== undefined && input.IconReference !== null && { IconReference: input.IconReference }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.MD5 !== undefined && input.MD5 !== null && { MD5: input.MD5 }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1AndroidPushNotificationTemplate = (\n  input: AndroidPushNotificationTemplate,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1APNSChannelRequest = (input: APNSChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1APNSMessage = (input: APNSMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.APNSPushType !== undefined && input.APNSPushType !== null && { APNSPushType: input.APNSPushType }),\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Badge !== undefined && input.Badge !== null && { Badge: input.Badge }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Category !== undefined && input.Category !== null && { Category: input.Category }),\n    ...(input.CollapseId !== undefined && input.CollapseId !== null && { CollapseId: input.CollapseId }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.PreferredAuthenticationMethod !== undefined &&\n      input.PreferredAuthenticationMethod !== null && {\n        PreferredAuthenticationMethod: input.PreferredAuthenticationMethod,\n      }),\n    ...(input.Priority !== undefined && input.Priority !== null && { Priority: input.Priority }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.ThreadId !== undefined && input.ThreadId !== null && { ThreadId: input.ThreadId }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1APNSPushNotificationTemplate = (\n  input: APNSPushNotificationTemplate,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1APNSSandboxChannelRequest = (\n  input: APNSSandboxChannelRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1APNSVoipChannelRequest = (input: APNSVoipChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1APNSVoipSandboxChannelRequest = (\n  input: APNSVoipSandboxChannelRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.BundleId !== undefined && input.BundleId !== null && { BundleId: input.BundleId }),\n    ...(input.Certificate !== undefined && input.Certificate !== null && { Certificate: input.Certificate }),\n    ...(input.DefaultAuthenticationMethod !== undefined &&\n      input.DefaultAuthenticationMethod !== null && { DefaultAuthenticationMethod: input.DefaultAuthenticationMethod }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.PrivateKey !== undefined && input.PrivateKey !== null && { PrivateKey: input.PrivateKey }),\n    ...(input.TeamId !== undefined && input.TeamId !== null && { TeamId: input.TeamId }),\n    ...(input.TokenKey !== undefined && input.TokenKey !== null && { TokenKey: input.TokenKey }),\n    ...(input.TokenKeyId !== undefined && input.TokenKeyId !== null && { TokenKeyId: input.TokenKeyId }),\n  };\n};\n\nconst serializeAws_restJson1AttributeDimension = (input: AttributeDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.AttributeType !== undefined && input.AttributeType !== null && { AttributeType: input.AttributeType }),\n    ...(input.Values !== undefined &&\n      input.Values !== null && { Values: serializeAws_restJson1ListOf__string(input.Values, context) }),\n  };\n};\n\nconst serializeAws_restJson1BaiduChannelRequest = (input: BaiduChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ApiKey !== undefined && input.ApiKey !== null && { ApiKey: input.ApiKey }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.SecretKey !== undefined && input.SecretKey !== null && { SecretKey: input.SecretKey }),\n  };\n};\n\nconst serializeAws_restJson1BaiduMessage = (input: BaiduMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.IconReference !== undefined && input.IconReference !== null && { IconReference: input.IconReference }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1CampaignCustomMessage = (input: CampaignCustomMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: input.Data }),\n  };\n};\n\nconst serializeAws_restJson1CampaignEmailMessage = (input: CampaignEmailMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n    ...(input.HtmlBody !== undefined && input.HtmlBody !== null && { HtmlBody: input.HtmlBody }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n  };\n};\n\nconst serializeAws_restJson1CampaignEventFilter = (input: CampaignEventFilter, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context) }),\n    ...(input.FilterType !== undefined && input.FilterType !== null && { FilterType: input.FilterType }),\n  };\n};\n\nconst serializeAws_restJson1CampaignHook = (input: CampaignHook, context: __SerdeContext): any => {\n  return {\n    ...(input.LambdaFunctionName !== undefined &&\n      input.LambdaFunctionName !== null && { LambdaFunctionName: input.LambdaFunctionName }),\n    ...(input.Mode !== undefined && input.Mode !== null && { Mode: input.Mode }),\n    ...(input.WebUrl !== undefined && input.WebUrl !== null && { WebUrl: input.WebUrl }),\n  };\n};\n\nconst serializeAws_restJson1CampaignLimits = (input: CampaignLimits, context: __SerdeContext): any => {\n  return {\n    ...(input.Daily !== undefined && input.Daily !== null && { Daily: input.Daily }),\n    ...(input.MaximumDuration !== undefined &&\n      input.MaximumDuration !== null && { MaximumDuration: input.MaximumDuration }),\n    ...(input.MessagesPerSecond !== undefined &&\n      input.MessagesPerSecond !== null && { MessagesPerSecond: input.MessagesPerSecond }),\n    ...(input.Total !== undefined && input.Total !== null && { Total: input.Total }),\n  };\n};\n\nconst serializeAws_restJson1CampaignSmsMessage = (input: CampaignSmsMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.MessageType !== undefined && input.MessageType !== null && { MessageType: input.MessageType }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n  };\n};\n\nconst serializeAws_restJson1Condition = (input: Condition, context: __SerdeContext): any => {\n  return {\n    ...(input.Conditions !== undefined &&\n      input.Conditions !== null && {\n        Conditions: serializeAws_restJson1ListOfSimpleCondition(input.Conditions, context),\n      }),\n    ...(input.Operator !== undefined && input.Operator !== null && { Operator: input.Operator }),\n  };\n};\n\nconst serializeAws_restJson1ConditionalSplitActivity = (\n  input: ConditionalSplitActivity,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Condition !== undefined &&\n      input.Condition !== null && { Condition: serializeAws_restJson1Condition(input.Condition, context) }),\n    ...(input.EvaluationWaitTime !== undefined &&\n      input.EvaluationWaitTime !== null && {\n        EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context),\n      }),\n    ...(input.FalseActivity !== undefined && input.FalseActivity !== null && { FalseActivity: input.FalseActivity }),\n    ...(input.TrueActivity !== undefined && input.TrueActivity !== null && { TrueActivity: input.TrueActivity }),\n  };\n};\n\nconst serializeAws_restJson1CreateApplicationRequest = (\n  input: CreateApplicationRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1CreateRecommenderConfigurationShape = (\n  input: CreateRecommenderConfigurationShape,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && { Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context) }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.RecommendationProviderIdType !== undefined &&\n      input.RecommendationProviderIdType !== null && {\n        RecommendationProviderIdType: input.RecommendationProviderIdType,\n      }),\n    ...(input.RecommendationProviderRoleArn !== undefined &&\n      input.RecommendationProviderRoleArn !== null && {\n        RecommendationProviderRoleArn: input.RecommendationProviderRoleArn,\n      }),\n    ...(input.RecommendationProviderUri !== undefined &&\n      input.RecommendationProviderUri !== null && { RecommendationProviderUri: input.RecommendationProviderUri }),\n    ...(input.RecommendationTransformerUri !== undefined &&\n      input.RecommendationTransformerUri !== null && {\n        RecommendationTransformerUri: input.RecommendationTransformerUri,\n      }),\n    ...(input.RecommendationsDisplayName !== undefined &&\n      input.RecommendationsDisplayName !== null && { RecommendationsDisplayName: input.RecommendationsDisplayName }),\n    ...(input.RecommendationsPerMessage !== undefined &&\n      input.RecommendationsPerMessage !== null && { RecommendationsPerMessage: input.RecommendationsPerMessage }),\n  };\n};\n\nconst serializeAws_restJson1CustomDeliveryConfiguration = (\n  input: CustomDeliveryConfiguration,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.DeliveryUri !== undefined && input.DeliveryUri !== null && { DeliveryUri: input.DeliveryUri }),\n    ...(input.EndpointTypes !== undefined &&\n      input.EndpointTypes !== null && {\n        EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1CustomMessageActivity = (input: CustomMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.DeliveryUri !== undefined && input.DeliveryUri !== null && { DeliveryUri: input.DeliveryUri }),\n    ...(input.EndpointTypes !== undefined &&\n      input.EndpointTypes !== null && {\n        EndpointTypes: serializeAws_restJson1ListOf__EndpointTypesElement(input.EndpointTypes, context),\n      }),\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneyCustomMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1DefaultMessage = (input: DefaultMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1DefaultPushNotificationMessage = (\n  input: DefaultPushNotificationMessage,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1DefaultPushNotificationTemplate = (\n  input: DefaultPushNotificationTemplate,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1DirectMessageConfiguration = (\n  input: DirectMessageConfiguration,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ADMMessage !== undefined &&\n      input.ADMMessage !== null && { ADMMessage: serializeAws_restJson1ADMMessage(input.ADMMessage, context) }),\n    ...(input.APNSMessage !== undefined &&\n      input.APNSMessage !== null && { APNSMessage: serializeAws_restJson1APNSMessage(input.APNSMessage, context) }),\n    ...(input.BaiduMessage !== undefined &&\n      input.BaiduMessage !== null && { BaiduMessage: serializeAws_restJson1BaiduMessage(input.BaiduMessage, context) }),\n    ...(input.DefaultMessage !== undefined &&\n      input.DefaultMessage !== null && {\n        DefaultMessage: serializeAws_restJson1DefaultMessage(input.DefaultMessage, context),\n      }),\n    ...(input.DefaultPushNotificationMessage !== undefined &&\n      input.DefaultPushNotificationMessage !== null && {\n        DefaultPushNotificationMessage: serializeAws_restJson1DefaultPushNotificationMessage(\n          input.DefaultPushNotificationMessage,\n          context\n        ),\n      }),\n    ...(input.EmailMessage !== undefined &&\n      input.EmailMessage !== null && { EmailMessage: serializeAws_restJson1EmailMessage(input.EmailMessage, context) }),\n    ...(input.GCMMessage !== undefined &&\n      input.GCMMessage !== null && { GCMMessage: serializeAws_restJson1GCMMessage(input.GCMMessage, context) }),\n    ...(input.SMSMessage !== undefined &&\n      input.SMSMessage !== null && { SMSMessage: serializeAws_restJson1SMSMessage(input.SMSMessage, context) }),\n    ...(input.VoiceMessage !== undefined &&\n      input.VoiceMessage !== null && { VoiceMessage: serializeAws_restJson1VoiceMessage(input.VoiceMessage, context) }),\n  };\n};\n\nconst serializeAws_restJson1EmailChannelRequest = (input: EmailChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ConfigurationSet !== undefined &&\n      input.ConfigurationSet !== null && { ConfigurationSet: input.ConfigurationSet }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n    ...(input.Identity !== undefined && input.Identity !== null && { Identity: input.Identity }),\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n  };\n};\n\nconst serializeAws_restJson1EmailMessage = (input: EmailMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.FeedbackForwardingAddress !== undefined &&\n      input.FeedbackForwardingAddress !== null && { FeedbackForwardingAddress: input.FeedbackForwardingAddress }),\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n    ...(input.RawEmail !== undefined &&\n      input.RawEmail !== null && { RawEmail: serializeAws_restJson1RawEmail(input.RawEmail, context) }),\n    ...(input.ReplyToAddresses !== undefined &&\n      input.ReplyToAddresses !== null && {\n        ReplyToAddresses: serializeAws_restJson1ListOf__string(input.ReplyToAddresses, context),\n      }),\n    ...(input.SimpleEmail !== undefined &&\n      input.SimpleEmail !== null && { SimpleEmail: serializeAws_restJson1SimpleEmail(input.SimpleEmail, context) }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1EmailMessageActivity = (input: EmailMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneyEmailMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1EmailTemplateRequest = (input: EmailTemplateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.HtmlPart !== undefined && input.HtmlPart !== null && { HtmlPart: input.HtmlPart }),\n    ...(input.RecommenderId !== undefined && input.RecommenderId !== null && { RecommenderId: input.RecommenderId }),\n    ...(input.Subject !== undefined && input.Subject !== null && { Subject: input.Subject }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.TextPart !== undefined && input.TextPart !== null && { TextPart: input.TextPart }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointBatchItem = (input: EndpointBatchItem, context: __SerdeContext): any => {\n  return {\n    ...(input.Address !== undefined && input.Address !== null && { Address: input.Address }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context),\n      }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context),\n      }),\n    ...(input.EffectiveDate !== undefined && input.EffectiveDate !== null && { EffectiveDate: input.EffectiveDate }),\n    ...(input.EndpointStatus !== undefined &&\n      input.EndpointStatus !== null && { EndpointStatus: input.EndpointStatus }),\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1EndpointLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.OptOut !== undefined && input.OptOut !== null && { OptOut: input.OptOut }),\n    ...(input.RequestId !== undefined && input.RequestId !== null && { RequestId: input.RequestId }),\n    ...(input.User !== undefined &&\n      input.User !== null && { User: serializeAws_restJson1EndpointUser(input.User, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointBatchRequest = (input: EndpointBatchRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Item !== undefined &&\n      input.Item !== null && { Item: serializeAws_restJson1ListOfEndpointBatchItem(input.Item, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointDemographic = (input: EndpointDemographic, context: __SerdeContext): any => {\n  return {\n    ...(input.AppVersion !== undefined && input.AppVersion !== null && { AppVersion: input.AppVersion }),\n    ...(input.Locale !== undefined && input.Locale !== null && { Locale: input.Locale }),\n    ...(input.Make !== undefined && input.Make !== null && { Make: input.Make }),\n    ...(input.Model !== undefined && input.Model !== null && { Model: input.Model }),\n    ...(input.ModelVersion !== undefined && input.ModelVersion !== null && { ModelVersion: input.ModelVersion }),\n    ...(input.Platform !== undefined && input.Platform !== null && { Platform: input.Platform }),\n    ...(input.PlatformVersion !== undefined &&\n      input.PlatformVersion !== null && { PlatformVersion: input.PlatformVersion }),\n    ...(input.Timezone !== undefined && input.Timezone !== null && { Timezone: input.Timezone }),\n  };\n};\n\nconst serializeAws_restJson1EndpointLocation = (input: EndpointLocation, context: __SerdeContext): any => {\n  return {\n    ...(input.City !== undefined && input.City !== null && { City: input.City }),\n    ...(input.Country !== undefined && input.Country !== null && { Country: input.Country }),\n    ...(input.Latitude !== undefined && input.Latitude !== null && { Latitude: input.Latitude }),\n    ...(input.Longitude !== undefined && input.Longitude !== null && { Longitude: input.Longitude }),\n    ...(input.PostalCode !== undefined && input.PostalCode !== null && { PostalCode: input.PostalCode }),\n    ...(input.Region !== undefined && input.Region !== null && { Region: input.Region }),\n  };\n};\n\nconst serializeAws_restJson1EndpointRequest = (input: EndpointRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Address !== undefined && input.Address !== null && { Address: input.Address }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context),\n      }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context),\n      }),\n    ...(input.EffectiveDate !== undefined && input.EffectiveDate !== null && { EffectiveDate: input.EffectiveDate }),\n    ...(input.EndpointStatus !== undefined &&\n      input.EndpointStatus !== null && { EndpointStatus: input.EndpointStatus }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1EndpointLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.OptOut !== undefined && input.OptOut !== null && { OptOut: input.OptOut }),\n    ...(input.RequestId !== undefined && input.RequestId !== null && { RequestId: input.RequestId }),\n    ...(input.User !== undefined &&\n      input.User !== null && { User: serializeAws_restJson1EndpointUser(input.User, context) }),\n  };\n};\n\nconst serializeAws_restJson1EndpointSendConfiguration = (\n  input: EndpointSendConfiguration,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.BodyOverride !== undefined && input.BodyOverride !== null && { BodyOverride: input.BodyOverride }),\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TitleOverride !== undefined && input.TitleOverride !== null && { TitleOverride: input.TitleOverride }),\n  };\n};\n\nconst serializeAws_restJson1EndpointUser = (input: EndpointUser, context: __SerdeContext): any => {\n  return {\n    ...(input.UserAttributes !== undefined &&\n      input.UserAttributes !== null && {\n        UserAttributes: serializeAws_restJson1MapOfListOf__string(input.UserAttributes, context),\n      }),\n    ...(input.UserId !== undefined && input.UserId !== null && { UserId: input.UserId }),\n  };\n};\n\nconst serializeAws_restJson1Event = (input: Event, context: __SerdeContext): any => {\n  return {\n    ...(input.AppPackageName !== undefined &&\n      input.AppPackageName !== null && { AppPackageName: input.AppPackageName }),\n    ...(input.AppTitle !== undefined && input.AppTitle !== null && { AppTitle: input.AppTitle }),\n    ...(input.AppVersionCode !== undefined &&\n      input.AppVersionCode !== null && { AppVersionCode: input.AppVersionCode }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && { Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context) }),\n    ...(input.ClientSdkVersion !== undefined &&\n      input.ClientSdkVersion !== null && { ClientSdkVersion: input.ClientSdkVersion }),\n    ...(input.EventType !== undefined && input.EventType !== null && { EventType: input.EventType }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.SdkName !== undefined && input.SdkName !== null && { SdkName: input.SdkName }),\n    ...(input.Session !== undefined &&\n      input.Session !== null && { Session: serializeAws_restJson1Session(input.Session, context) }),\n    ...(input.Timestamp !== undefined && input.Timestamp !== null && { Timestamp: input.Timestamp }),\n  };\n};\n\nconst serializeAws_restJson1EventCondition = (input: EventCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context) }),\n    ...(input.MessageActivity !== undefined &&\n      input.MessageActivity !== null && { MessageActivity: input.MessageActivity }),\n  };\n};\n\nconst serializeAws_restJson1EventDimensions = (input: EventDimensions, context: __SerdeContext): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context),\n      }),\n    ...(input.EventType !== undefined &&\n      input.EventType !== null && { EventType: serializeAws_restJson1SetDimension(input.EventType, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context) }),\n  };\n};\n\nconst serializeAws_restJson1EventFilter = (input: EventFilter, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1EventDimensions(input.Dimensions, context) }),\n    ...(input.FilterType !== undefined && input.FilterType !== null && { FilterType: input.FilterType }),\n  };\n};\n\nconst serializeAws_restJson1EventsBatch = (input: EventsBatch, context: __SerdeContext): any => {\n  return {\n    ...(input.Endpoint !== undefined &&\n      input.Endpoint !== null && { Endpoint: serializeAws_restJson1PublicEndpoint(input.Endpoint, context) }),\n    ...(input.Events !== undefined &&\n      input.Events !== null && { Events: serializeAws_restJson1MapOfEvent(input.Events, context) }),\n  };\n};\n\nconst serializeAws_restJson1EventsRequest = (input: EventsRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.BatchItem !== undefined &&\n      input.BatchItem !== null && { BatchItem: serializeAws_restJson1MapOfEventsBatch(input.BatchItem, context) }),\n  };\n};\n\nconst serializeAws_restJson1EventStartCondition = (input: EventStartCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.EventFilter !== undefined &&\n      input.EventFilter !== null && { EventFilter: serializeAws_restJson1EventFilter(input.EventFilter, context) }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n  };\n};\n\nconst serializeAws_restJson1ExportJobRequest = (input: ExportJobRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n    ...(input.S3UrlPrefix !== undefined && input.S3UrlPrefix !== null && { S3UrlPrefix: input.S3UrlPrefix }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n    ...(input.SegmentVersion !== undefined &&\n      input.SegmentVersion !== null && { SegmentVersion: input.SegmentVersion }),\n  };\n};\n\nconst serializeAws_restJson1GCMChannelRequest = (input: GCMChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.ApiKey !== undefined && input.ApiKey !== null && { ApiKey: input.ApiKey }),\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n  };\n};\n\nconst serializeAws_restJson1GCMMessage = (input: GCMMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.CollapseKey !== undefined && input.CollapseKey !== null && { CollapseKey: input.CollapseKey }),\n    ...(input.Data !== undefined &&\n      input.Data !== null && { Data: serializeAws_restJson1MapOf__string(input.Data, context) }),\n    ...(input.IconReference !== undefined && input.IconReference !== null && { IconReference: input.IconReference }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.Priority !== undefined && input.Priority !== null && { Priority: input.Priority }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.RestrictedPackageName !== undefined &&\n      input.RestrictedPackageName !== null && { RestrictedPackageName: input.RestrictedPackageName }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.SmallImageIconUrl !== undefined &&\n      input.SmallImageIconUrl !== null && { SmallImageIconUrl: input.SmallImageIconUrl }),\n    ...(input.Sound !== undefined && input.Sound !== null && { Sound: input.Sound }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1GPSCoordinates = (input: GPSCoordinates, context: __SerdeContext): any => {\n  return {\n    ...(input.Latitude !== undefined && input.Latitude !== null && { Latitude: input.Latitude }),\n    ...(input.Longitude !== undefined && input.Longitude !== null && { Longitude: input.Longitude }),\n  };\n};\n\nconst serializeAws_restJson1GPSPointDimension = (input: GPSPointDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.Coordinates !== undefined &&\n      input.Coordinates !== null && { Coordinates: serializeAws_restJson1GPSCoordinates(input.Coordinates, context) }),\n    ...(input.RangeInKilometers !== undefined &&\n      input.RangeInKilometers !== null && { RangeInKilometers: input.RangeInKilometers }),\n  };\n};\n\nconst serializeAws_restJson1HoldoutActivity = (input: HoldoutActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.Percentage !== undefined && input.Percentage !== null && { Percentage: input.Percentage }),\n  };\n};\n\nconst serializeAws_restJson1ImportJobRequest = (input: ImportJobRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.DefineSegment !== undefined && input.DefineSegment !== null && { DefineSegment: input.DefineSegment }),\n    ...(input.ExternalId !== undefined && input.ExternalId !== null && { ExternalId: input.ExternalId }),\n    ...(input.Format !== undefined && input.Format !== null && { Format: input.Format }),\n    ...(input.RegisterEndpoints !== undefined &&\n      input.RegisterEndpoints !== null && { RegisterEndpoints: input.RegisterEndpoints }),\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n    ...(input.S3Url !== undefined && input.S3Url !== null && { S3Url: input.S3Url }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n    ...(input.SegmentName !== undefined && input.SegmentName !== null && { SegmentName: input.SegmentName }),\n  };\n};\n\nconst serializeAws_restJson1JourneyCustomMessage = (input: JourneyCustomMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: input.Data }),\n  };\n};\n\nconst serializeAws_restJson1JourneyEmailMessage = (input: JourneyEmailMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.FromAddress !== undefined && input.FromAddress !== null && { FromAddress: input.FromAddress }),\n  };\n};\n\nconst serializeAws_restJson1JourneyLimits = (input: JourneyLimits, context: __SerdeContext): any => {\n  return {\n    ...(input.DailyCap !== undefined && input.DailyCap !== null && { DailyCap: input.DailyCap }),\n    ...(input.EndpointReentryCap !== undefined &&\n      input.EndpointReentryCap !== null && { EndpointReentryCap: input.EndpointReentryCap }),\n    ...(input.MessagesPerSecond !== undefined &&\n      input.MessagesPerSecond !== null && { MessagesPerSecond: input.MessagesPerSecond }),\n  };\n};\n\nconst serializeAws_restJson1JourneyPushMessage = (input: JourneyPushMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n  };\n};\n\nconst serializeAws_restJson1JourneySchedule = (input: JourneySchedule, context: __SerdeContext): any => {\n  return {\n    ...(input.EndTime !== undefined &&\n      input.EndTime !== null && { EndTime: input.EndTime.toISOString().split(\".\")[0] + \"Z\" }),\n    ...(input.StartTime !== undefined &&\n      input.StartTime !== null && { StartTime: input.StartTime.toISOString().split(\".\")[0] + \"Z\" }),\n    ...(input.Timezone !== undefined && input.Timezone !== null && { Timezone: input.Timezone }),\n  };\n};\n\nconst serializeAws_restJson1JourneySMSMessage = (input: JourneySMSMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageType !== undefined && input.MessageType !== null && { MessageType: input.MessageType }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n  };\n};\n\nconst serializeAws_restJson1JourneyStateRequest = (input: JourneyStateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.State !== undefined && input.State !== null && { State: input.State }),\n  };\n};\n\nconst serializeAws_restJson1ListOf__EndpointTypesElement = (\n  input: (__EndpointTypesElement | string)[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_restJson1ListOf__string = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_restJson1ListOfEndpointBatchItem = (input: EndpointBatchItem[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1EndpointBatchItem(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfMultiConditionalBranch = (\n  input: MultiConditionalBranch[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1MultiConditionalBranch(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfRandomSplitEntry = (input: RandomSplitEntry[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1RandomSplitEntry(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSegmentDimensions = (input: SegmentDimensions[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SegmentDimensions(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSegmentGroup = (input: SegmentGroup[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SegmentGroup(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSegmentReference = (input: SegmentReference[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SegmentReference(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfSimpleCondition = (input: SimpleCondition[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1SimpleCondition(entry, context);\n    });\n};\n\nconst serializeAws_restJson1ListOfWriteTreatmentResource = (\n  input: WriteTreatmentResource[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_restJson1WriteTreatmentResource(entry, context);\n    });\n};\n\nconst serializeAws_restJson1MapOf__double = (input: { [key: string]: number }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: number }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOf__string = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfActivity = (input: { [key: string]: Activity }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: Activity }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1Activity(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfAddressConfiguration = (\n  input: { [key: string]: AddressConfiguration },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: AddressConfiguration }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1AddressConfiguration(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfAttributeDimension = (\n  input: { [key: string]: AttributeDimension },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: AttributeDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1AttributeDimension(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfEndpointSendConfiguration = (\n  input: { [key: string]: EndpointSendConfiguration },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce(\n    (acc: { [key: string]: EndpointSendConfiguration }, [key, value]: [string, any]) => {\n      if (value === null) {\n        return acc;\n      }\n      return {\n        ...acc,\n        [key]: serializeAws_restJson1EndpointSendConfiguration(value, context),\n      };\n    },\n    {}\n  );\n};\n\nconst serializeAws_restJson1MapOfEvent = (input: { [key: string]: Event }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: Event }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1Event(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfEventsBatch = (\n  input: { [key: string]: EventsBatch },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: EventsBatch }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1EventsBatch(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfListOf__string = (\n  input: { [key: string]: string[] },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string[] }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1ListOf__string(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1MapOfMetricDimension = (\n  input: { [key: string]: MetricDimension },\n  context: __SerdeContext\n): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: MetricDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: serializeAws_restJson1MetricDimension(value, context),\n    };\n  }, {});\n};\n\nconst serializeAws_restJson1Message = (input: Message, context: __SerdeContext): any => {\n  return {\n    ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.ImageIconUrl !== undefined && input.ImageIconUrl !== null && { ImageIconUrl: input.ImageIconUrl }),\n    ...(input.ImageSmallIconUrl !== undefined &&\n      input.ImageSmallIconUrl !== null && { ImageSmallIconUrl: input.ImageSmallIconUrl }),\n    ...(input.ImageUrl !== undefined && input.ImageUrl !== null && { ImageUrl: input.ImageUrl }),\n    ...(input.JsonBody !== undefined && input.JsonBody !== null && { JsonBody: input.JsonBody }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.RawContent !== undefined && input.RawContent !== null && { RawContent: input.RawContent }),\n    ...(input.SilentPush !== undefined && input.SilentPush !== null && { SilentPush: input.SilentPush }),\n    ...(input.TimeToLive !== undefined && input.TimeToLive !== null && { TimeToLive: input.TimeToLive }),\n    ...(input.Title !== undefined && input.Title !== null && { Title: input.Title }),\n    ...(input.Url !== undefined && input.Url !== null && { Url: input.Url }),\n  };\n};\n\nconst serializeAws_restJson1MessageConfiguration = (input: MessageConfiguration, context: __SerdeContext): any => {\n  return {\n    ...(input.ADMMessage !== undefined &&\n      input.ADMMessage !== null && { ADMMessage: serializeAws_restJson1Message(input.ADMMessage, context) }),\n    ...(input.APNSMessage !== undefined &&\n      input.APNSMessage !== null && { APNSMessage: serializeAws_restJson1Message(input.APNSMessage, context) }),\n    ...(input.BaiduMessage !== undefined &&\n      input.BaiduMessage !== null && { BaiduMessage: serializeAws_restJson1Message(input.BaiduMessage, context) }),\n    ...(input.CustomMessage !== undefined &&\n      input.CustomMessage !== null && {\n        CustomMessage: serializeAws_restJson1CampaignCustomMessage(input.CustomMessage, context),\n      }),\n    ...(input.DefaultMessage !== undefined &&\n      input.DefaultMessage !== null && {\n        DefaultMessage: serializeAws_restJson1Message(input.DefaultMessage, context),\n      }),\n    ...(input.EmailMessage !== undefined &&\n      input.EmailMessage !== null && {\n        EmailMessage: serializeAws_restJson1CampaignEmailMessage(input.EmailMessage, context),\n      }),\n    ...(input.GCMMessage !== undefined &&\n      input.GCMMessage !== null && { GCMMessage: serializeAws_restJson1Message(input.GCMMessage, context) }),\n    ...(input.SMSMessage !== undefined &&\n      input.SMSMessage !== null && { SMSMessage: serializeAws_restJson1CampaignSmsMessage(input.SMSMessage, context) }),\n  };\n};\n\nconst serializeAws_restJson1MessageRequest = (input: MessageRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Addresses !== undefined &&\n      input.Addresses !== null && {\n        Addresses: serializeAws_restJson1MapOfAddressConfiguration(input.Addresses, context),\n      }),\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.Endpoints !== undefined &&\n      input.Endpoints !== null && {\n        Endpoints: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Endpoints, context),\n      }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TraceId !== undefined && input.TraceId !== null && { TraceId: input.TraceId }),\n  };\n};\n\nconst serializeAws_restJson1MetricDimension = (input: MetricDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.ComparisonOperator !== undefined &&\n      input.ComparisonOperator !== null && { ComparisonOperator: input.ComparisonOperator }),\n    ...(input.Value !== undefined && input.Value !== null && { Value: input.Value }),\n  };\n};\n\nconst serializeAws_restJson1MultiConditionalBranch = (input: MultiConditionalBranch, context: __SerdeContext): any => {\n  return {\n    ...(input.Condition !== undefined &&\n      input.Condition !== null && { Condition: serializeAws_restJson1SimpleCondition(input.Condition, context) }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n  };\n};\n\nconst serializeAws_restJson1MultiConditionalSplitActivity = (\n  input: MultiConditionalSplitActivity,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Branches !== undefined &&\n      input.Branches !== null && {\n        Branches: serializeAws_restJson1ListOfMultiConditionalBranch(input.Branches, context),\n      }),\n    ...(input.DefaultActivity !== undefined &&\n      input.DefaultActivity !== null && { DefaultActivity: input.DefaultActivity }),\n    ...(input.EvaluationWaitTime !== undefined &&\n      input.EvaluationWaitTime !== null && {\n        EvaluationWaitTime: serializeAws_restJson1WaitTime(input.EvaluationWaitTime, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1NumberValidateRequest = (input: NumberValidateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.IsoCountryCode !== undefined &&\n      input.IsoCountryCode !== null && { IsoCountryCode: input.IsoCountryCode }),\n    ...(input.PhoneNumber !== undefined && input.PhoneNumber !== null && { PhoneNumber: input.PhoneNumber }),\n  };\n};\n\nconst serializeAws_restJson1PublicEndpoint = (input: PublicEndpoint, context: __SerdeContext): any => {\n  return {\n    ...(input.Address !== undefined && input.Address !== null && { Address: input.Address }),\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfListOf__string(input.Attributes, context),\n      }),\n    ...(input.ChannelType !== undefined && input.ChannelType !== null && { ChannelType: input.ChannelType }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1EndpointDemographic(input.Demographic, context),\n      }),\n    ...(input.EffectiveDate !== undefined && input.EffectiveDate !== null && { EffectiveDate: input.EffectiveDate }),\n    ...(input.EndpointStatus !== undefined &&\n      input.EndpointStatus !== null && { EndpointStatus: input.EndpointStatus }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1EndpointLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOf__double(input.Metrics, context) }),\n    ...(input.OptOut !== undefined && input.OptOut !== null && { OptOut: input.OptOut }),\n    ...(input.RequestId !== undefined && input.RequestId !== null && { RequestId: input.RequestId }),\n    ...(input.User !== undefined &&\n      input.User !== null && { User: serializeAws_restJson1EndpointUser(input.User, context) }),\n  };\n};\n\nconst serializeAws_restJson1PushMessageActivity = (input: PushMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneyPushMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1PushNotificationTemplateRequest = (\n  input: PushNotificationTemplateRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ADM !== undefined &&\n      input.ADM !== null && { ADM: serializeAws_restJson1AndroidPushNotificationTemplate(input.ADM, context) }),\n    ...(input.APNS !== undefined &&\n      input.APNS !== null && { APNS: serializeAws_restJson1APNSPushNotificationTemplate(input.APNS, context) }),\n    ...(input.Baidu !== undefined &&\n      input.Baidu !== null && { Baidu: serializeAws_restJson1AndroidPushNotificationTemplate(input.Baidu, context) }),\n    ...(input.Default !== undefined &&\n      input.Default !== null && {\n        Default: serializeAws_restJson1DefaultPushNotificationTemplate(input.Default, context),\n      }),\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.GCM !== undefined &&\n      input.GCM !== null && { GCM: serializeAws_restJson1AndroidPushNotificationTemplate(input.GCM, context) }),\n    ...(input.RecommenderId !== undefined && input.RecommenderId !== null && { RecommenderId: input.RecommenderId }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1QuietTime = (input: QuietTime, context: __SerdeContext): any => {\n  return {\n    ...(input.End !== undefined && input.End !== null && { End: input.End }),\n    ...(input.Start !== undefined && input.Start !== null && { Start: input.Start }),\n  };\n};\n\nconst serializeAws_restJson1RandomSplitActivity = (input: RandomSplitActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.Branches !== undefined &&\n      input.Branches !== null && { Branches: serializeAws_restJson1ListOfRandomSplitEntry(input.Branches, context) }),\n  };\n};\n\nconst serializeAws_restJson1RandomSplitEntry = (input: RandomSplitEntry, context: __SerdeContext): any => {\n  return {\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.Percentage !== undefined && input.Percentage !== null && { Percentage: input.Percentage }),\n  };\n};\n\nconst serializeAws_restJson1RawEmail = (input: RawEmail, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: context.base64Encoder(input.Data) }),\n  };\n};\n\nconst serializeAws_restJson1RecencyDimension = (input: RecencyDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.Duration !== undefined && input.Duration !== null && { Duration: input.Duration }),\n    ...(input.RecencyType !== undefined && input.RecencyType !== null && { RecencyType: input.RecencyType }),\n  };\n};\n\nconst serializeAws_restJson1Schedule = (input: Schedule, context: __SerdeContext): any => {\n  return {\n    ...(input.EndTime !== undefined && input.EndTime !== null && { EndTime: input.EndTime }),\n    ...(input.EventFilter !== undefined &&\n      input.EventFilter !== null && {\n        EventFilter: serializeAws_restJson1CampaignEventFilter(input.EventFilter, context),\n      }),\n    ...(input.Frequency !== undefined && input.Frequency !== null && { Frequency: input.Frequency }),\n    ...(input.IsLocalTime !== undefined && input.IsLocalTime !== null && { IsLocalTime: input.IsLocalTime }),\n    ...(input.QuietTime !== undefined &&\n      input.QuietTime !== null && { QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context) }),\n    ...(input.StartTime !== undefined && input.StartTime !== null && { StartTime: input.StartTime }),\n    ...(input.Timezone !== undefined && input.Timezone !== null && { Timezone: input.Timezone }),\n  };\n};\n\nconst serializeAws_restJson1SegmentBehaviors = (input: SegmentBehaviors, context: __SerdeContext): any => {\n  return {\n    ...(input.Recency !== undefined &&\n      input.Recency !== null && { Recency: serializeAws_restJson1RecencyDimension(input.Recency, context) }),\n  };\n};\n\nconst serializeAws_restJson1SegmentCondition = (input: SegmentCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n  };\n};\n\nconst serializeAws_restJson1SegmentDemographics = (input: SegmentDemographics, context: __SerdeContext): any => {\n  return {\n    ...(input.AppVersion !== undefined &&\n      input.AppVersion !== null && { AppVersion: serializeAws_restJson1SetDimension(input.AppVersion, context) }),\n    ...(input.Channel !== undefined &&\n      input.Channel !== null && { Channel: serializeAws_restJson1SetDimension(input.Channel, context) }),\n    ...(input.DeviceType !== undefined &&\n      input.DeviceType !== null && { DeviceType: serializeAws_restJson1SetDimension(input.DeviceType, context) }),\n    ...(input.Make !== undefined &&\n      input.Make !== null && { Make: serializeAws_restJson1SetDimension(input.Make, context) }),\n    ...(input.Model !== undefined &&\n      input.Model !== null && { Model: serializeAws_restJson1SetDimension(input.Model, context) }),\n    ...(input.Platform !== undefined &&\n      input.Platform !== null && { Platform: serializeAws_restJson1SetDimension(input.Platform, context) }),\n  };\n};\n\nconst serializeAws_restJson1SegmentDimensions = (input: SegmentDimensions, context: __SerdeContext): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && {\n        Attributes: serializeAws_restJson1MapOfAttributeDimension(input.Attributes, context),\n      }),\n    ...(input.Behavior !== undefined &&\n      input.Behavior !== null && { Behavior: serializeAws_restJson1SegmentBehaviors(input.Behavior, context) }),\n    ...(input.Demographic !== undefined &&\n      input.Demographic !== null && {\n        Demographic: serializeAws_restJson1SegmentDemographics(input.Demographic, context),\n      }),\n    ...(input.Location !== undefined &&\n      input.Location !== null && { Location: serializeAws_restJson1SegmentLocation(input.Location, context) }),\n    ...(input.Metrics !== undefined &&\n      input.Metrics !== null && { Metrics: serializeAws_restJson1MapOfMetricDimension(input.Metrics, context) }),\n    ...(input.UserAttributes !== undefined &&\n      input.UserAttributes !== null && {\n        UserAttributes: serializeAws_restJson1MapOfAttributeDimension(input.UserAttributes, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1SegmentGroup = (input: SegmentGroup, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && {\n        Dimensions: serializeAws_restJson1ListOfSegmentDimensions(input.Dimensions, context),\n      }),\n    ...(input.SourceSegments !== undefined &&\n      input.SourceSegments !== null && {\n        SourceSegments: serializeAws_restJson1ListOfSegmentReference(input.SourceSegments, context),\n      }),\n    ...(input.SourceType !== undefined && input.SourceType !== null && { SourceType: input.SourceType }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_restJson1SegmentGroupList = (input: SegmentGroupList, context: __SerdeContext): any => {\n  return {\n    ...(input.Groups !== undefined &&\n      input.Groups !== null && { Groups: serializeAws_restJson1ListOfSegmentGroup(input.Groups, context) }),\n    ...(input.Include !== undefined && input.Include !== null && { Include: input.Include }),\n  };\n};\n\nconst serializeAws_restJson1SegmentLocation = (input: SegmentLocation, context: __SerdeContext): any => {\n  return {\n    ...(input.Country !== undefined &&\n      input.Country !== null && { Country: serializeAws_restJson1SetDimension(input.Country, context) }),\n    ...(input.GPSPoint !== undefined &&\n      input.GPSPoint !== null && { GPSPoint: serializeAws_restJson1GPSPointDimension(input.GPSPoint, context) }),\n  };\n};\n\nconst serializeAws_restJson1SegmentReference = (input: SegmentReference, context: __SerdeContext): any => {\n  return {\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.Version !== undefined && input.Version !== null && { Version: input.Version }),\n  };\n};\n\nconst serializeAws_restJson1SendUsersMessageRequest = (\n  input: SendUsersMessageRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Context !== undefined &&\n      input.Context !== null && { Context: serializeAws_restJson1MapOf__string(input.Context, context) }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1DirectMessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TraceId !== undefined && input.TraceId !== null && { TraceId: input.TraceId }),\n    ...(input.Users !== undefined &&\n      input.Users !== null && { Users: serializeAws_restJson1MapOfEndpointSendConfiguration(input.Users, context) }),\n  };\n};\n\nconst serializeAws_restJson1Session = (input: Session, context: __SerdeContext): any => {\n  return {\n    ...(input.Duration !== undefined && input.Duration !== null && { Duration: input.Duration }),\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.StartTimestamp !== undefined &&\n      input.StartTimestamp !== null && { StartTimestamp: input.StartTimestamp }),\n    ...(input.StopTimestamp !== undefined && input.StopTimestamp !== null && { StopTimestamp: input.StopTimestamp }),\n  };\n};\n\nconst serializeAws_restJson1SetDimension = (input: SetDimension, context: __SerdeContext): any => {\n  return {\n    ...(input.DimensionType !== undefined && input.DimensionType !== null && { DimensionType: input.DimensionType }),\n    ...(input.Values !== undefined &&\n      input.Values !== null && { Values: serializeAws_restJson1ListOf__string(input.Values, context) }),\n  };\n};\n\nconst serializeAws_restJson1SimpleCondition = (input: SimpleCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.EventCondition !== undefined &&\n      input.EventCondition !== null && {\n        EventCondition: serializeAws_restJson1EventCondition(input.EventCondition, context),\n      }),\n    ...(input.SegmentCondition !== undefined &&\n      input.SegmentCondition !== null && {\n        SegmentCondition: serializeAws_restJson1SegmentCondition(input.SegmentCondition, context),\n      }),\n    ...(input.SegmentDimensions !== undefined &&\n      input.SegmentDimensions !== null && {\n        segmentDimensions: serializeAws_restJson1SegmentDimensions(input.SegmentDimensions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1SimpleEmail = (input: SimpleEmail, context: __SerdeContext): any => {\n  return {\n    ...(input.HtmlPart !== undefined &&\n      input.HtmlPart !== null && { HtmlPart: serializeAws_restJson1SimpleEmailPart(input.HtmlPart, context) }),\n    ...(input.Subject !== undefined &&\n      input.Subject !== null && { Subject: serializeAws_restJson1SimpleEmailPart(input.Subject, context) }),\n    ...(input.TextPart !== undefined &&\n      input.TextPart !== null && { TextPart: serializeAws_restJson1SimpleEmailPart(input.TextPart, context) }),\n  };\n};\n\nconst serializeAws_restJson1SimpleEmailPart = (input: SimpleEmailPart, context: __SerdeContext): any => {\n  return {\n    ...(input.Charset !== undefined && input.Charset !== null && { Charset: input.Charset }),\n    ...(input.Data !== undefined && input.Data !== null && { Data: input.Data }),\n  };\n};\n\nconst serializeAws_restJson1SMSChannelRequest = (input: SMSChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n    ...(input.ShortCode !== undefined && input.ShortCode !== null && { ShortCode: input.ShortCode }),\n  };\n};\n\nconst serializeAws_restJson1SMSMessage = (input: SMSMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.Keyword !== undefined && input.Keyword !== null && { Keyword: input.Keyword }),\n    ...(input.MediaUrl !== undefined && input.MediaUrl !== null && { MediaUrl: input.MediaUrl }),\n    ...(input.MessageType !== undefined && input.MessageType !== null && { MessageType: input.MessageType }),\n    ...(input.OriginationNumber !== undefined &&\n      input.OriginationNumber !== null && { OriginationNumber: input.OriginationNumber }),\n    ...(input.SenderId !== undefined && input.SenderId !== null && { SenderId: input.SenderId }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1SMSMessageActivity = (input: SMSMessageActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.MessageConfig !== undefined &&\n      input.MessageConfig !== null && {\n        MessageConfig: serializeAws_restJson1JourneySMSMessage(input.MessageConfig, context),\n      }),\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.TemplateName !== undefined && input.TemplateName !== null && { TemplateName: input.TemplateName }),\n    ...(input.TemplateVersion !== undefined &&\n      input.TemplateVersion !== null && { TemplateVersion: input.TemplateVersion }),\n  };\n};\n\nconst serializeAws_restJson1SMSTemplateRequest = (input: SMSTemplateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.RecommenderId !== undefined && input.RecommenderId !== null && { RecommenderId: input.RecommenderId }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1StartCondition = (input: StartCondition, context: __SerdeContext): any => {\n  return {\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EventStartCondition !== undefined &&\n      input.EventStartCondition !== null && {\n        EventStartCondition: serializeAws_restJson1EventStartCondition(input.EventStartCondition, context),\n      }),\n    ...(input.SegmentStartCondition !== undefined &&\n      input.SegmentStartCondition !== null && {\n        SegmentStartCondition: serializeAws_restJson1SegmentCondition(input.SegmentStartCondition, context),\n      }),\n  };\n};\n\nconst serializeAws_restJson1TagsModel = (input: TagsModel, context: __SerdeContext): any => {\n  return {\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1Template = (input: Template, context: __SerdeContext): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.Version !== undefined && input.Version !== null && { Version: input.Version }),\n  };\n};\n\nconst serializeAws_restJson1TemplateActiveVersionRequest = (\n  input: TemplateActiveVersionRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Version !== undefined && input.Version !== null && { Version: input.Version }),\n  };\n};\n\nconst serializeAws_restJson1TemplateConfiguration = (input: TemplateConfiguration, context: __SerdeContext): any => {\n  return {\n    ...(input.EmailTemplate !== undefined &&\n      input.EmailTemplate !== null && { EmailTemplate: serializeAws_restJson1Template(input.EmailTemplate, context) }),\n    ...(input.PushTemplate !== undefined &&\n      input.PushTemplate !== null && { PushTemplate: serializeAws_restJson1Template(input.PushTemplate, context) }),\n    ...(input.SMSTemplate !== undefined &&\n      input.SMSTemplate !== null && { SMSTemplate: serializeAws_restJson1Template(input.SMSTemplate, context) }),\n    ...(input.VoiceTemplate !== undefined &&\n      input.VoiceTemplate !== null && { VoiceTemplate: serializeAws_restJson1Template(input.VoiceTemplate, context) }),\n  };\n};\n\nconst serializeAws_restJson1UpdateAttributesRequest = (\n  input: UpdateAttributesRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Blacklist !== undefined &&\n      input.Blacklist !== null && { Blacklist: serializeAws_restJson1ListOf__string(input.Blacklist, context) }),\n  };\n};\n\nconst serializeAws_restJson1UpdateRecommenderConfigurationShape = (\n  input: UpdateRecommenderConfigurationShape,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Attributes !== undefined &&\n      input.Attributes !== null && { Attributes: serializeAws_restJson1MapOf__string(input.Attributes, context) }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.RecommendationProviderIdType !== undefined &&\n      input.RecommendationProviderIdType !== null && {\n        RecommendationProviderIdType: input.RecommendationProviderIdType,\n      }),\n    ...(input.RecommendationProviderRoleArn !== undefined &&\n      input.RecommendationProviderRoleArn !== null && {\n        RecommendationProviderRoleArn: input.RecommendationProviderRoleArn,\n      }),\n    ...(input.RecommendationProviderUri !== undefined &&\n      input.RecommendationProviderUri !== null && { RecommendationProviderUri: input.RecommendationProviderUri }),\n    ...(input.RecommendationTransformerUri !== undefined &&\n      input.RecommendationTransformerUri !== null && {\n        RecommendationTransformerUri: input.RecommendationTransformerUri,\n      }),\n    ...(input.RecommendationsDisplayName !== undefined &&\n      input.RecommendationsDisplayName !== null && { RecommendationsDisplayName: input.RecommendationsDisplayName }),\n    ...(input.RecommendationsPerMessage !== undefined &&\n      input.RecommendationsPerMessage !== null && { RecommendationsPerMessage: input.RecommendationsPerMessage }),\n  };\n};\n\nconst serializeAws_restJson1VoiceChannelRequest = (input: VoiceChannelRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n  };\n};\n\nconst serializeAws_restJson1VoiceMessage = (input: VoiceMessage, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.LanguageCode !== undefined && input.LanguageCode !== null && { LanguageCode: input.LanguageCode }),\n    ...(input.OriginationNumber !== undefined &&\n      input.OriginationNumber !== null && { OriginationNumber: input.OriginationNumber }),\n    ...(input.Substitutions !== undefined &&\n      input.Substitutions !== null && {\n        Substitutions: serializeAws_restJson1MapOfListOf__string(input.Substitutions, context),\n      }),\n    ...(input.VoiceId !== undefined && input.VoiceId !== null && { VoiceId: input.VoiceId }),\n  };\n};\n\nconst serializeAws_restJson1VoiceTemplateRequest = (input: VoiceTemplateRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Body !== undefined && input.Body !== null && { Body: input.Body }),\n    ...(input.DefaultSubstitutions !== undefined &&\n      input.DefaultSubstitutions !== null && { DefaultSubstitutions: input.DefaultSubstitutions }),\n    ...(input.LanguageCode !== undefined && input.LanguageCode !== null && { LanguageCode: input.LanguageCode }),\n    ...(input.TemplateDescription !== undefined &&\n      input.TemplateDescription !== null && { TemplateDescription: input.TemplateDescription }),\n    ...(input.VoiceId !== undefined && input.VoiceId !== null && { VoiceId: input.VoiceId }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1WaitActivity = (input: WaitActivity, context: __SerdeContext): any => {\n  return {\n    ...(input.NextActivity !== undefined && input.NextActivity !== null && { NextActivity: input.NextActivity }),\n    ...(input.WaitTime !== undefined &&\n      input.WaitTime !== null && { WaitTime: serializeAws_restJson1WaitTime(input.WaitTime, context) }),\n  };\n};\n\nconst serializeAws_restJson1WaitTime = (input: WaitTime, context: __SerdeContext): any => {\n  return {\n    ...(input.WaitFor !== undefined && input.WaitFor !== null && { WaitFor: input.WaitFor }),\n    ...(input.WaitUntil !== undefined && input.WaitUntil !== null && { WaitUntil: input.WaitUntil }),\n  };\n};\n\nconst serializeAws_restJson1WriteApplicationSettingsRequest = (\n  input: WriteApplicationSettingsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.CampaignHook !== undefined &&\n      input.CampaignHook !== null && { CampaignHook: serializeAws_restJson1CampaignHook(input.CampaignHook, context) }),\n    ...(input.CloudWatchMetricsEnabled !== undefined &&\n      input.CloudWatchMetricsEnabled !== null && { CloudWatchMetricsEnabled: input.CloudWatchMetricsEnabled }),\n    ...(input.EventTaggingEnabled !== undefined &&\n      input.EventTaggingEnabled !== null && { EventTaggingEnabled: input.EventTaggingEnabled }),\n    ...(input.Limits !== undefined &&\n      input.Limits !== null && { Limits: serializeAws_restJson1CampaignLimits(input.Limits, context) }),\n    ...(input.QuietTime !== undefined &&\n      input.QuietTime !== null && { QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context) }),\n  };\n};\n\nconst serializeAws_restJson1WriteCampaignRequest = (input: WriteCampaignRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.AdditionalTreatments !== undefined &&\n      input.AdditionalTreatments !== null && {\n        AdditionalTreatments: serializeAws_restJson1ListOfWriteTreatmentResource(input.AdditionalTreatments, context),\n      }),\n    ...(input.CustomDeliveryConfiguration !== undefined &&\n      input.CustomDeliveryConfiguration !== null && {\n        CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(\n          input.CustomDeliveryConfiguration,\n          context\n        ),\n      }),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.HoldoutPercent !== undefined &&\n      input.HoldoutPercent !== null && { HoldoutPercent: input.HoldoutPercent }),\n    ...(input.Hook !== undefined &&\n      input.Hook !== null && { Hook: serializeAws_restJson1CampaignHook(input.Hook, context) }),\n    ...(input.IsPaused !== undefined && input.IsPaused !== null && { IsPaused: input.IsPaused }),\n    ...(input.Limits !== undefined &&\n      input.Limits !== null && { Limits: serializeAws_restJson1CampaignLimits(input.Limits, context) }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.Schedule !== undefined &&\n      input.Schedule !== null && { Schedule: serializeAws_restJson1Schedule(input.Schedule, context) }),\n    ...(input.SegmentId !== undefined && input.SegmentId !== null && { SegmentId: input.SegmentId }),\n    ...(input.SegmentVersion !== undefined &&\n      input.SegmentVersion !== null && { SegmentVersion: input.SegmentVersion }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TreatmentDescription !== undefined &&\n      input.TreatmentDescription !== null && { TreatmentDescription: input.TreatmentDescription }),\n    ...(input.TreatmentName !== undefined && input.TreatmentName !== null && { TreatmentName: input.TreatmentName }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1WriteEventStream = (input: WriteEventStream, context: __SerdeContext): any => {\n  return {\n    ...(input.DestinationStreamArn !== undefined &&\n      input.DestinationStreamArn !== null && { DestinationStreamArn: input.DestinationStreamArn }),\n    ...(input.RoleArn !== undefined && input.RoleArn !== null && { RoleArn: input.RoleArn }),\n  };\n};\n\nconst serializeAws_restJson1WriteJourneyRequest = (input: WriteJourneyRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Activities !== undefined &&\n      input.Activities !== null && { Activities: serializeAws_restJson1MapOfActivity(input.Activities, context) }),\n    ...(input.CreationDate !== undefined && input.CreationDate !== null && { CreationDate: input.CreationDate }),\n    ...(input.LastModifiedDate !== undefined &&\n      input.LastModifiedDate !== null && { LastModifiedDate: input.LastModifiedDate }),\n    ...(input.Limits !== undefined &&\n      input.Limits !== null && { Limits: serializeAws_restJson1JourneyLimits(input.Limits, context) }),\n    ...(input.LocalTime !== undefined && input.LocalTime !== null && { LocalTime: input.LocalTime }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.QuietTime !== undefined &&\n      input.QuietTime !== null && { QuietTime: serializeAws_restJson1QuietTime(input.QuietTime, context) }),\n    ...(input.RefreshFrequency !== undefined &&\n      input.RefreshFrequency !== null && { RefreshFrequency: input.RefreshFrequency }),\n    ...(input.Schedule !== undefined &&\n      input.Schedule !== null && { Schedule: serializeAws_restJson1JourneySchedule(input.Schedule, context) }),\n    ...(input.StartActivity !== undefined && input.StartActivity !== null && { StartActivity: input.StartActivity }),\n    ...(input.StartCondition !== undefined &&\n      input.StartCondition !== null && {\n        StartCondition: serializeAws_restJson1StartCondition(input.StartCondition, context),\n      }),\n    ...(input.State !== undefined && input.State !== null && { State: input.State }),\n  };\n};\n\nconst serializeAws_restJson1WriteSegmentRequest = (input: WriteSegmentRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Dimensions !== undefined &&\n      input.Dimensions !== null && { Dimensions: serializeAws_restJson1SegmentDimensions(input.Dimensions, context) }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.SegmentGroups !== undefined &&\n      input.SegmentGroups !== null && {\n        SegmentGroups: serializeAws_restJson1SegmentGroupList(input.SegmentGroups, context),\n      }),\n    ...(input.tags !== undefined &&\n      input.tags !== null && { tags: serializeAws_restJson1MapOf__string(input.tags, context) }),\n  };\n};\n\nconst serializeAws_restJson1WriteTreatmentResource = (input: WriteTreatmentResource, context: __SerdeContext): any => {\n  return {\n    ...(input.CustomDeliveryConfiguration !== undefined &&\n      input.CustomDeliveryConfiguration !== null && {\n        CustomDeliveryConfiguration: serializeAws_restJson1CustomDeliveryConfiguration(\n          input.CustomDeliveryConfiguration,\n          context\n        ),\n      }),\n    ...(input.MessageConfiguration !== undefined &&\n      input.MessageConfiguration !== null && {\n        MessageConfiguration: serializeAws_restJson1MessageConfiguration(input.MessageConfiguration, context),\n      }),\n    ...(input.Schedule !== undefined &&\n      input.Schedule !== null && { Schedule: serializeAws_restJson1Schedule(input.Schedule, context) }),\n    ...(input.SizePercent !== undefined && input.SizePercent !== null && { SizePercent: input.SizePercent }),\n    ...(input.TemplateConfiguration !== undefined &&\n      input.TemplateConfiguration !== null && {\n        TemplateConfiguration: serializeAws_restJson1TemplateConfiguration(input.TemplateConfiguration, context),\n      }),\n    ...(input.TreatmentDescription !== undefined &&\n      input.TreatmentDescription !== null && { TreatmentDescription: input.TreatmentDescription }),\n    ...(input.TreatmentName !== undefined && input.TreatmentName !== null && { TreatmentName: input.TreatmentName }),\n  };\n};\n\nconst deserializeAws_restJson1ActivitiesResponse = (output: any, context: __SerdeContext): ActivitiesResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfActivityResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Activity = (output: any, context: __SerdeContext): Activity => {\n  return {\n    CUSTOM:\n      output.CUSTOM !== undefined && output.CUSTOM !== null\n        ? deserializeAws_restJson1CustomMessageActivity(output.CUSTOM, context)\n        : undefined,\n    ConditionalSplit:\n      output.ConditionalSplit !== undefined && output.ConditionalSplit !== null\n        ? deserializeAws_restJson1ConditionalSplitActivity(output.ConditionalSplit, context)\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EMAIL:\n      output.EMAIL !== undefined && output.EMAIL !== null\n        ? deserializeAws_restJson1EmailMessageActivity(output.EMAIL, context)\n        : undefined,\n    Holdout:\n      output.Holdout !== undefined && output.Holdout !== null\n        ? deserializeAws_restJson1HoldoutActivity(output.Holdout, context)\n        : undefined,\n    MultiCondition:\n      output.MultiCondition !== undefined && output.MultiCondition !== null\n        ? deserializeAws_restJson1MultiConditionalSplitActivity(output.MultiCondition, context)\n        : undefined,\n    PUSH:\n      output.PUSH !== undefined && output.PUSH !== null\n        ? deserializeAws_restJson1PushMessageActivity(output.PUSH, context)\n        : undefined,\n    RandomSplit:\n      output.RandomSplit !== undefined && output.RandomSplit !== null\n        ? deserializeAws_restJson1RandomSplitActivity(output.RandomSplit, context)\n        : undefined,\n    SMS:\n      output.SMS !== undefined && output.SMS !== null\n        ? deserializeAws_restJson1SMSMessageActivity(output.SMS, context)\n        : undefined,\n    Wait:\n      output.Wait !== undefined && output.Wait !== null\n        ? deserializeAws_restJson1WaitActivity(output.Wait, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ActivityResponse = (output: any, context: __SerdeContext): ActivityResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Result: output.Result !== undefined && output.Result !== null ? output.Result : undefined,\n    ScheduledStart:\n      output.ScheduledStart !== undefined && output.ScheduledStart !== null ? output.ScheduledStart : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    SuccessfulEndpointCount:\n      output.SuccessfulEndpointCount !== undefined && output.SuccessfulEndpointCount !== null\n        ? output.SuccessfulEndpointCount\n        : undefined,\n    TimezonesCompletedCount:\n      output.TimezonesCompletedCount !== undefined && output.TimezonesCompletedCount !== null\n        ? output.TimezonesCompletedCount\n        : undefined,\n    TimezonesTotalCount:\n      output.TimezonesTotalCount !== undefined && output.TimezonesTotalCount !== null\n        ? output.TimezonesTotalCount\n        : undefined,\n    TotalEndpointCount:\n      output.TotalEndpointCount !== undefined && output.TotalEndpointCount !== null\n        ? output.TotalEndpointCount\n        : undefined,\n    TreatmentId: output.TreatmentId !== undefined && output.TreatmentId !== null ? output.TreatmentId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ADMChannelResponse = (output: any, context: __SerdeContext): ADMChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1AndroidPushNotificationTemplate = (\n  output: any,\n  context: __SerdeContext\n): AndroidPushNotificationTemplate => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SmallImageIconUrl:\n      output.SmallImageIconUrl !== undefined && output.SmallImageIconUrl !== null\n        ? output.SmallImageIconUrl\n        : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSChannelResponse = (output: any, context: __SerdeContext): APNSChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSPushNotificationTemplate = (\n  output: any,\n  context: __SerdeContext\n): APNSPushNotificationTemplate => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSSandboxChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): APNSSandboxChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSVoipChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): APNSVoipChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1APNSVoipSandboxChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): APNSVoipSandboxChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultAuthenticationMethod:\n      output.DefaultAuthenticationMethod !== undefined && output.DefaultAuthenticationMethod !== null\n        ? output.DefaultAuthenticationMethod\n        : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    HasTokenKey: output.HasTokenKey !== undefined && output.HasTokenKey !== null ? output.HasTokenKey : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationDateRangeKpiResponse = (\n  output: any,\n  context: __SerdeContext\n): ApplicationDateRangeKpiResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult:\n      output.KpiResult !== undefined && output.KpiResult !== null\n        ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationResponse = (output: any, context: __SerdeContext): ApplicationResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationSettingsResource = (\n  output: any,\n  context: __SerdeContext\n): ApplicationSettingsResource => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignHook:\n      output.CampaignHook !== undefined && output.CampaignHook !== null\n        ? deserializeAws_restJson1CampaignHook(output.CampaignHook, context)\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits:\n      output.Limits !== undefined && output.Limits !== null\n        ? deserializeAws_restJson1CampaignLimits(output.Limits, context)\n        : undefined,\n    QuietTime:\n      output.QuietTime !== undefined && output.QuietTime !== null\n        ? deserializeAws_restJson1QuietTime(output.QuietTime, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ApplicationsResponse = (output: any, context: __SerdeContext): ApplicationsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfApplicationResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1AttributeDimension = (output: any, context: __SerdeContext): AttributeDimension => {\n  return {\n    AttributeType:\n      output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Values:\n      output.Values !== undefined && output.Values !== null\n        ? deserializeAws_restJson1ListOf__string(output.Values, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1AttributesResource = (output: any, context: __SerdeContext): AttributesResource => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    AttributeType:\n      output.AttributeType !== undefined && output.AttributeType !== null ? output.AttributeType : undefined,\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1ListOf__string(output.Attributes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1BaiduChannelResponse = (output: any, context: __SerdeContext): BaiduChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1BaseKpiResult = (output: any, context: __SerdeContext): BaseKpiResult => {\n  return {\n    Rows:\n      output.Rows !== undefined && output.Rows !== null\n        ? deserializeAws_restJson1ListOfResultRow(output.Rows, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignCustomMessage = (output: any, context: __SerdeContext): CampaignCustomMessage => {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignDateRangeKpiResponse = (\n  output: any,\n  context: __SerdeContext\n): CampaignDateRangeKpiResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CampaignId: output.CampaignId !== undefined && output.CampaignId !== null ? output.CampaignId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult:\n      output.KpiResult !== undefined && output.KpiResult !== null\n        ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignEmailMessage = (output: any, context: __SerdeContext): CampaignEmailMessage => {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HtmlBody: output.HtmlBody !== undefined && output.HtmlBody !== null ? output.HtmlBody : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignEventFilter = (output: any, context: __SerdeContext): CampaignEventFilter => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1EventDimensions(output.Dimensions, context)\n        : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignHook = (output: any, context: __SerdeContext): CampaignHook => {\n  return {\n    LambdaFunctionName:\n      output.LambdaFunctionName !== undefined && output.LambdaFunctionName !== null\n        ? output.LambdaFunctionName\n        : undefined,\n    Mode: output.Mode !== undefined && output.Mode !== null ? output.Mode : undefined,\n    WebUrl: output.WebUrl !== undefined && output.WebUrl !== null ? output.WebUrl : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignLimits = (output: any, context: __SerdeContext): CampaignLimits => {\n  return {\n    Daily: output.Daily !== undefined && output.Daily !== null ? output.Daily : undefined,\n    MaximumDuration:\n      output.MaximumDuration !== undefined && output.MaximumDuration !== null ? output.MaximumDuration : undefined,\n    MessagesPerSecond:\n      output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null\n        ? output.MessagesPerSecond\n        : undefined,\n    Total: output.Total !== undefined && output.Total !== null ? output.Total : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignResponse = (output: any, context: __SerdeContext): CampaignResponse => {\n  return {\n    AdditionalTreatments:\n      output.AdditionalTreatments !== undefined && output.AdditionalTreatments !== null\n        ? deserializeAws_restJson1ListOfTreatmentResource(output.AdditionalTreatments, context)\n        : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    CustomDeliveryConfiguration:\n      output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null\n        ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context)\n        : undefined,\n    DefaultState:\n      output.DefaultState !== undefined && output.DefaultState !== null\n        ? deserializeAws_restJson1CampaignState(output.DefaultState, context)\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    HoldoutPercent:\n      output.HoldoutPercent !== undefined && output.HoldoutPercent !== null ? output.HoldoutPercent : undefined,\n    Hook:\n      output.Hook !== undefined && output.Hook !== null\n        ? deserializeAws_restJson1CampaignHook(output.Hook, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsPaused: output.IsPaused !== undefined && output.IsPaused !== null ? output.IsPaused : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits:\n      output.Limits !== undefined && output.Limits !== null\n        ? deserializeAws_restJson1CampaignLimits(output.Limits, context)\n        : undefined,\n    MessageConfiguration:\n      output.MessageConfiguration !== undefined && output.MessageConfiguration !== null\n        ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context)\n        : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Schedule:\n      output.Schedule !== undefined && output.Schedule !== null\n        ? deserializeAws_restJson1Schedule(output.Schedule, context)\n        : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion:\n      output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined,\n    State:\n      output.State !== undefined && output.State !== null\n        ? deserializeAws_restJson1CampaignState(output.State, context)\n        : undefined,\n    TemplateConfiguration:\n      output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null\n        ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context)\n        : undefined,\n    TreatmentDescription:\n      output.TreatmentDescription !== undefined && output.TreatmentDescription !== null\n        ? output.TreatmentDescription\n        : undefined,\n    TreatmentName:\n      output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignSmsMessage = (output: any, context: __SerdeContext): CampaignSmsMessage => {\n  return {\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignsResponse = (output: any, context: __SerdeContext): CampaignsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfCampaignResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CampaignState = (output: any, context: __SerdeContext): CampaignState => {\n  return {\n    CampaignStatus:\n      output.CampaignStatus !== undefined && output.CampaignStatus !== null ? output.CampaignStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ChannelResponse = (output: any, context: __SerdeContext): ChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ChannelsResponse = (output: any, context: __SerdeContext): ChannelsResponse => {\n  return {\n    Channels:\n      output.Channels !== undefined && output.Channels !== null\n        ? deserializeAws_restJson1MapOfChannelResponse(output.Channels, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Condition = (output: any, context: __SerdeContext): Condition => {\n  return {\n    Conditions:\n      output.Conditions !== undefined && output.Conditions !== null\n        ? deserializeAws_restJson1ListOfSimpleCondition(output.Conditions, context)\n        : undefined,\n    Operator: output.Operator !== undefined && output.Operator !== null ? output.Operator : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ConditionalSplitActivity = (\n  output: any,\n  context: __SerdeContext\n): ConditionalSplitActivity => {\n  return {\n    Condition:\n      output.Condition !== undefined && output.Condition !== null\n        ? deserializeAws_restJson1Condition(output.Condition, context)\n        : undefined,\n    EvaluationWaitTime:\n      output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null\n        ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context)\n        : undefined,\n    FalseActivity:\n      output.FalseActivity !== undefined && output.FalseActivity !== null ? output.FalseActivity : undefined,\n    TrueActivity: output.TrueActivity !== undefined && output.TrueActivity !== null ? output.TrueActivity : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CreateTemplateMessageBody = (\n  output: any,\n  context: __SerdeContext\n): CreateTemplateMessageBody => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CustomDeliveryConfiguration = (\n  output: any,\n  context: __SerdeContext\n): CustomDeliveryConfiguration => {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes:\n      output.EndpointTypes !== undefined && output.EndpointTypes !== null\n        ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1CustomMessageActivity = (output: any, context: __SerdeContext): CustomMessageActivity => {\n  return {\n    DeliveryUri: output.DeliveryUri !== undefined && output.DeliveryUri !== null ? output.DeliveryUri : undefined,\n    EndpointTypes:\n      output.EndpointTypes !== undefined && output.EndpointTypes !== null\n        ? deserializeAws_restJson1ListOf__EndpointTypesElement(output.EndpointTypes, context)\n        : undefined,\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneyCustomMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1DefaultPushNotificationTemplate = (\n  output: any,\n  context: __SerdeContext\n): DefaultPushNotificationTemplate => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    Sound: output.Sound !== undefined && output.Sound !== null ? output.Sound : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EmailChannelResponse = (output: any, context: __SerdeContext): EmailChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    ConfigurationSet:\n      output.ConfigurationSet !== undefined && output.ConfigurationSet !== null ? output.ConfigurationSet : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Identity: output.Identity !== undefined && output.Identity !== null ? output.Identity : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    MessagesPerSecond:\n      output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null\n        ? output.MessagesPerSecond\n        : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EmailMessageActivity = (output: any, context: __SerdeContext): EmailMessageActivity => {\n  return {\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneyEmailMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EmailTemplateResponse = (output: any, context: __SerdeContext): EmailTemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    HtmlPart: output.HtmlPart !== undefined && output.HtmlPart !== null ? output.HtmlPart : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId:\n      output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    Subject: output.Subject !== undefined && output.Subject !== null ? output.Subject : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    TextPart: output.TextPart !== undefined && output.TextPart !== null ? output.TextPart : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointDemographic = (output: any, context: __SerdeContext): EndpointDemographic => {\n  return {\n    AppVersion: output.AppVersion !== undefined && output.AppVersion !== null ? output.AppVersion : undefined,\n    Locale: output.Locale !== undefined && output.Locale !== null ? output.Locale : undefined,\n    Make: output.Make !== undefined && output.Make !== null ? output.Make : undefined,\n    Model: output.Model !== undefined && output.Model !== null ? output.Model : undefined,\n    ModelVersion: output.ModelVersion !== undefined && output.ModelVersion !== null ? output.ModelVersion : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PlatformVersion:\n      output.PlatformVersion !== undefined && output.PlatformVersion !== null ? output.PlatformVersion : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointItemResponse = (output: any, context: __SerdeContext): EndpointItemResponse => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointLocation = (output: any, context: __SerdeContext): EndpointLocation => {\n  return {\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined,\n    PostalCode: output.PostalCode !== undefined && output.PostalCode !== null ? output.PostalCode : undefined,\n    Region: output.Region !== undefined && output.Region !== null ? output.Region : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointMessageResult = (output: any, context: __SerdeContext): EndpointMessageResult => {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    DeliveryStatus:\n      output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage:\n      output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointResponse = (output: any, context: __SerdeContext): EndpointResponse => {\n  return {\n    Address: output.Address !== undefined && output.Address !== null ? output.Address : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOfListOf__string(output.Attributes, context)\n        : undefined,\n    ChannelType: output.ChannelType !== undefined && output.ChannelType !== null ? output.ChannelType : undefined,\n    CohortId: output.CohortId !== undefined && output.CohortId !== null ? output.CohortId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Demographic:\n      output.Demographic !== undefined && output.Demographic !== null\n        ? deserializeAws_restJson1EndpointDemographic(output.Demographic, context)\n        : undefined,\n    EffectiveDate:\n      output.EffectiveDate !== undefined && output.EffectiveDate !== null ? output.EffectiveDate : undefined,\n    EndpointStatus:\n      output.EndpointStatus !== undefined && output.EndpointStatus !== null ? output.EndpointStatus : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Location:\n      output.Location !== undefined && output.Location !== null\n        ? deserializeAws_restJson1EndpointLocation(output.Location, context)\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOf__double(output.Metrics, context)\n        : undefined,\n    OptOut: output.OptOut !== undefined && output.OptOut !== null ? output.OptOut : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    User:\n      output.User !== undefined && output.User !== null\n        ? deserializeAws_restJson1EndpointUser(output.User, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointsResponse = (output: any, context: __SerdeContext): EndpointsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfEndpointResponse(output.Item, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EndpointUser = (output: any, context: __SerdeContext): EndpointUser => {\n  return {\n    UserAttributes:\n      output.UserAttributes !== undefined && output.UserAttributes !== null\n        ? deserializeAws_restJson1MapOfListOf__string(output.UserAttributes, context)\n        : undefined,\n    UserId: output.UserId !== undefined && output.UserId !== null ? output.UserId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventCondition = (output: any, context: __SerdeContext): EventCondition => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1EventDimensions(output.Dimensions, context)\n        : undefined,\n    MessageActivity:\n      output.MessageActivity !== undefined && output.MessageActivity !== null ? output.MessageActivity : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventDimensions = (output: any, context: __SerdeContext): EventDimensions => {\n  return {\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context)\n        : undefined,\n    EventType:\n      output.EventType !== undefined && output.EventType !== null\n        ? deserializeAws_restJson1SetDimension(output.EventType, context)\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventFilter = (output: any, context: __SerdeContext): EventFilter => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1EventDimensions(output.Dimensions, context)\n        : undefined,\n    FilterType: output.FilterType !== undefined && output.FilterType !== null ? output.FilterType : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventItemResponse = (output: any, context: __SerdeContext): EventItemResponse => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventsResponse = (output: any, context: __SerdeContext): EventsResponse => {\n  return {\n    Results:\n      output.Results !== undefined && output.Results !== null\n        ? deserializeAws_restJson1MapOfItemResponse(output.Results, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventStartCondition = (output: any, context: __SerdeContext): EventStartCondition => {\n  return {\n    EventFilter:\n      output.EventFilter !== undefined && output.EventFilter !== null\n        ? deserializeAws_restJson1EventFilter(output.EventFilter, context)\n        : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1EventStream = (output: any, context: __SerdeContext): EventStream => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    DestinationStreamArn:\n      output.DestinationStreamArn !== undefined && output.DestinationStreamArn !== null\n        ? output.DestinationStreamArn\n        : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    LastUpdatedBy:\n      output.LastUpdatedBy !== undefined && output.LastUpdatedBy !== null ? output.LastUpdatedBy : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ExportJobResource = (output: any, context: __SerdeContext): ExportJobResource => {\n  return {\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3UrlPrefix: output.S3UrlPrefix !== undefined && output.S3UrlPrefix !== null ? output.S3UrlPrefix : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentVersion:\n      output.SegmentVersion !== undefined && output.SegmentVersion !== null ? output.SegmentVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ExportJobResponse = (output: any, context: __SerdeContext): ExportJobResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces:\n      output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate:\n      output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition:\n      output.Definition !== undefined && output.Definition !== null\n        ? deserializeAws_restJson1ExportJobResource(output.Definition, context)\n        : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures:\n      output.Failures !== undefined && output.Failures !== null\n        ? deserializeAws_restJson1ListOf__string(output.Failures, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures:\n      output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed:\n      output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ExportJobsResponse = (output: any, context: __SerdeContext): ExportJobsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfExportJobResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1GCMChannelResponse = (output: any, context: __SerdeContext): GCMChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Credential: output.Credential !== undefined && output.Credential !== null ? output.Credential : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1GPSCoordinates = (output: any, context: __SerdeContext): GPSCoordinates => {\n  return {\n    Latitude: output.Latitude !== undefined && output.Latitude !== null ? output.Latitude : undefined,\n    Longitude: output.Longitude !== undefined && output.Longitude !== null ? output.Longitude : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1GPSPointDimension = (output: any, context: __SerdeContext): GPSPointDimension => {\n  return {\n    Coordinates:\n      output.Coordinates !== undefined && output.Coordinates !== null\n        ? deserializeAws_restJson1GPSCoordinates(output.Coordinates, context)\n        : undefined,\n    RangeInKilometers:\n      output.RangeInKilometers !== undefined && output.RangeInKilometers !== null\n        ? output.RangeInKilometers\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1HoldoutActivity = (output: any, context: __SerdeContext): HoldoutActivity => {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ImportJobResource = (output: any, context: __SerdeContext): ImportJobResource => {\n  return {\n    DefineSegment:\n      output.DefineSegment !== undefined && output.DefineSegment !== null ? output.DefineSegment : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RegisterEndpoints:\n      output.RegisterEndpoints !== undefined && output.RegisterEndpoints !== null\n        ? output.RegisterEndpoints\n        : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n    SegmentName: output.SegmentName !== undefined && output.SegmentName !== null ? output.SegmentName : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ImportJobResponse = (output: any, context: __SerdeContext): ImportJobResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CompletedPieces:\n      output.CompletedPieces !== undefined && output.CompletedPieces !== null ? output.CompletedPieces : undefined,\n    CompletionDate:\n      output.CompletionDate !== undefined && output.CompletionDate !== null ? output.CompletionDate : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Definition:\n      output.Definition !== undefined && output.Definition !== null\n        ? deserializeAws_restJson1ImportJobResource(output.Definition, context)\n        : undefined,\n    FailedPieces: output.FailedPieces !== undefined && output.FailedPieces !== null ? output.FailedPieces : undefined,\n    Failures:\n      output.Failures !== undefined && output.Failures !== null\n        ? deserializeAws_restJson1ListOf__string(output.Failures, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    TotalFailures:\n      output.TotalFailures !== undefined && output.TotalFailures !== null ? output.TotalFailures : undefined,\n    TotalPieces: output.TotalPieces !== undefined && output.TotalPieces !== null ? output.TotalPieces : undefined,\n    TotalProcessed:\n      output.TotalProcessed !== undefined && output.TotalProcessed !== null ? output.TotalProcessed : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ImportJobsResponse = (output: any, context: __SerdeContext): ImportJobsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfImportJobResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ItemResponse = (output: any, context: __SerdeContext): ItemResponse => {\n  return {\n    EndpointItemResponse:\n      output.EndpointItemResponse !== undefined && output.EndpointItemResponse !== null\n        ? deserializeAws_restJson1EndpointItemResponse(output.EndpointItemResponse, context)\n        : undefined,\n    EventsItemResponse:\n      output.EventsItemResponse !== undefined && output.EventsItemResponse !== null\n        ? deserializeAws_restJson1MapOfEventItemResponse(output.EventsItemResponse, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyCustomMessage = (output: any, context: __SerdeContext): JourneyCustomMessage => {\n  return {\n    Data: output.Data !== undefined && output.Data !== null ? output.Data : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyDateRangeKpiResponse = (\n  output: any,\n  context: __SerdeContext\n): JourneyDateRangeKpiResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    KpiName: output.KpiName !== undefined && output.KpiName !== null ? output.KpiName : undefined,\n    KpiResult:\n      output.KpiResult !== undefined && output.KpiResult !== null\n        ? deserializeAws_restJson1BaseKpiResult(output.KpiResult, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyEmailMessage = (output: any, context: __SerdeContext): JourneyEmailMessage => {\n  return {\n    FromAddress: output.FromAddress !== undefined && output.FromAddress !== null ? output.FromAddress : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyExecutionActivityMetricsResponse = (\n  output: any,\n  context: __SerdeContext\n): JourneyExecutionActivityMetricsResponse => {\n  return {\n    ActivityType: output.ActivityType !== undefined && output.ActivityType !== null ? output.ActivityType : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyActivityId:\n      output.JourneyActivityId !== undefined && output.JourneyActivityId !== null\n        ? output.JourneyActivityId\n        : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime:\n      output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null\n        ? output.LastEvaluatedTime\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOf__string(output.Metrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyExecutionMetricsResponse = (\n  output: any,\n  context: __SerdeContext\n): JourneyExecutionMetricsResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    JourneyId: output.JourneyId !== undefined && output.JourneyId !== null ? output.JourneyId : undefined,\n    LastEvaluatedTime:\n      output.LastEvaluatedTime !== undefined && output.LastEvaluatedTime !== null\n        ? output.LastEvaluatedTime\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOf__string(output.Metrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyLimits = (output: any, context: __SerdeContext): JourneyLimits => {\n  return {\n    DailyCap: output.DailyCap !== undefined && output.DailyCap !== null ? output.DailyCap : undefined,\n    EndpointReentryCap:\n      output.EndpointReentryCap !== undefined && output.EndpointReentryCap !== null\n        ? output.EndpointReentryCap\n        : undefined,\n    MessagesPerSecond:\n      output.MessagesPerSecond !== undefined && output.MessagesPerSecond !== null\n        ? output.MessagesPerSecond\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyPushMessage = (output: any, context: __SerdeContext): JourneyPushMessage => {\n  return {\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneyResponse = (output: any, context: __SerdeContext): JourneyResponse => {\n  return {\n    Activities:\n      output.Activities !== undefined && output.Activities !== null\n        ? deserializeAws_restJson1MapOfActivity(output.Activities, context)\n        : undefined,\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Limits:\n      output.Limits !== undefined && output.Limits !== null\n        ? deserializeAws_restJson1JourneyLimits(output.Limits, context)\n        : undefined,\n    LocalTime: output.LocalTime !== undefined && output.LocalTime !== null ? output.LocalTime : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    QuietTime:\n      output.QuietTime !== undefined && output.QuietTime !== null\n        ? deserializeAws_restJson1QuietTime(output.QuietTime, context)\n        : undefined,\n    RefreshFrequency:\n      output.RefreshFrequency !== undefined && output.RefreshFrequency !== null ? output.RefreshFrequency : undefined,\n    Schedule:\n      output.Schedule !== undefined && output.Schedule !== null\n        ? deserializeAws_restJson1JourneySchedule(output.Schedule, context)\n        : undefined,\n    StartActivity:\n      output.StartActivity !== undefined && output.StartActivity !== null ? output.StartActivity : undefined,\n    StartCondition:\n      output.StartCondition !== undefined && output.StartCondition !== null\n        ? deserializeAws_restJson1StartCondition(output.StartCondition, context)\n        : undefined,\n    State: output.State !== undefined && output.State !== null ? output.State : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneySchedule = (output: any, context: __SerdeContext): JourneySchedule => {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(output.EndTime) : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? new Date(output.StartTime) : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneySMSMessage = (output: any, context: __SerdeContext): JourneySMSMessage => {\n  return {\n    MessageType: output.MessageType !== undefined && output.MessageType !== null ? output.MessageType : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1JourneysResponse = (output: any, context: __SerdeContext): JourneysResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfJourneyResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ListOf__EndpointTypesElement = (\n  output: any,\n  context: __SerdeContext\n): (__EndpointTypesElement | string)[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restJson1ListOf__string = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_restJson1ListOfActivityResponse = (output: any, context: __SerdeContext): ActivityResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ActivityResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfApplicationResponse = (\n  output: any,\n  context: __SerdeContext\n): ApplicationResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ApplicationResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfCampaignResponse = (output: any, context: __SerdeContext): CampaignResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1CampaignResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfEndpointResponse = (output: any, context: __SerdeContext): EndpointResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1EndpointResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfExportJobResponse = (output: any, context: __SerdeContext): ExportJobResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ExportJobResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfImportJobResponse = (output: any, context: __SerdeContext): ImportJobResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ImportJobResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfJourneyResponse = (output: any, context: __SerdeContext): JourneyResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1JourneyResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfMultiConditionalBranch = (\n  output: any,\n  context: __SerdeContext\n): MultiConditionalBranch[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1MultiConditionalBranch(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfRandomSplitEntry = (output: any, context: __SerdeContext): RandomSplitEntry[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1RandomSplitEntry(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfRecommenderConfigurationResponse = (\n  output: any,\n  context: __SerdeContext\n): RecommenderConfigurationResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1RecommenderConfigurationResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfResultRow = (output: any, context: __SerdeContext): ResultRow[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ResultRow(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfResultRowValue = (output: any, context: __SerdeContext): ResultRowValue[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1ResultRowValue(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentDimensions = (output: any, context: __SerdeContext): SegmentDimensions[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentDimensions(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentGroup = (output: any, context: __SerdeContext): SegmentGroup[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentGroup(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentReference = (output: any, context: __SerdeContext): SegmentReference[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentReference(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSegmentResponse = (output: any, context: __SerdeContext): SegmentResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SegmentResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfSimpleCondition = (output: any, context: __SerdeContext): SimpleCondition[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1SimpleCondition(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfTemplateResponse = (output: any, context: __SerdeContext): TemplateResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1TemplateResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfTemplateVersionResponse = (\n  output: any,\n  context: __SerdeContext\n): TemplateVersionResponse[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1TemplateVersionResponse(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListOfTreatmentResource = (output: any, context: __SerdeContext): TreatmentResource[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_restJson1TreatmentResource(entry, context);\n    });\n};\n\nconst deserializeAws_restJson1ListRecommenderConfigurationsResponse = (\n  output: any,\n  context: __SerdeContext\n): ListRecommenderConfigurationsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfRecommenderConfigurationResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MapOf__double = (output: any, context: __SerdeContext): { [key: string]: number } => {\n  return Object.entries(output).reduce((acc: { [key: string]: number }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOf__integer = (output: any, context: __SerdeContext): { [key: string]: number } => {\n  return Object.entries(output).reduce((acc: { [key: string]: number }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOf__string = (output: any, context: __SerdeContext): { [key: string]: string } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfActivity = (output: any, context: __SerdeContext): { [key: string]: Activity } => {\n  return Object.entries(output).reduce((acc: { [key: string]: Activity }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1Activity(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfAttributeDimension = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: AttributeDimension } => {\n  return Object.entries(output).reduce((acc: { [key: string]: AttributeDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1AttributeDimension(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfChannelResponse = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: ChannelResponse } => {\n  return Object.entries(output).reduce((acc: { [key: string]: ChannelResponse }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1ChannelResponse(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfEndpointMessageResult = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: EndpointMessageResult } => {\n  return Object.entries(output).reduce((acc: { [key: string]: EndpointMessageResult }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1EndpointMessageResult(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfEventItemResponse = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: EventItemResponse } => {\n  return Object.entries(output).reduce((acc: { [key: string]: EventItemResponse }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1EventItemResponse(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfItemResponse = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: ItemResponse } => {\n  return Object.entries(output).reduce((acc: { [key: string]: ItemResponse }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1ItemResponse(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfListOf__string = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: string[] } => {\n  return Object.entries(output).reduce((acc: { [key: string]: string[] }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1ListOf__string(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfMapOfEndpointMessageResult = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: { [key: string]: EndpointMessageResult } } => {\n  return Object.entries(output).reduce(\n    (acc: { [key: string]: { [key: string]: EndpointMessageResult } }, [key, value]: [string, any]) => {\n      if (value === null) {\n        return acc;\n      }\n      return {\n        ...acc,\n        [key]: deserializeAws_restJson1MapOfEndpointMessageResult(value, context),\n      };\n    },\n    {}\n  );\n};\n\nconst deserializeAws_restJson1MapOfMessageResult = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: MessageResult } => {\n  return Object.entries(output).reduce((acc: { [key: string]: MessageResult }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1MessageResult(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1MapOfMetricDimension = (\n  output: any,\n  context: __SerdeContext\n): { [key: string]: MetricDimension } => {\n  return Object.entries(output).reduce((acc: { [key: string]: MetricDimension }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: deserializeAws_restJson1MetricDimension(value, context),\n    };\n  }, {});\n};\n\nconst deserializeAws_restJson1Message = (output: any, context: __SerdeContext): Message => {\n  return {\n    Action: output.Action !== undefined && output.Action !== null ? output.Action : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    ImageIconUrl: output.ImageIconUrl !== undefined && output.ImageIconUrl !== null ? output.ImageIconUrl : undefined,\n    ImageSmallIconUrl:\n      output.ImageSmallIconUrl !== undefined && output.ImageSmallIconUrl !== null\n        ? output.ImageSmallIconUrl\n        : undefined,\n    ImageUrl: output.ImageUrl !== undefined && output.ImageUrl !== null ? output.ImageUrl : undefined,\n    JsonBody: output.JsonBody !== undefined && output.JsonBody !== null ? output.JsonBody : undefined,\n    MediaUrl: output.MediaUrl !== undefined && output.MediaUrl !== null ? output.MediaUrl : undefined,\n    RawContent: output.RawContent !== undefined && output.RawContent !== null ? output.RawContent : undefined,\n    SilentPush: output.SilentPush !== undefined && output.SilentPush !== null ? output.SilentPush : undefined,\n    TimeToLive: output.TimeToLive !== undefined && output.TimeToLive !== null ? output.TimeToLive : undefined,\n    Title: output.Title !== undefined && output.Title !== null ? output.Title : undefined,\n    Url: output.Url !== undefined && output.Url !== null ? output.Url : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageBody = (output: any, context: __SerdeContext): MessageBody => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageConfiguration = (output: any, context: __SerdeContext): MessageConfiguration => {\n  return {\n    ADMMessage:\n      output.ADMMessage !== undefined && output.ADMMessage !== null\n        ? deserializeAws_restJson1Message(output.ADMMessage, context)\n        : undefined,\n    APNSMessage:\n      output.APNSMessage !== undefined && output.APNSMessage !== null\n        ? deserializeAws_restJson1Message(output.APNSMessage, context)\n        : undefined,\n    BaiduMessage:\n      output.BaiduMessage !== undefined && output.BaiduMessage !== null\n        ? deserializeAws_restJson1Message(output.BaiduMessage, context)\n        : undefined,\n    CustomMessage:\n      output.CustomMessage !== undefined && output.CustomMessage !== null\n        ? deserializeAws_restJson1CampaignCustomMessage(output.CustomMessage, context)\n        : undefined,\n    DefaultMessage:\n      output.DefaultMessage !== undefined && output.DefaultMessage !== null\n        ? deserializeAws_restJson1Message(output.DefaultMessage, context)\n        : undefined,\n    EmailMessage:\n      output.EmailMessage !== undefined && output.EmailMessage !== null\n        ? deserializeAws_restJson1CampaignEmailMessage(output.EmailMessage, context)\n        : undefined,\n    GCMMessage:\n      output.GCMMessage !== undefined && output.GCMMessage !== null\n        ? deserializeAws_restJson1Message(output.GCMMessage, context)\n        : undefined,\n    SMSMessage:\n      output.SMSMessage !== undefined && output.SMSMessage !== null\n        ? deserializeAws_restJson1CampaignSmsMessage(output.SMSMessage, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageResponse = (output: any, context: __SerdeContext): MessageResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    EndpointResult:\n      output.EndpointResult !== undefined && output.EndpointResult !== null\n        ? deserializeAws_restJson1MapOfEndpointMessageResult(output.EndpointResult, context)\n        : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result:\n      output.Result !== undefined && output.Result !== null\n        ? deserializeAws_restJson1MapOfMessageResult(output.Result, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MessageResult = (output: any, context: __SerdeContext): MessageResult => {\n  return {\n    DeliveryStatus:\n      output.DeliveryStatus !== undefined && output.DeliveryStatus !== null ? output.DeliveryStatus : undefined,\n    MessageId: output.MessageId !== undefined && output.MessageId !== null ? output.MessageId : undefined,\n    StatusCode: output.StatusCode !== undefined && output.StatusCode !== null ? output.StatusCode : undefined,\n    StatusMessage:\n      output.StatusMessage !== undefined && output.StatusMessage !== null ? output.StatusMessage : undefined,\n    UpdatedToken: output.UpdatedToken !== undefined && output.UpdatedToken !== null ? output.UpdatedToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MetricDimension = (output: any, context: __SerdeContext): MetricDimension => {\n  return {\n    ComparisonOperator:\n      output.ComparisonOperator !== undefined && output.ComparisonOperator !== null\n        ? output.ComparisonOperator\n        : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MultiConditionalBranch = (\n  output: any,\n  context: __SerdeContext\n): MultiConditionalBranch => {\n  return {\n    Condition:\n      output.Condition !== undefined && output.Condition !== null\n        ? deserializeAws_restJson1SimpleCondition(output.Condition, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1MultiConditionalSplitActivity = (\n  output: any,\n  context: __SerdeContext\n): MultiConditionalSplitActivity => {\n  return {\n    Branches:\n      output.Branches !== undefined && output.Branches !== null\n        ? deserializeAws_restJson1ListOfMultiConditionalBranch(output.Branches, context)\n        : undefined,\n    DefaultActivity:\n      output.DefaultActivity !== undefined && output.DefaultActivity !== null ? output.DefaultActivity : undefined,\n    EvaluationWaitTime:\n      output.EvaluationWaitTime !== undefined && output.EvaluationWaitTime !== null\n        ? deserializeAws_restJson1WaitTime(output.EvaluationWaitTime, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1NumberValidateResponse = (\n  output: any,\n  context: __SerdeContext\n): NumberValidateResponse => {\n  return {\n    Carrier: output.Carrier !== undefined && output.Carrier !== null ? output.Carrier : undefined,\n    City: output.City !== undefined && output.City !== null ? output.City : undefined,\n    CleansedPhoneNumberE164:\n      output.CleansedPhoneNumberE164 !== undefined && output.CleansedPhoneNumberE164 !== null\n        ? output.CleansedPhoneNumberE164\n        : undefined,\n    CleansedPhoneNumberNational:\n      output.CleansedPhoneNumberNational !== undefined && output.CleansedPhoneNumberNational !== null\n        ? output.CleansedPhoneNumberNational\n        : undefined,\n    Country: output.Country !== undefined && output.Country !== null ? output.Country : undefined,\n    CountryCodeIso2:\n      output.CountryCodeIso2 !== undefined && output.CountryCodeIso2 !== null ? output.CountryCodeIso2 : undefined,\n    CountryCodeNumeric:\n      output.CountryCodeNumeric !== undefined && output.CountryCodeNumeric !== null\n        ? output.CountryCodeNumeric\n        : undefined,\n    County: output.County !== undefined && output.County !== null ? output.County : undefined,\n    OriginalCountryCodeIso2:\n      output.OriginalCountryCodeIso2 !== undefined && output.OriginalCountryCodeIso2 !== null\n        ? output.OriginalCountryCodeIso2\n        : undefined,\n    OriginalPhoneNumber:\n      output.OriginalPhoneNumber !== undefined && output.OriginalPhoneNumber !== null\n        ? output.OriginalPhoneNumber\n        : undefined,\n    PhoneType: output.PhoneType !== undefined && output.PhoneType !== null ? output.PhoneType : undefined,\n    PhoneTypeCode:\n      output.PhoneTypeCode !== undefined && output.PhoneTypeCode !== null ? output.PhoneTypeCode : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n    ZipCode: output.ZipCode !== undefined && output.ZipCode !== null ? output.ZipCode : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1PushMessageActivity = (output: any, context: __SerdeContext): PushMessageActivity => {\n  return {\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneyPushMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1PushNotificationTemplateResponse = (\n  output: any,\n  context: __SerdeContext\n): PushNotificationTemplateResponse => {\n  return {\n    ADM:\n      output.ADM !== undefined && output.ADM !== null\n        ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.ADM, context)\n        : undefined,\n    APNS:\n      output.APNS !== undefined && output.APNS !== null\n        ? deserializeAws_restJson1APNSPushNotificationTemplate(output.APNS, context)\n        : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Baidu:\n      output.Baidu !== undefined && output.Baidu !== null\n        ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.Baidu, context)\n        : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Default:\n      output.Default !== undefined && output.Default !== null\n        ? deserializeAws_restJson1DefaultPushNotificationTemplate(output.Default, context)\n        : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    GCM:\n      output.GCM !== undefined && output.GCM !== null\n        ? deserializeAws_restJson1AndroidPushNotificationTemplate(output.GCM, context)\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId:\n      output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1QuietTime = (output: any, context: __SerdeContext): QuietTime => {\n  return {\n    End: output.End !== undefined && output.End !== null ? output.End : undefined,\n    Start: output.Start !== undefined && output.Start !== null ? output.Start : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RandomSplitActivity = (output: any, context: __SerdeContext): RandomSplitActivity => {\n  return {\n    Branches:\n      output.Branches !== undefined && output.Branches !== null\n        ? deserializeAws_restJson1ListOfRandomSplitEntry(output.Branches, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RandomSplitEntry = (output: any, context: __SerdeContext): RandomSplitEntry => {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    Percentage: output.Percentage !== undefined && output.Percentage !== null ? output.Percentage : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RecencyDimension = (output: any, context: __SerdeContext): RecencyDimension => {\n  return {\n    Duration: output.Duration !== undefined && output.Duration !== null ? output.Duration : undefined,\n    RecencyType: output.RecencyType !== undefined && output.RecencyType !== null ? output.RecencyType : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1RecommenderConfigurationResponse = (\n  output: any,\n  context: __SerdeContext\n): RecommenderConfigurationResponse => {\n  return {\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOf__string(output.Attributes, context)\n        : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    RecommendationProviderIdType:\n      output.RecommendationProviderIdType !== undefined && output.RecommendationProviderIdType !== null\n        ? output.RecommendationProviderIdType\n        : undefined,\n    RecommendationProviderRoleArn:\n      output.RecommendationProviderRoleArn !== undefined && output.RecommendationProviderRoleArn !== null\n        ? output.RecommendationProviderRoleArn\n        : undefined,\n    RecommendationProviderUri:\n      output.RecommendationProviderUri !== undefined && output.RecommendationProviderUri !== null\n        ? output.RecommendationProviderUri\n        : undefined,\n    RecommendationTransformerUri:\n      output.RecommendationTransformerUri !== undefined && output.RecommendationTransformerUri !== null\n        ? output.RecommendationTransformerUri\n        : undefined,\n    RecommendationsDisplayName:\n      output.RecommendationsDisplayName !== undefined && output.RecommendationsDisplayName !== null\n        ? output.RecommendationsDisplayName\n        : undefined,\n    RecommendationsPerMessage:\n      output.RecommendationsPerMessage !== undefined && output.RecommendationsPerMessage !== null\n        ? output.RecommendationsPerMessage\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ResultRow = (output: any, context: __SerdeContext): ResultRow => {\n  return {\n    GroupedBys:\n      output.GroupedBys !== undefined && output.GroupedBys !== null\n        ? deserializeAws_restJson1ListOfResultRowValue(output.GroupedBys, context)\n        : undefined,\n    Values:\n      output.Values !== undefined && output.Values !== null\n        ? deserializeAws_restJson1ListOfResultRowValue(output.Values, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1ResultRowValue = (output: any, context: __SerdeContext): ResultRowValue => {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Schedule = (output: any, context: __SerdeContext): Schedule => {\n  return {\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? output.EndTime : undefined,\n    EventFilter:\n      output.EventFilter !== undefined && output.EventFilter !== null\n        ? deserializeAws_restJson1CampaignEventFilter(output.EventFilter, context)\n        : undefined,\n    Frequency: output.Frequency !== undefined && output.Frequency !== null ? output.Frequency : undefined,\n    IsLocalTime: output.IsLocalTime !== undefined && output.IsLocalTime !== null ? output.IsLocalTime : undefined,\n    QuietTime:\n      output.QuietTime !== undefined && output.QuietTime !== null\n        ? deserializeAws_restJson1QuietTime(output.QuietTime, context)\n        : undefined,\n    StartTime: output.StartTime !== undefined && output.StartTime !== null ? output.StartTime : undefined,\n    Timezone: output.Timezone !== undefined && output.Timezone !== null ? output.Timezone : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentBehaviors = (output: any, context: __SerdeContext): SegmentBehaviors => {\n  return {\n    Recency:\n      output.Recency !== undefined && output.Recency !== null\n        ? deserializeAws_restJson1RecencyDimension(output.Recency, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentCondition = (output: any, context: __SerdeContext): SegmentCondition => {\n  return {\n    SegmentId: output.SegmentId !== undefined && output.SegmentId !== null ? output.SegmentId : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentDemographics = (output: any, context: __SerdeContext): SegmentDemographics => {\n  return {\n    AppVersion:\n      output.AppVersion !== undefined && output.AppVersion !== null\n        ? deserializeAws_restJson1SetDimension(output.AppVersion, context)\n        : undefined,\n    Channel:\n      output.Channel !== undefined && output.Channel !== null\n        ? deserializeAws_restJson1SetDimension(output.Channel, context)\n        : undefined,\n    DeviceType:\n      output.DeviceType !== undefined && output.DeviceType !== null\n        ? deserializeAws_restJson1SetDimension(output.DeviceType, context)\n        : undefined,\n    Make:\n      output.Make !== undefined && output.Make !== null\n        ? deserializeAws_restJson1SetDimension(output.Make, context)\n        : undefined,\n    Model:\n      output.Model !== undefined && output.Model !== null\n        ? deserializeAws_restJson1SetDimension(output.Model, context)\n        : undefined,\n    Platform:\n      output.Platform !== undefined && output.Platform !== null\n        ? deserializeAws_restJson1SetDimension(output.Platform, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentDimensions = (output: any, context: __SerdeContext): SegmentDimensions => {\n  return {\n    Attributes:\n      output.Attributes !== undefined && output.Attributes !== null\n        ? deserializeAws_restJson1MapOfAttributeDimension(output.Attributes, context)\n        : undefined,\n    Behavior:\n      output.Behavior !== undefined && output.Behavior !== null\n        ? deserializeAws_restJson1SegmentBehaviors(output.Behavior, context)\n        : undefined,\n    Demographic:\n      output.Demographic !== undefined && output.Demographic !== null\n        ? deserializeAws_restJson1SegmentDemographics(output.Demographic, context)\n        : undefined,\n    Location:\n      output.Location !== undefined && output.Location !== null\n        ? deserializeAws_restJson1SegmentLocation(output.Location, context)\n        : undefined,\n    Metrics:\n      output.Metrics !== undefined && output.Metrics !== null\n        ? deserializeAws_restJson1MapOfMetricDimension(output.Metrics, context)\n        : undefined,\n    UserAttributes:\n      output.UserAttributes !== undefined && output.UserAttributes !== null\n        ? deserializeAws_restJson1MapOfAttributeDimension(output.UserAttributes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentGroup = (output: any, context: __SerdeContext): SegmentGroup => {\n  return {\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1ListOfSegmentDimensions(output.Dimensions, context)\n        : undefined,\n    SourceSegments:\n      output.SourceSegments !== undefined && output.SourceSegments !== null\n        ? deserializeAws_restJson1ListOfSegmentReference(output.SourceSegments, context)\n        : undefined,\n    SourceType: output.SourceType !== undefined && output.SourceType !== null ? output.SourceType : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentGroupList = (output: any, context: __SerdeContext): SegmentGroupList => {\n  return {\n    Groups:\n      output.Groups !== undefined && output.Groups !== null\n        ? deserializeAws_restJson1ListOfSegmentGroup(output.Groups, context)\n        : undefined,\n    Include: output.Include !== undefined && output.Include !== null ? output.Include : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentImportResource = (output: any, context: __SerdeContext): SegmentImportResource => {\n  return {\n    ChannelCounts:\n      output.ChannelCounts !== undefined && output.ChannelCounts !== null\n        ? deserializeAws_restJson1MapOf__integer(output.ChannelCounts, context)\n        : undefined,\n    ExternalId: output.ExternalId !== undefined && output.ExternalId !== null ? output.ExternalId : undefined,\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    RoleArn: output.RoleArn !== undefined && output.RoleArn !== null ? output.RoleArn : undefined,\n    S3Url: output.S3Url !== undefined && output.S3Url !== null ? output.S3Url : undefined,\n    Size: output.Size !== undefined && output.Size !== null ? output.Size : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentLocation = (output: any, context: __SerdeContext): SegmentLocation => {\n  return {\n    Country:\n      output.Country !== undefined && output.Country !== null\n        ? deserializeAws_restJson1SetDimension(output.Country, context)\n        : undefined,\n    GPSPoint:\n      output.GPSPoint !== undefined && output.GPSPoint !== null\n        ? deserializeAws_restJson1GPSPointDimension(output.GPSPoint, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentReference = (output: any, context: __SerdeContext): SegmentReference => {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentResponse = (output: any, context: __SerdeContext): SegmentResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Dimensions:\n      output.Dimensions !== undefined && output.Dimensions !== null\n        ? deserializeAws_restJson1SegmentDimensions(output.Dimensions, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    ImportDefinition:\n      output.ImportDefinition !== undefined && output.ImportDefinition !== null\n        ? deserializeAws_restJson1SegmentImportResource(output.ImportDefinition, context)\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SegmentGroups:\n      output.SegmentGroups !== undefined && output.SegmentGroups !== null\n        ? deserializeAws_restJson1SegmentGroupList(output.SegmentGroups, context)\n        : undefined,\n    SegmentType: output.SegmentType !== undefined && output.SegmentType !== null ? output.SegmentType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SegmentsResponse = (output: any, context: __SerdeContext): SegmentsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfSegmentResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SendUsersMessageResponse = (\n  output: any,\n  context: __SerdeContext\n): SendUsersMessageResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    RequestId: output.RequestId !== undefined && output.RequestId !== null ? output.RequestId : undefined,\n    Result:\n      output.Result !== undefined && output.Result !== null\n        ? deserializeAws_restJson1MapOfMapOfEndpointMessageResult(output.Result, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SetDimension = (output: any, context: __SerdeContext): SetDimension => {\n  return {\n    DimensionType:\n      output.DimensionType !== undefined && output.DimensionType !== null ? output.DimensionType : undefined,\n    Values:\n      output.Values !== undefined && output.Values !== null\n        ? deserializeAws_restJson1ListOf__string(output.Values, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SimpleCondition = (output: any, context: __SerdeContext): SimpleCondition => {\n  return {\n    EventCondition:\n      output.EventCondition !== undefined && output.EventCondition !== null\n        ? deserializeAws_restJson1EventCondition(output.EventCondition, context)\n        : undefined,\n    SegmentCondition:\n      output.SegmentCondition !== undefined && output.SegmentCondition !== null\n        ? deserializeAws_restJson1SegmentCondition(output.SegmentCondition, context)\n        : undefined,\n    SegmentDimensions:\n      output.segmentDimensions !== undefined && output.segmentDimensions !== null\n        ? deserializeAws_restJson1SegmentDimensions(output.segmentDimensions, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SMSChannelResponse = (output: any, context: __SerdeContext): SMSChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    PromotionalMessagesPerSecond:\n      output.PromotionalMessagesPerSecond !== undefined && output.PromotionalMessagesPerSecond !== null\n        ? output.PromotionalMessagesPerSecond\n        : undefined,\n    SenderId: output.SenderId !== undefined && output.SenderId !== null ? output.SenderId : undefined,\n    ShortCode: output.ShortCode !== undefined && output.ShortCode !== null ? output.ShortCode : undefined,\n    TransactionalMessagesPerSecond:\n      output.TransactionalMessagesPerSecond !== undefined && output.TransactionalMessagesPerSecond !== null\n        ? output.TransactionalMessagesPerSecond\n        : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SMSMessageActivity = (output: any, context: __SerdeContext): SMSMessageActivity => {\n  return {\n    MessageConfig:\n      output.MessageConfig !== undefined && output.MessageConfig !== null\n        ? deserializeAws_restJson1JourneySMSMessage(output.MessageConfig, context)\n        : undefined,\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateVersion:\n      output.TemplateVersion !== undefined && output.TemplateVersion !== null ? output.TemplateVersion : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1SMSTemplateResponse = (output: any, context: __SerdeContext): SMSTemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    RecommenderId:\n      output.RecommenderId !== undefined && output.RecommenderId !== null ? output.RecommenderId : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1StartCondition = (output: any, context: __SerdeContext): StartCondition => {\n  return {\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EventStartCondition:\n      output.EventStartCondition !== undefined && output.EventStartCondition !== null\n        ? deserializeAws_restJson1EventStartCondition(output.EventStartCondition, context)\n        : undefined,\n    SegmentStartCondition:\n      output.SegmentStartCondition !== undefined && output.SegmentStartCondition !== null\n        ? deserializeAws_restJson1SegmentCondition(output.SegmentStartCondition, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TagsModel = (output: any, context: __SerdeContext): TagsModel => {\n  return {\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1Template = (output: any, context: __SerdeContext): Template => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateConfiguration = (output: any, context: __SerdeContext): TemplateConfiguration => {\n  return {\n    EmailTemplate:\n      output.EmailTemplate !== undefined && output.EmailTemplate !== null\n        ? deserializeAws_restJson1Template(output.EmailTemplate, context)\n        : undefined,\n    PushTemplate:\n      output.PushTemplate !== undefined && output.PushTemplate !== null\n        ? deserializeAws_restJson1Template(output.PushTemplate, context)\n        : undefined,\n    SMSTemplate:\n      output.SMSTemplate !== undefined && output.SMSTemplate !== null\n        ? deserializeAws_restJson1Template(output.SMSTemplate, context)\n        : undefined,\n    VoiceTemplate:\n      output.VoiceTemplate !== undefined && output.VoiceTemplate !== null\n        ? deserializeAws_restJson1Template(output.VoiceTemplate, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateResponse = (output: any, context: __SerdeContext): TemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplatesResponse = (output: any, context: __SerdeContext): TemplatesResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfTemplateResponse(output.Item, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateVersionResponse = (\n  output: any,\n  context: __SerdeContext\n): TemplateVersionResponse => {\n  return {\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TemplateVersionsResponse = (\n  output: any,\n  context: __SerdeContext\n): TemplateVersionsResponse => {\n  return {\n    Item:\n      output.Item !== undefined && output.Item !== null\n        ? deserializeAws_restJson1ListOfTemplateVersionResponse(output.Item, context)\n        : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    RequestID: output.RequestID !== undefined && output.RequestID !== null ? output.RequestID : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1TreatmentResource = (output: any, context: __SerdeContext): TreatmentResource => {\n  return {\n    CustomDeliveryConfiguration:\n      output.CustomDeliveryConfiguration !== undefined && output.CustomDeliveryConfiguration !== null\n        ? deserializeAws_restJson1CustomDeliveryConfiguration(output.CustomDeliveryConfiguration, context)\n        : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    MessageConfiguration:\n      output.MessageConfiguration !== undefined && output.MessageConfiguration !== null\n        ? deserializeAws_restJson1MessageConfiguration(output.MessageConfiguration, context)\n        : undefined,\n    Schedule:\n      output.Schedule !== undefined && output.Schedule !== null\n        ? deserializeAws_restJson1Schedule(output.Schedule, context)\n        : undefined,\n    SizePercent: output.SizePercent !== undefined && output.SizePercent !== null ? output.SizePercent : undefined,\n    State:\n      output.State !== undefined && output.State !== null\n        ? deserializeAws_restJson1CampaignState(output.State, context)\n        : undefined,\n    TemplateConfiguration:\n      output.TemplateConfiguration !== undefined && output.TemplateConfiguration !== null\n        ? deserializeAws_restJson1TemplateConfiguration(output.TemplateConfiguration, context)\n        : undefined,\n    TreatmentDescription:\n      output.TreatmentDescription !== undefined && output.TreatmentDescription !== null\n        ? output.TreatmentDescription\n        : undefined,\n    TreatmentName:\n      output.TreatmentName !== undefined && output.TreatmentName !== null ? output.TreatmentName : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1VoiceChannelResponse = (output: any, context: __SerdeContext): VoiceChannelResponse => {\n  return {\n    ApplicationId:\n      output.ApplicationId !== undefined && output.ApplicationId !== null ? output.ApplicationId : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    Enabled: output.Enabled !== undefined && output.Enabled !== null ? output.Enabled : undefined,\n    HasCredential:\n      output.HasCredential !== undefined && output.HasCredential !== null ? output.HasCredential : undefined,\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    IsArchived: output.IsArchived !== undefined && output.IsArchived !== null ? output.IsArchived : undefined,\n    LastModifiedBy:\n      output.LastModifiedBy !== undefined && output.LastModifiedBy !== null ? output.LastModifiedBy : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    Platform: output.Platform !== undefined && output.Platform !== null ? output.Platform : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1VoiceTemplateResponse = (output: any, context: __SerdeContext): VoiceTemplateResponse => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    Body: output.Body !== undefined && output.Body !== null ? output.Body : undefined,\n    CreationDate: output.CreationDate !== undefined && output.CreationDate !== null ? output.CreationDate : undefined,\n    DefaultSubstitutions:\n      output.DefaultSubstitutions !== undefined && output.DefaultSubstitutions !== null\n        ? output.DefaultSubstitutions\n        : undefined,\n    LanguageCode: output.LanguageCode !== undefined && output.LanguageCode !== null ? output.LanguageCode : undefined,\n    LastModifiedDate:\n      output.LastModifiedDate !== undefined && output.LastModifiedDate !== null ? output.LastModifiedDate : undefined,\n    TemplateDescription:\n      output.TemplateDescription !== undefined && output.TemplateDescription !== null\n        ? output.TemplateDescription\n        : undefined,\n    TemplateName: output.TemplateName !== undefined && output.TemplateName !== null ? output.TemplateName : undefined,\n    TemplateType: output.TemplateType !== undefined && output.TemplateType !== null ? output.TemplateType : undefined,\n    Version: output.Version !== undefined && output.Version !== null ? output.Version : undefined,\n    VoiceId: output.VoiceId !== undefined && output.VoiceId !== null ? output.VoiceId : undefined,\n    tags:\n      output.tags !== undefined && output.tags !== null\n        ? deserializeAws_restJson1MapOf__string(output.tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1WaitActivity = (output: any, context: __SerdeContext): WaitActivity => {\n  return {\n    NextActivity: output.NextActivity !== undefined && output.NextActivity !== null ? output.NextActivity : undefined,\n    WaitTime:\n      output.WaitTime !== undefined && output.WaitTime !== null\n        ? deserializeAws_restJson1WaitTime(output.WaitTime, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_restJson1WaitTime = (output: any, context: __SerdeContext): WaitTime => {\n  return {\n    WaitFor: output.WaitFor !== undefined && output.WaitFor !== null ? output.WaitFor : undefined,\n    WaitUntil: output.WaitUntil !== undefined && output.WaitUntil !== null ? output.WaitUntil : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst isSerializableHeaderValue = (value: any): boolean =>\n  value !== undefined &&\n  value !== null &&\n  value !== \"\" &&\n  (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n  (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}