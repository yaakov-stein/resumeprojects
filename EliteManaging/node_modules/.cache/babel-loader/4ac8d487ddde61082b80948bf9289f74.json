{"ast":null,"code":"/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nimport { matches } from './matches';\nimport { parents } from './parents';\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\n\nexport function closest(element, selector, shouldCheckSelf) {\n  if (shouldCheckSelf === void 0) {\n    shouldCheckSelf = false;\n  }\n\n  if (!(element && element.nodeType === 1 && selector)) return;\n  var parentElements = (shouldCheckSelf ? [element] : []).concat(parents(element));\n\n  for (var i = 0, parent_1; parent_1 = parentElements[i]; i++) {\n    if (matches(parent_1, selector)) return parent_1;\n  }\n}","map":{"version":3,"mappings":"AAAA;;;AAIA,SAASA,OAAT,QAAwB,WAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA;;;;;;;;;AAQA,OAAM,SAAUC,OAAV,CAAkBC,OAAlB,EAA2BC,QAA3B,EAAqCC,eAArC,EAA4D;EAAvB;IAAAA;EAAuB;;EACjE,IAAI,EAAEF,OAAO,IAAIA,OAAO,CAACG,QAAR,KAAqB,CAAhC,IAAqCF,QAAvC,CAAJ,EAAsD;EACtD,IAAMG,cAAc,GAAG,CAACF,eAAe,GAAG,CAACF,OAAD,CAAH,GAAe,EAA/B,EAAmCK,MAAnC,CACtBP,OAAO,CAACE,OAAD,CADe,CAAvB;;EAIA,KAAK,IAAIM,CAAC,GAAG,CAAR,EAAWC,QAAhB,EAAyBA,QAAM,GAAGH,cAAc,CAACE,CAAD,CAAhD,EAAsDA,CAAC,EAAvD,EAA2D;IAC1D,IAAIT,OAAO,CAACU,QAAD,EAASN,QAAT,CAAX,EAA+B,OAAOM,QAAP;EAC/B;AACD","names":["matches","parents","closest","element","selector","shouldCheckSelf","nodeType","parentElements","concat","i","parent_1"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-amplify\\analytics\\src\\vendor\\dom-utils\\closest.ts"],"sourcesContent":["/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n\nimport { matches } from './matches';\nimport { parents } from './parents';\n\n/**\n * Gets the closest parent element that matches the passed selector.\n * @param {Element} element The element whose parents to check.\n * @param {string} selector The CSS selector to match against.\n * @param {boolean=} shouldCheckSelf True if the selector should test against\n *     the passed element itself.\n * @return {Element|undefined} The matching element or undefined.\n */\nexport function closest(element, selector, shouldCheckSelf = false) {\n\tif (!(element && element.nodeType === 1 && selector)) return;\n\tconst parentElements = (shouldCheckSelf ? [element] : []).concat(\n\t\tparents(element)\n\t);\n\n\tfor (let i = 0, parent; (parent = parentElements[i]); i++) {\n\t\tif (matches(parent, selector)) return parent;\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}