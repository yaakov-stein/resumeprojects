{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nexport var serializeAws_json1_1AddTagsToStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.AddTagsToStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1CreateStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.CreateStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DecreaseStreamRetentionPeriod\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DeleteStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeregisterStreamConsumerCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DeregisterStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeLimitsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeLimits\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamConsumerCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeStreamSummaryCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DescribeStreamSummary\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DisableEnhancedMonitoringCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.DisableEnhancedMonitoring\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1EnableEnhancedMonitoringCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.EnableEnhancedMonitoring\"\n      };\n      body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetRecordsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.GetRecords\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetShardIteratorCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.GetShardIterator\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.IncreaseStreamRetentionPeriod\"\n      };\n      body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListShardsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListShards\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListStreamConsumersCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListStreamConsumers\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListStreamsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListStreams\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTagsForStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.ListTagsForStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1MergeShardsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.MergeShards\"\n      };\n      body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutRecordCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.PutRecord\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1PutRecordsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.PutRecords\"\n      };\n      body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1RegisterStreamConsumerCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.RegisterStreamConsumer\"\n      };\n      body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1RemoveTagsFromStreamCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.RemoveTagsFromStream\"\n      };\n      body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1SplitShardCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.SplitShard\"\n      };\n      body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StartStreamEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.StartStreamEncryption\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StopStreamEncryptionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.StopStreamEncryption\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1SubscribeToShardCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.SubscribeToShard\"\n      };\n      body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1UpdateShardCountCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"Kinesis_20131202.UpdateShardCount\"\n      };\n      body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var deserializeAws_json1_1AddTagsToStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1AddTagsToStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1AddTagsToStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1CreateStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1CreateStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1CreateStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeregisterStreamConsumerCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeregisterStreamConsumerCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeLimitsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeLimitsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeLimitsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeStreamConsumerCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeStreamConsumerCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeStreamSummaryCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeStreamSummaryCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, parsedBody, message;\n\n    var _e;\n\n    return __generator(this, function (_f) {\n      switch (_f.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _e = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_e.body = _f.sent(), _e)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n          }\n\n          return [3\n          /*break*/\n          , 6];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_f.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 7];\n\n        case 6:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _f.label = 7;\n\n        case 7:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DisableEnhancedMonitoringCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DisableEnhancedMonitoringCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1EnableEnhancedMonitoringCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1EnableEnhancedMonitoringCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetRecordsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetRecordsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetRecordsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n\n    var _o;\n\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _o = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_o.body = _p.sent(), _o)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ExpiredIteratorException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#ExpiredIteratorException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n          }\n\n          return [3\n          /*break*/\n          , 22];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 18:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 20:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetShardIteratorCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetShardIteratorCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetShardIteratorCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListShardsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListShardsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListShardsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListShardsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListStreamConsumersCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListStreamConsumersCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListStreamConsumersCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListStreamsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListStreamsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListStreamsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, parsedBody, message;\n\n    var _d;\n\n    return __generator(this, function (_e) {\n      switch (_e.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _d = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_d.body = _e.sent(), _d)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 2];\n          }\n\n          return [3\n          /*break*/\n          , 4];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_e.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 5];\n\n        case 4:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _e.label = 5;\n\n        case 5:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListTagsForStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListTagsForStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListTagsForStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1MergeShardsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1MergeShardsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1MergeShardsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutRecordCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutRecordCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutRecordCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n\n    var _m;\n\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _m = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n          }\n\n          return [3\n          /*break*/\n          , 20];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 18:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1PutRecordsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1PutRecordsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1PutRecordsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, parsedBody, message;\n\n    var _m;\n\n    return __generator(this, function (_o) {\n      switch (_o.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _m = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_m.body = _o.sent(), _m)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 18];\n          }\n\n          return [3\n          /*break*/\n          , 20];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 18:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_o.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 21];\n\n        case 20:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _o.label = 21;\n\n        case 21:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1RegisterStreamConsumerCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1RegisterStreamConsumerCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1RemoveTagsFromStreamCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1RemoveTagsFromStreamCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1SplitShardCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1SplitShardCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1SplitShardCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1StartStreamEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StartStreamEncryptionCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1StartStreamEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, parsedBody, message;\n\n    var _o;\n\n    return __generator(this, function (_p) {\n      switch (_p.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _o = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_o.body = _p.sent(), _o)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#KMSDisabledException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.kinesis#KMSNotFoundException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.kinesis#KMSOptInRequired\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.kinesis#KMSThrottlingException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 18];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 20];\n          }\n\n          return [3\n          /*break*/\n          , 22];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 18:\n          _l = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 19:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _l.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 20:\n          _m = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 21:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _m.concat([_p.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 23];\n\n        case 22:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _p.label = 23;\n\n        case 23:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1StopStreamEncryptionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StopStreamEncryptionCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1StopStreamEncryptionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1SubscribeToShardCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1SubscribeToShardCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1SubscribeToShardCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1UpdateShardCountCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1UpdateShardCountCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1UpdateShardCountCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.kinesis#InvalidArgumentException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.kinesis#LimitExceededException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.kinesis#ResourceInUseException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ExpiredIteratorExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredIteratorException(body, context);\n      contents = __assign({\n        name: \"ExpiredIteratorException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ExpiredNextTokenExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n      contents = __assign({\n        name: \"ExpiredNextTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidArgumentExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidArgumentException(body, context);\n      contents = __assign({\n        name: \"InvalidArgumentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSAccessDeniedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n      contents = __assign({\n        name: \"KMSAccessDeniedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSDisabledExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSDisabledException(body, context);\n      contents = __assign({\n        name: \"KMSDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSInvalidStateExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSInvalidStateException(body, context);\n      contents = __assign({\n        name: \"KMSInvalidStateException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSNotFoundException(body, context);\n      contents = __assign({\n        name: \"KMSNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSOptInRequiredResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSOptInRequired(body, context);\n      contents = __assign({\n        name: \"KMSOptInRequired\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1KMSThrottlingExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1KMSThrottlingException(body, context);\n      contents = __assign({\n        name: \"KMSThrottlingException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n      contents = __assign({\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n      contents = __assign({\n        name: \"ProvisionedThroughputExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ResourceInUseExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceInUseException(body, context);\n      contents = __assign({\n        name: \"ResourceInUseException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n      contents = __assign({\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_json1_1AddTagsToStreamInput = function (input, context) {\n  return __assign(__assign({}, input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.Tags !== undefined && input.Tags !== null && {\n    Tags: serializeAws_json1_1TagMap(input.Tags, context)\n  });\n};\n\nvar serializeAws_json1_1CreateStreamInput = function (input, context) {\n  return __assign(__assign({}, input.ShardCount !== undefined && input.ShardCount !== null && {\n    ShardCount: input.ShardCount\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1DecreaseStreamRetentionPeriodInput = function (input, context) {\n  return __assign(__assign({}, input.RetentionPeriodHours !== undefined && input.RetentionPeriodHours !== null && {\n    RetentionPeriodHours: input.RetentionPeriodHours\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1DeleteStreamInput = function (input, context) {\n  return __assign(__assign({}, input.EnforceConsumerDeletion !== undefined && input.EnforceConsumerDeletion !== null && {\n    EnforceConsumerDeletion: input.EnforceConsumerDeletion\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1DeregisterStreamConsumerInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && input.ConsumerARN !== null && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ConsumerName !== undefined && input.ConsumerName !== null && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  });\n};\n\nvar serializeAws_json1_1DescribeLimitsInput = function (input, context) {\n  return {};\n};\n\nvar serializeAws_json1_1DescribeStreamConsumerInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && input.ConsumerARN !== null && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ConsumerName !== undefined && input.ConsumerName !== null && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  });\n};\n\nvar serializeAws_json1_1DescribeStreamInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ExclusiveStartShardId !== undefined && input.ExclusiveStartShardId !== null && {\n    ExclusiveStartShardId: input.ExclusiveStartShardId\n  }), input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1DescribeStreamSummaryInput = function (input, context) {\n  return __assign({}, input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1DisableEnhancedMonitoringInput = function (input, context) {\n  return __assign(__assign({}, input.ShardLevelMetrics !== undefined && input.ShardLevelMetrics !== null && {\n    ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1EnableEnhancedMonitoringInput = function (input, context) {\n  return __assign(__assign({}, input.ShardLevelMetrics !== undefined && input.ShardLevelMetrics !== null && {\n    ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1GetRecordsInput = function (input, context) {\n  return __assign(__assign({}, input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  }), input.ShardIterator !== undefined && input.ShardIterator !== null && {\n    ShardIterator: input.ShardIterator\n  });\n};\n\nvar serializeAws_json1_1GetShardIteratorInput = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.ShardId !== undefined && input.ShardId !== null && {\n    ShardId: input.ShardId\n  }), input.ShardIteratorType !== undefined && input.ShardIteratorType !== null && {\n    ShardIteratorType: input.ShardIteratorType\n  }), input.StartingSequenceNumber !== undefined && input.StartingSequenceNumber !== null && {\n    StartingSequenceNumber: input.StartingSequenceNumber\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  });\n};\n\nvar serializeAws_json1_1IncreaseStreamRetentionPeriodInput = function (input, context) {\n  return __assign(__assign({}, input.RetentionPeriodHours !== undefined && input.RetentionPeriodHours !== null && {\n    RetentionPeriodHours: input.RetentionPeriodHours\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1ListShardsInput = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.ExclusiveStartShardId !== undefined && input.ExclusiveStartShardId !== null && {\n    ExclusiveStartShardId: input.ExclusiveStartShardId\n  }), input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  }), input.ShardFilter !== undefined && input.ShardFilter !== null && {\n    ShardFilter: serializeAws_json1_1ShardFilter(input.ShardFilter, context)\n  }), input.StreamCreationTimestamp !== undefined && input.StreamCreationTimestamp !== null && {\n    StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1ListStreamConsumersInput = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  }), input.StreamCreationTimestamp !== undefined && input.StreamCreationTimestamp !== null && {\n    StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000)\n  });\n};\n\nvar serializeAws_json1_1ListStreamsInput = function (input, context) {\n  return __assign(__assign({}, input.ExclusiveStartStreamName !== undefined && input.ExclusiveStartStreamName !== null && {\n    ExclusiveStartStreamName: input.ExclusiveStartStreamName\n  }), input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  });\n};\n\nvar serializeAws_json1_1ListTagsForStreamInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ExclusiveStartTagKey !== undefined && input.ExclusiveStartTagKey !== null && {\n    ExclusiveStartTagKey: input.ExclusiveStartTagKey\n  }), input.Limit !== undefined && input.Limit !== null && {\n    Limit: input.Limit\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1MergeShardsInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.AdjacentShardToMerge !== undefined && input.AdjacentShardToMerge !== null && {\n    AdjacentShardToMerge: input.AdjacentShardToMerge\n  }), input.ShardToMerge !== undefined && input.ShardToMerge !== null && {\n    ShardToMerge: input.ShardToMerge\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1MetricsNameList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1PutRecordInput = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: context.base64Encoder(input.Data)\n  }), input.ExplicitHashKey !== undefined && input.ExplicitHashKey !== null && {\n    ExplicitHashKey: input.ExplicitHashKey\n  }), input.PartitionKey !== undefined && input.PartitionKey !== null && {\n    PartitionKey: input.PartitionKey\n  }), input.SequenceNumberForOrdering !== undefined && input.SequenceNumberForOrdering !== null && {\n    SequenceNumberForOrdering: input.SequenceNumberForOrdering\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1PutRecordsInput = function (input, context) {\n  return __assign(__assign({}, input.Records !== undefined && input.Records !== null && {\n    Records: serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context)\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1PutRecordsRequestEntry = function (input, context) {\n  return __assign(__assign(__assign({}, input.Data !== undefined && input.Data !== null && {\n    Data: context.base64Encoder(input.Data)\n  }), input.ExplicitHashKey !== undefined && input.ExplicitHashKey !== null && {\n    ExplicitHashKey: input.ExplicitHashKey\n  }), input.PartitionKey !== undefined && input.PartitionKey !== null && {\n    PartitionKey: input.PartitionKey\n  });\n};\n\nvar serializeAws_json1_1PutRecordsRequestEntryList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_json1_1PutRecordsRequestEntry(entry, context);\n  });\n};\n\nvar serializeAws_json1_1RegisterStreamConsumerInput = function (input, context) {\n  return __assign(__assign({}, input.ConsumerName !== undefined && input.ConsumerName !== null && {\n    ConsumerName: input.ConsumerName\n  }), input.StreamARN !== undefined && input.StreamARN !== null && {\n    StreamARN: input.StreamARN\n  });\n};\n\nvar serializeAws_json1_1RemoveTagsFromStreamInput = function (input, context) {\n  return __assign(__assign({}, input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.TagKeys !== undefined && input.TagKeys !== null && {\n    TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context)\n  });\n};\n\nvar serializeAws_json1_1ShardFilter = function (input, context) {\n  return __assign(__assign(__assign({}, input.ShardId !== undefined && input.ShardId !== null && {\n    ShardId: input.ShardId\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\n\nvar serializeAws_json1_1SplitShardInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.NewStartingHashKey !== undefined && input.NewStartingHashKey !== null && {\n    NewStartingHashKey: input.NewStartingHashKey\n  }), input.ShardToSplit !== undefined && input.ShardToSplit !== null && {\n    ShardToSplit: input.ShardToSplit\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1StartingPosition = function (input, context) {\n  return __assign(__assign(__assign({}, input.SequenceNumber !== undefined && input.SequenceNumber !== null && {\n    SequenceNumber: input.SequenceNumber\n  }), input.Timestamp !== undefined && input.Timestamp !== null && {\n    Timestamp: Math.round(input.Timestamp.getTime() / 1000)\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\n\nvar serializeAws_json1_1StartStreamEncryptionInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.EncryptionType !== undefined && input.EncryptionType !== null && {\n    EncryptionType: input.EncryptionType\n  }), input.KeyId !== undefined && input.KeyId !== null && {\n    KeyId: input.KeyId\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1StopStreamEncryptionInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.EncryptionType !== undefined && input.EncryptionType !== null && {\n    EncryptionType: input.EncryptionType\n  }), input.KeyId !== undefined && input.KeyId !== null && {\n    KeyId: input.KeyId\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  });\n};\n\nvar serializeAws_json1_1SubscribeToShardInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ConsumerARN !== undefined && input.ConsumerARN !== null && {\n    ConsumerARN: input.ConsumerARN\n  }), input.ShardId !== undefined && input.ShardId !== null && {\n    ShardId: input.ShardId\n  }), input.StartingPosition !== undefined && input.StartingPosition !== null && {\n    StartingPosition: serializeAws_json1_1StartingPosition(input.StartingPosition, context)\n  });\n};\n\nvar serializeAws_json1_1TagKeyList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1TagMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_json1_1UpdateShardCountInput = function (input, context) {\n  return __assign(__assign(__assign({}, input.ScalingType !== undefined && input.ScalingType !== null && {\n    ScalingType: input.ScalingType\n  }), input.StreamName !== undefined && input.StreamName !== null && {\n    StreamName: input.StreamName\n  }), input.TargetShardCount !== undefined && input.TargetShardCount !== null && {\n    TargetShardCount: input.TargetShardCount\n  });\n};\n\nvar deserializeAws_json1_1ChildShard = function (output, context) {\n  return {\n    HashKeyRange: output.HashKeyRange !== undefined && output.HashKeyRange !== null ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context) : undefined,\n    ParentShards: output.ParentShards !== undefined && output.ParentShards !== null ? deserializeAws_json1_1ShardIdList(output.ParentShards, context) : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\n\nvar deserializeAws_json1_1ChildShardList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1ChildShard(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1Consumer = function (output, context) {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000)) : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined\n  };\n};\n\nvar deserializeAws_json1_1ConsumerDescription = function (output, context) {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp: output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000)) : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus: output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined\n  };\n};\n\nvar deserializeAws_json1_1ConsumerList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1Consumer(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1DescribeLimitsOutput = function (output, context) {\n  return {\n    OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    ShardLimit: output.ShardLimit !== undefined && output.ShardLimit !== null ? output.ShardLimit : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeStreamConsumerOutput = function (output, context) {\n  return {\n    ConsumerDescription: output.ConsumerDescription !== undefined && output.ConsumerDescription !== null ? deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeStreamOutput = function (output, context) {\n  return {\n    StreamDescription: output.StreamDescription !== undefined && output.StreamDescription !== null ? deserializeAws_json1_1StreamDescription(output.StreamDescription, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeStreamSummaryOutput = function (output, context) {\n  return {\n    StreamDescriptionSummary: output.StreamDescriptionSummary !== undefined && output.StreamDescriptionSummary !== null ? deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1EnhancedMetrics = function (output, context) {\n  return {\n    ShardLevelMetrics: output.ShardLevelMetrics !== undefined && output.ShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1EnhancedMonitoringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1EnhancedMetrics(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1EnhancedMonitoringOutput = function (output, context) {\n  return {\n    CurrentShardLevelMetrics: output.CurrentShardLevelMetrics !== undefined && output.CurrentShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context) : undefined,\n    DesiredShardLevelMetrics: output.DesiredShardLevelMetrics !== undefined && output.DesiredShardLevelMetrics !== null ? deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined\n  };\n};\n\nvar deserializeAws_json1_1ExpiredIteratorException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ExpiredNextTokenException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetRecordsOutput = function (output, context) {\n  return {\n    ChildShards: output.ChildShards !== undefined && output.ChildShards !== null ? deserializeAws_json1_1ChildShardList(output.ChildShards, context) : undefined,\n    MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null ? output.MillisBehindLatest : undefined,\n    NextShardIterator: output.NextShardIterator !== undefined && output.NextShardIterator !== null ? output.NextShardIterator : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1RecordList(output.Records, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetShardIteratorOutput = function (output, context) {\n  return {\n    ShardIterator: output.ShardIterator !== undefined && output.ShardIterator !== null ? output.ShardIterator : undefined\n  };\n};\n\nvar deserializeAws_json1_1HashKeyRange = function (output, context) {\n  return {\n    EndingHashKey: output.EndingHashKey !== undefined && output.EndingHashKey !== null ? output.EndingHashKey : undefined,\n    StartingHashKey: output.StartingHashKey !== undefined && output.StartingHashKey !== null ? output.StartingHashKey : undefined\n  };\n};\n\nvar deserializeAws_json1_1InternalFailureException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidArgumentException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSAccessDeniedException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSDisabledException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSInvalidStateException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSNotFoundException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSOptInRequired = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1KMSThrottlingException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListShardsOutput = function (output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    Shards: output.Shards !== undefined && output.Shards !== null ? deserializeAws_json1_1ShardList(output.Shards, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListStreamConsumersOutput = function (output, context) {\n  return {\n    Consumers: output.Consumers !== undefined && output.Consumers !== null ? deserializeAws_json1_1ConsumerList(output.Consumers, context) : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListStreamsOutput = function (output, context) {\n  return {\n    HasMoreStreams: output.HasMoreStreams !== undefined && output.HasMoreStreams !== null ? output.HasMoreStreams : undefined,\n    StreamNames: output.StreamNames !== undefined && output.StreamNames !== null ? deserializeAws_json1_1StreamNameList(output.StreamNames, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListTagsForStreamOutput = function (output, context) {\n  return {\n    HasMoreTags: output.HasMoreTags !== undefined && output.HasMoreTags !== null ? output.HasMoreTags : undefined,\n    Tags: output.Tags !== undefined && output.Tags !== null ? deserializeAws_json1_1TagList(output.Tags, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1MetricsNameList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1ProvisionedThroughputExceededException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1PutRecordOutput = function (output, context) {\n  return {\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\n\nvar deserializeAws_json1_1PutRecordsOutput = function (output, context) {\n  return {\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    FailedRecordCount: output.FailedRecordCount !== undefined && output.FailedRecordCount !== null ? output.FailedRecordCount : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1PutRecordsResultEntry = function (output, context) {\n  return {\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    ErrorMessage: output.ErrorMessage !== undefined && output.ErrorMessage !== null ? output.ErrorMessage : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\n\nvar deserializeAws_json1_1PutRecordsResultEntryList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1PutRecordsResultEntry(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1_Record = function (output, context) {\n  return {\n    ApproximateArrivalTimestamp: output.ApproximateArrivalTimestamp !== undefined && output.ApproximateArrivalTimestamp !== null ? new Date(Math.round(output.ApproximateArrivalTimestamp * 1000)) : undefined,\n    Data: output.Data !== undefined && output.Data !== null ? context.base64Decoder(output.Data) : undefined,\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    PartitionKey: output.PartitionKey !== undefined && output.PartitionKey !== null ? output.PartitionKey : undefined,\n    SequenceNumber: output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined\n  };\n};\n\nvar deserializeAws_json1_1RecordList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1_Record(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1RegisterStreamConsumerOutput = function (output, context) {\n  return {\n    Consumer: output.Consumer !== undefined && output.Consumer !== null ? deserializeAws_json1_1Consumer(output.Consumer, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1ResourceInUseException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ResourceNotFoundException = function (output, context) {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined\n  };\n};\n\nvar deserializeAws_json1_1SequenceNumberRange = function (output, context) {\n  return {\n    EndingSequenceNumber: output.EndingSequenceNumber !== undefined && output.EndingSequenceNumber !== null ? output.EndingSequenceNumber : undefined,\n    StartingSequenceNumber: output.StartingSequenceNumber !== undefined && output.StartingSequenceNumber !== null ? output.StartingSequenceNumber : undefined\n  };\n};\n\nvar deserializeAws_json1_1Shard = function (output, context) {\n  return {\n    AdjacentParentShardId: output.AdjacentParentShardId !== undefined && output.AdjacentParentShardId !== null ? output.AdjacentParentShardId : undefined,\n    HashKeyRange: output.HashKeyRange !== undefined && output.HashKeyRange !== null ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context) : undefined,\n    ParentShardId: output.ParentShardId !== undefined && output.ParentShardId !== null ? output.ParentShardId : undefined,\n    SequenceNumberRange: output.SequenceNumberRange !== undefined && output.SequenceNumberRange !== null ? deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context) : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined\n  };\n};\n\nvar deserializeAws_json1_1ShardIdList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1ShardList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1Shard(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1StreamDescription = function (output, context) {\n  return {\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context) : undefined,\n    HasMoreShards: output.HasMoreShards !== undefined && output.HasMoreShards !== null ? output.HasMoreShards : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null ? output.RetentionPeriodHours : undefined,\n    Shards: output.Shards !== undefined && output.Shards !== null ? deserializeAws_json1_1ShardList(output.Shards, context) : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null ? new Date(Math.round(output.StreamCreationTimestamp * 1000)) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined\n  };\n};\n\nvar deserializeAws_json1_1StreamDescriptionSummary = function (output, context) {\n  return {\n    ConsumerCount: output.ConsumerCount !== undefined && output.ConsumerCount !== null ? output.ConsumerCount : undefined,\n    EncryptionType: output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring: output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context) : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    OpenShardCount: output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    RetentionPeriodHours: output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null ? output.RetentionPeriodHours : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp: output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null ? new Date(Math.round(output.StreamCreationTimestamp * 1000)) : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined\n  };\n};\n\nvar deserializeAws_json1_1StreamNameList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1SubscribeToShardEvent = function (output, context) {\n  return {\n    ChildShards: output.ChildShards !== undefined && output.ChildShards !== null ? deserializeAws_json1_1ChildShardList(output.ChildShards, context) : undefined,\n    ContinuationSequenceNumber: output.ContinuationSequenceNumber !== undefined && output.ContinuationSequenceNumber !== null ? output.ContinuationSequenceNumber : undefined,\n    MillisBehindLatest: output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null ? output.MillisBehindLatest : undefined,\n    Records: output.Records !== undefined && output.Records !== null ? deserializeAws_json1_1RecordList(output.Records, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1SubscribeToShardEventStream = function (output, context) {\n  if (output.InternalFailureException !== undefined && output.InternalFailureException !== null) {\n    return {\n      InternalFailureException: deserializeAws_json1_1InternalFailureException(output.InternalFailureException, context)\n    };\n  }\n\n  if (output.KMSAccessDeniedException !== undefined && output.KMSAccessDeniedException !== null) {\n    return {\n      KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(output.KMSAccessDeniedException, context)\n    };\n  }\n\n  if (output.KMSDisabledException !== undefined && output.KMSDisabledException !== null) {\n    return {\n      KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context)\n    };\n  }\n\n  if (output.KMSInvalidStateException !== undefined && output.KMSInvalidStateException !== null) {\n    return {\n      KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(output.KMSInvalidStateException, context)\n    };\n  }\n\n  if (output.KMSNotFoundException !== undefined && output.KMSNotFoundException !== null) {\n    return {\n      KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context)\n    };\n  }\n\n  if (output.KMSOptInRequired !== undefined && output.KMSOptInRequired !== null) {\n    return {\n      KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context)\n    };\n  }\n\n  if (output.KMSThrottlingException !== undefined && output.KMSThrottlingException !== null) {\n    return {\n      KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context)\n    };\n  }\n\n  if (output.ResourceInUseException !== undefined && output.ResourceInUseException !== null) {\n    return {\n      ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context)\n    };\n  }\n\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(output.ResourceNotFoundException, context)\n    };\n  }\n\n  if (output.SubscribeToShardEvent !== undefined && output.SubscribeToShardEvent !== null) {\n    return {\n      SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_json1_1SubscribeToShardOutput = function (output, context) {\n  return {\n    EventStream: output.EventStream !== undefined && output.EventStream !== null ? deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1Tag = function (output, context) {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined\n  };\n};\n\nvar deserializeAws_json1_1TagList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1Tag(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1UpdateShardCountOutput = function (output, context) {\n  return {\n    CurrentShardCount: output.CurrentShardCount !== undefined && output.CurrentShardCount !== null ? output.CurrentShardCount : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    TargetShardCount: output.TargetShardCount !== undefined && output.TargetShardCount !== null ? output.TargetShardCount : undefined\n  };\n};\n\nvar deserializeMetadata = function (output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          contents = {\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            path: path,\n            headers: headers\n          };\n\n          if (resolvedHostname !== undefined) {\n            contents.hostname = resolvedHostname;\n          }\n\n          if (body !== undefined) {\n            contents.body = body;\n          }\n\n          return [2\n          /*return*/\n          , new __HttpRequest(contents)];\n      }\n    });\n  });\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\n\n\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":{"version":3,"mappings":"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","names":["HttpRequest","__HttpRequest","serializeAws_json1_1AddTagsToStreamCommand","input","context","headers","body","JSON","stringify","serializeAws_json1_1AddTagsToStreamInput","buildHttpRpcRequest","undefined","serializeAws_json1_1CreateStreamCommand","serializeAws_json1_1CreateStreamInput","serializeAws_json1_1DecreaseStreamRetentionPeriodCommand","serializeAws_json1_1DecreaseStreamRetentionPeriodInput","serializeAws_json1_1DeleteStreamCommand","serializeAws_json1_1DeleteStreamInput","serializeAws_json1_1DeregisterStreamConsumerCommand","serializeAws_json1_1DeregisterStreamConsumerInput","serializeAws_json1_1DescribeLimitsCommand","serializeAws_json1_1DescribeLimitsInput","serializeAws_json1_1DescribeStreamCommand","serializeAws_json1_1DescribeStreamInput","serializeAws_json1_1DescribeStreamConsumerCommand","serializeAws_json1_1DescribeStreamConsumerInput","serializeAws_json1_1DescribeStreamSummaryCommand","serializeAws_json1_1DescribeStreamSummaryInput","serializeAws_json1_1DisableEnhancedMonitoringCommand","serializeAws_json1_1DisableEnhancedMonitoringInput","serializeAws_json1_1EnableEnhancedMonitoringCommand","serializeAws_json1_1EnableEnhancedMonitoringInput","serializeAws_json1_1GetRecordsCommand","serializeAws_json1_1GetRecordsInput","serializeAws_json1_1GetShardIteratorCommand","serializeAws_json1_1GetShardIteratorInput","serializeAws_json1_1IncreaseStreamRetentionPeriodCommand","serializeAws_json1_1IncreaseStreamRetentionPeriodInput","serializeAws_json1_1ListShardsCommand","serializeAws_json1_1ListShardsInput","serializeAws_json1_1ListStreamConsumersCommand","serializeAws_json1_1ListStreamConsumersInput","serializeAws_json1_1ListStreamsCommand","serializeAws_json1_1ListStreamsInput","serializeAws_json1_1ListTagsForStreamCommand","serializeAws_json1_1ListTagsForStreamInput","serializeAws_json1_1MergeShardsCommand","serializeAws_json1_1MergeShardsInput","serializeAws_json1_1PutRecordCommand","serializeAws_json1_1PutRecordInput","serializeAws_json1_1PutRecordsCommand","serializeAws_json1_1PutRecordsInput","serializeAws_json1_1RegisterStreamConsumerCommand","serializeAws_json1_1RegisterStreamConsumerInput","serializeAws_json1_1RemoveTagsFromStreamCommand","serializeAws_json1_1RemoveTagsFromStreamInput","serializeAws_json1_1SplitShardCommand","serializeAws_json1_1SplitShardInput","serializeAws_json1_1StartStreamEncryptionCommand","serializeAws_json1_1StartStreamEncryptionInput","serializeAws_json1_1StopStreamEncryptionCommand","serializeAws_json1_1StopStreamEncryptionInput","serializeAws_json1_1SubscribeToShardCommand","serializeAws_json1_1SubscribeToShardInput","serializeAws_json1_1UpdateShardCountCommand","serializeAws_json1_1UpdateShardCountInput","deserializeAws_json1_1AddTagsToStreamCommand","output","statusCode","deserializeAws_json1_1AddTagsToStreamCommandError","collectBody","_a","response","$metadata","deserializeMetadata","Promise","resolve","parseBody","parsedOutput","_g","_h","errorCode","loadRestJsonErrorCode","_b","deserializeAws_json1_1InvalidArgumentExceptionResponse","name","deserializeAws_json1_1LimitExceededExceptionResponse","deserializeAws_json1_1ResourceInUseExceptionResponse","deserializeAws_json1_1ResourceNotFoundExceptionResponse","parsedBody","code","Code","__assign","message","Message","$fault","reject","Object","assign","Error","deserializeAws_json1_1CreateStreamCommand","deserializeAws_json1_1CreateStreamCommandError","_f","deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand","deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError","deserializeAws_json1_1DeleteStreamCommand","deserializeAws_json1_1DeleteStreamCommandError","deserializeAws_json1_1DeregisterStreamConsumerCommand","deserializeAws_json1_1DeregisterStreamConsumerCommandError","deserializeAws_json1_1DescribeLimitsCommand","deserializeAws_json1_1DescribeLimitsCommandError","data","contents","deserializeAws_json1_1DescribeLimitsOutput","_d","_e","deserializeAws_json1_1DescribeStreamCommand","deserializeAws_json1_1DescribeStreamCommandError","deserializeAws_json1_1DescribeStreamOutput","deserializeAws_json1_1DescribeStreamConsumerCommand","deserializeAws_json1_1DescribeStreamConsumerCommandError","deserializeAws_json1_1DescribeStreamConsumerOutput","deserializeAws_json1_1DescribeStreamSummaryCommand","deserializeAws_json1_1DescribeStreamSummaryCommandError","deserializeAws_json1_1DescribeStreamSummaryOutput","deserializeAws_json1_1DisableEnhancedMonitoringCommand","deserializeAws_json1_1DisableEnhancedMonitoringCommandError","deserializeAws_json1_1EnhancedMonitoringOutput","deserializeAws_json1_1EnableEnhancedMonitoringCommand","deserializeAws_json1_1EnableEnhancedMonitoringCommandError","deserializeAws_json1_1GetRecordsCommand","deserializeAws_json1_1GetRecordsCommandError","deserializeAws_json1_1GetRecordsOutput","_o","_p","deserializeAws_json1_1ExpiredIteratorExceptionResponse","deserializeAws_json1_1KMSAccessDeniedExceptionResponse","deserializeAws_json1_1KMSDisabledExceptionResponse","deserializeAws_json1_1KMSInvalidStateExceptionResponse","deserializeAws_json1_1KMSNotFoundExceptionResponse","deserializeAws_json1_1KMSOptInRequiredResponse","deserializeAws_json1_1KMSThrottlingExceptionResponse","deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse","deserializeAws_json1_1GetShardIteratorCommand","deserializeAws_json1_1GetShardIteratorCommandError","deserializeAws_json1_1GetShardIteratorOutput","deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand","deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError","deserializeAws_json1_1ListShardsCommand","deserializeAws_json1_1ListShardsCommandError","deserializeAws_json1_1ListShardsOutput","_j","deserializeAws_json1_1ExpiredNextTokenExceptionResponse","deserializeAws_json1_1ListStreamConsumersCommand","deserializeAws_json1_1ListStreamConsumersCommandError","deserializeAws_json1_1ListStreamConsumersOutput","deserializeAws_json1_1ListStreamsCommand","deserializeAws_json1_1ListStreamsCommandError","deserializeAws_json1_1ListStreamsOutput","deserializeAws_json1_1ListTagsForStreamCommand","deserializeAws_json1_1ListTagsForStreamCommandError","deserializeAws_json1_1ListTagsForStreamOutput","deserializeAws_json1_1MergeShardsCommand","deserializeAws_json1_1MergeShardsCommandError","deserializeAws_json1_1PutRecordCommand","deserializeAws_json1_1PutRecordCommandError","deserializeAws_json1_1PutRecordOutput","_m","deserializeAws_json1_1PutRecordsCommand","deserializeAws_json1_1PutRecordsCommandError","deserializeAws_json1_1PutRecordsOutput","deserializeAws_json1_1RegisterStreamConsumerCommand","deserializeAws_json1_1RegisterStreamConsumerCommandError","deserializeAws_json1_1RegisterStreamConsumerOutput","deserializeAws_json1_1RemoveTagsFromStreamCommand","deserializeAws_json1_1RemoveTagsFromStreamCommandError","deserializeAws_json1_1SplitShardCommand","deserializeAws_json1_1SplitShardCommandError","deserializeAws_json1_1StartStreamEncryptionCommand","deserializeAws_json1_1StartStreamEncryptionCommandError","deserializeAws_json1_1StopStreamEncryptionCommand","deserializeAws_json1_1StopStreamEncryptionCommandError","deserializeAws_json1_1SubscribeToShardCommand","deserializeAws_json1_1SubscribeToShardCommandError","deserializeAws_json1_1SubscribeToShardOutput","deserializeAws_json1_1UpdateShardCountCommand","deserializeAws_json1_1UpdateShardCountCommandError","deserializeAws_json1_1UpdateShardCountOutput","deserialized","deserializeAws_json1_1ExpiredIteratorException","deserializeAws_json1_1ExpiredNextTokenException","deserializeAws_json1_1InvalidArgumentException","deserializeAws_json1_1KMSAccessDeniedException","deserializeAws_json1_1KMSDisabledException","deserializeAws_json1_1KMSInvalidStateException","deserializeAws_json1_1KMSNotFoundException","deserializeAws_json1_1KMSOptInRequired","deserializeAws_json1_1KMSThrottlingException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1ProvisionedThroughputExceededException","deserializeAws_json1_1ResourceInUseException","deserializeAws_json1_1ResourceNotFoundException","StreamName","Tags","serializeAws_json1_1TagMap","ShardCount","RetentionPeriodHours","EnforceConsumerDeletion","ConsumerARN","ConsumerName","StreamARN","ExclusiveStartShardId","Limit","ShardLevelMetrics","serializeAws_json1_1MetricsNameList","ShardIterator","ShardId","ShardIteratorType","StartingSequenceNumber","Timestamp","Math","round","getTime","MaxResults","NextToken","ShardFilter","serializeAws_json1_1ShardFilter","StreamCreationTimestamp","ExclusiveStartStreamName","ExclusiveStartTagKey","AdjacentShardToMerge","ShardToMerge","filter","e","map","entry","Data","base64Encoder","ExplicitHashKey","PartitionKey","SequenceNumberForOrdering","Records","serializeAws_json1_1PutRecordsRequestEntryList","serializeAws_json1_1PutRecordsRequestEntry","TagKeys","serializeAws_json1_1TagKeyList","Type","NewStartingHashKey","ShardToSplit","serializeAws_json1_1StartingPosition","SequenceNumber","EncryptionType","KeyId","StartingPosition","entries","reduce","acc","_c","key","value","ScalingType","TargetShardCount","deserializeAws_json1_1ChildShard","HashKeyRange","deserializeAws_json1_1HashKeyRange","ParentShards","deserializeAws_json1_1ShardIdList","deserializeAws_json1_1ChildShardList","deserializeAws_json1_1Consumer","ConsumerCreationTimestamp","Date","ConsumerStatus","deserializeAws_json1_1ConsumerDescription","deserializeAws_json1_1ConsumerList","OpenShardCount","ShardLimit","ConsumerDescription","StreamDescription","deserializeAws_json1_1StreamDescription","StreamDescriptionSummary","deserializeAws_json1_1StreamDescriptionSummary","deserializeAws_json1_1EnhancedMetrics","deserializeAws_json1_1MetricsNameList","deserializeAws_json1_1EnhancedMonitoringList","CurrentShardLevelMetrics","DesiredShardLevelMetrics","ChildShards","MillisBehindLatest","NextShardIterator","deserializeAws_json1_1RecordList","EndingHashKey","StartingHashKey","deserializeAws_json1_1InternalFailureException","Shards","deserializeAws_json1_1ShardList","Consumers","HasMoreStreams","StreamNames","deserializeAws_json1_1StreamNameList","HasMoreTags","deserializeAws_json1_1TagList","FailedRecordCount","deserializeAws_json1_1PutRecordsResultEntryList","deserializeAws_json1_1PutRecordsResultEntry","ErrorCode","ErrorMessage","deserializeAws_json1_1_Record","ApproximateArrivalTimestamp","base64Decoder","Consumer","deserializeAws_json1_1SequenceNumberRange","EndingSequenceNumber","deserializeAws_json1_1Shard","AdjacentParentShardId","ParentShardId","SequenceNumberRange","EnhancedMonitoring","HasMoreShards","StreamStatus","ConsumerCount","deserializeAws_json1_1SubscribeToShardEvent","ContinuationSequenceNumber","deserializeAws_json1_1SubscribeToShardEventStream","InternalFailureException","KMSAccessDeniedException","KMSDisabledException","KMSInvalidStateException","KMSNotFoundException","KMSOptInRequired","KMSThrottlingException","ResourceInUseException","ResourceNotFoundException","SubscribeToShardEvent","$unknown","EventStream","deserializeAws_json1_1Tag","Key","Value","CurrentShardCount","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","path","resolvedHostname","endpoint","hostname","protocol","port","method","encoded","length","parse","findKey","object","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-sdk\\client-kinesis\\protocols\\Aws_json1_1.ts"],"sourcesContent":["import { AddTagsToStreamCommandInput, AddTagsToStreamCommandOutput } from \"../commands/AddTagsToStreamCommand\";\nimport { CreateStreamCommandInput, CreateStreamCommandOutput } from \"../commands/CreateStreamCommand\";\nimport {\n  DecreaseStreamRetentionPeriodCommandInput,\n  DecreaseStreamRetentionPeriodCommandOutput,\n} from \"../commands/DecreaseStreamRetentionPeriodCommand\";\nimport { DeleteStreamCommandInput, DeleteStreamCommandOutput } from \"../commands/DeleteStreamCommand\";\nimport {\n  DeregisterStreamConsumerCommandInput,\n  DeregisterStreamConsumerCommandOutput,\n} from \"../commands/DeregisterStreamConsumerCommand\";\nimport { DescribeLimitsCommandInput, DescribeLimitsCommandOutput } from \"../commands/DescribeLimitsCommand\";\nimport { DescribeStreamCommandInput, DescribeStreamCommandOutput } from \"../commands/DescribeStreamCommand\";\nimport {\n  DescribeStreamConsumerCommandInput,\n  DescribeStreamConsumerCommandOutput,\n} from \"../commands/DescribeStreamConsumerCommand\";\nimport {\n  DescribeStreamSummaryCommandInput,\n  DescribeStreamSummaryCommandOutput,\n} from \"../commands/DescribeStreamSummaryCommand\";\nimport {\n  DisableEnhancedMonitoringCommandInput,\n  DisableEnhancedMonitoringCommandOutput,\n} from \"../commands/DisableEnhancedMonitoringCommand\";\nimport {\n  EnableEnhancedMonitoringCommandInput,\n  EnableEnhancedMonitoringCommandOutput,\n} from \"../commands/EnableEnhancedMonitoringCommand\";\nimport { GetRecordsCommandInput, GetRecordsCommandOutput } from \"../commands/GetRecordsCommand\";\nimport { GetShardIteratorCommandInput, GetShardIteratorCommandOutput } from \"../commands/GetShardIteratorCommand\";\nimport {\n  IncreaseStreamRetentionPeriodCommandInput,\n  IncreaseStreamRetentionPeriodCommandOutput,\n} from \"../commands/IncreaseStreamRetentionPeriodCommand\";\nimport { ListShardsCommandInput, ListShardsCommandOutput } from \"../commands/ListShardsCommand\";\nimport {\n  ListStreamConsumersCommandInput,\n  ListStreamConsumersCommandOutput,\n} from \"../commands/ListStreamConsumersCommand\";\nimport { ListStreamsCommandInput, ListStreamsCommandOutput } from \"../commands/ListStreamsCommand\";\nimport { ListTagsForStreamCommandInput, ListTagsForStreamCommandOutput } from \"../commands/ListTagsForStreamCommand\";\nimport { MergeShardsCommandInput, MergeShardsCommandOutput } from \"../commands/MergeShardsCommand\";\nimport { PutRecordCommandInput, PutRecordCommandOutput } from \"../commands/PutRecordCommand\";\nimport { PutRecordsCommandInput, PutRecordsCommandOutput } from \"../commands/PutRecordsCommand\";\nimport {\n  RegisterStreamConsumerCommandInput,\n  RegisterStreamConsumerCommandOutput,\n} from \"../commands/RegisterStreamConsumerCommand\";\nimport {\n  RemoveTagsFromStreamCommandInput,\n  RemoveTagsFromStreamCommandOutput,\n} from \"../commands/RemoveTagsFromStreamCommand\";\nimport { SplitShardCommandInput, SplitShardCommandOutput } from \"../commands/SplitShardCommand\";\nimport {\n  StartStreamEncryptionCommandInput,\n  StartStreamEncryptionCommandOutput,\n} from \"../commands/StartStreamEncryptionCommand\";\nimport {\n  StopStreamEncryptionCommandInput,\n  StopStreamEncryptionCommandOutput,\n} from \"../commands/StopStreamEncryptionCommand\";\nimport { SubscribeToShardCommandInput, SubscribeToShardCommandOutput } from \"../commands/SubscribeToShardCommand\";\nimport { UpdateShardCountCommandInput, UpdateShardCountCommandOutput } from \"../commands/UpdateShardCountCommand\";\nimport {\n  AddTagsToStreamInput,\n  ChildShard,\n  Consumer,\n  ConsumerDescription,\n  CreateStreamInput,\n  DecreaseStreamRetentionPeriodInput,\n  DeleteStreamInput,\n  DeregisterStreamConsumerInput,\n  DescribeLimitsInput,\n  DescribeLimitsOutput,\n  DescribeStreamConsumerInput,\n  DescribeStreamConsumerOutput,\n  DescribeStreamInput,\n  DescribeStreamOutput,\n  DescribeStreamSummaryInput,\n  DescribeStreamSummaryOutput,\n  DisableEnhancedMonitoringInput,\n  EnableEnhancedMonitoringInput,\n  EnhancedMetrics,\n  EnhancedMonitoringOutput,\n  ExpiredIteratorException,\n  ExpiredNextTokenException,\n  GetRecordsInput,\n  GetRecordsOutput,\n  GetShardIteratorInput,\n  GetShardIteratorOutput,\n  HashKeyRange,\n  IncreaseStreamRetentionPeriodInput,\n  InternalFailureException,\n  InvalidArgumentException,\n  KMSAccessDeniedException,\n  KMSDisabledException,\n  KMSInvalidStateException,\n  KMSNotFoundException,\n  KMSOptInRequired,\n  KMSThrottlingException,\n  LimitExceededException,\n  ListShardsInput,\n  ListShardsOutput,\n  ListStreamConsumersInput,\n  ListStreamConsumersOutput,\n  ListStreamsInput,\n  ListStreamsOutput,\n  ListTagsForStreamInput,\n  ListTagsForStreamOutput,\n  MergeShardsInput,\n  MetricsName,\n  ProvisionedThroughputExceededException,\n  PutRecordInput,\n  PutRecordOutput,\n  PutRecordsInput,\n  PutRecordsOutput,\n  PutRecordsRequestEntry,\n  PutRecordsResultEntry,\n  RegisterStreamConsumerInput,\n  RegisterStreamConsumerOutput,\n  RemoveTagsFromStreamInput,\n  ResourceInUseException,\n  ResourceNotFoundException,\n  SequenceNumberRange,\n  Shard,\n  ShardFilter,\n  SplitShardInput,\n  StartStreamEncryptionInput,\n  StartingPosition,\n  StopStreamEncryptionInput,\n  StreamDescription,\n  StreamDescriptionSummary,\n  SubscribeToShardEvent,\n  SubscribeToShardEventStream,\n  SubscribeToShardInput,\n  SubscribeToShardOutput,\n  Tag,\n  UpdateShardCountInput,\n  UpdateShardCountOutput,\n  _Record,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport const serializeAws_json1_1AddTagsToStreamCommand = async (\n  input: AddTagsToStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.AddTagsToStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1AddTagsToStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1CreateStreamCommand = async (\n  input: CreateStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.CreateStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DecreaseStreamRetentionPeriodCommand = async (\n  input: DecreaseStreamRetentionPeriodCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DecreaseStreamRetentionPeriod\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DecreaseStreamRetentionPeriodInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteStreamCommand = async (\n  input: DeleteStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DeleteStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeregisterStreamConsumerCommand = async (\n  input: DeregisterStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DeregisterStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeregisterStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeLimitsCommand = async (\n  input: DescribeLimitsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeLimits\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeLimitsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamCommand = async (\n  input: DescribeStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamConsumerCommand = async (\n  input: DescribeStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeStreamSummaryCommand = async (\n  input: DescribeStreamSummaryCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DescribeStreamSummary\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeStreamSummaryInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DisableEnhancedMonitoringCommand = async (\n  input: DisableEnhancedMonitoringCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.DisableEnhancedMonitoring\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DisableEnhancedMonitoringInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1EnableEnhancedMonitoringCommand = async (\n  input: EnableEnhancedMonitoringCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.EnableEnhancedMonitoring\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1EnableEnhancedMonitoringInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetRecordsCommand = async (\n  input: GetRecordsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.GetRecords\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetRecordsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetShardIteratorCommand = async (\n  input: GetShardIteratorCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.GetShardIterator\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetShardIteratorInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1IncreaseStreamRetentionPeriodCommand = async (\n  input: IncreaseStreamRetentionPeriodCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.IncreaseStreamRetentionPeriod\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1IncreaseStreamRetentionPeriodInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListShardsCommand = async (\n  input: ListShardsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListShards\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListShardsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListStreamConsumersCommand = async (\n  input: ListStreamConsumersCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListStreamConsumers\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListStreamConsumersInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListStreamsCommand = async (\n  input: ListStreamsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListStreams\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListStreamsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTagsForStreamCommand = async (\n  input: ListTagsForStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.ListTagsForStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTagsForStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1MergeShardsCommand = async (\n  input: MergeShardsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.MergeShards\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1MergeShardsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutRecordCommand = async (\n  input: PutRecordCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.PutRecord\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutRecordInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1PutRecordsCommand = async (\n  input: PutRecordsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.PutRecords\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1PutRecordsInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1RegisterStreamConsumerCommand = async (\n  input: RegisterStreamConsumerCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.RegisterStreamConsumer\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1RegisterStreamConsumerInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1RemoveTagsFromStreamCommand = async (\n  input: RemoveTagsFromStreamCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.RemoveTagsFromStream\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1RemoveTagsFromStreamInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1SplitShardCommand = async (\n  input: SplitShardCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.SplitShard\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1SplitShardInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StartStreamEncryptionCommand = async (\n  input: StartStreamEncryptionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.StartStreamEncryption\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StartStreamEncryptionInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StopStreamEncryptionCommand = async (\n  input: StopStreamEncryptionCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.StopStreamEncryption\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StopStreamEncryptionInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1SubscribeToShardCommand = async (\n  input: SubscribeToShardCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.SubscribeToShard\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1SubscribeToShardInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UpdateShardCountCommand = async (\n  input: UpdateShardCountCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"Kinesis_20131202.UpdateShardCount\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UpdateShardCountInput(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1AddTagsToStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AddTagsToStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1AddTagsToStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: AddTagsToStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1AddTagsToStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<AddTagsToStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1CreateStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: CreateStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DecreaseStreamRetentionPeriodCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DecreaseStreamRetentionPeriodCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DecreaseStreamRetentionPeriodCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DecreaseStreamRetentionPeriodCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DecreaseStreamRetentionPeriodCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeregisterStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeregisterStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeregisterStreamConsumerCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeregisterStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeregisterStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeregisterStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeLimitsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLimitsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeLimitsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeLimitsOutput(data, context);\n  const response: DescribeLimitsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeLimitsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeLimitsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeStreamCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamOutput(data, context);\n  const response: DescribeStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeStreamConsumerCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamConsumerOutput(data, context);\n  const response: DescribeStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeStreamSummaryCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamSummaryCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeStreamSummaryCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeStreamSummaryOutput(data, context);\n  const response: DescribeStreamSummaryCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeStreamSummaryCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeStreamSummaryCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DisableEnhancedMonitoringCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisableEnhancedMonitoringCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DisableEnhancedMonitoringCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n  const response: DisableEnhancedMonitoringCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DisableEnhancedMonitoringCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DisableEnhancedMonitoringCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1EnableEnhancedMonitoringCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<EnableEnhancedMonitoringCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1EnableEnhancedMonitoringCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1EnhancedMonitoringOutput(data, context);\n  const response: EnableEnhancedMonitoringCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1EnableEnhancedMonitoringCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<EnableEnhancedMonitoringCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetRecordsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecordsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetRecordsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetRecordsOutput(data, context);\n  const response: GetRecordsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetRecordsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetRecordsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExpiredIteratorException\":\n    case \"com.amazonaws.kinesis#ExpiredIteratorException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredIteratorExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetShardIteratorCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetShardIteratorCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetShardIteratorCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetShardIteratorOutput(data, context);\n  const response: GetShardIteratorCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetShardIteratorCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetShardIteratorCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1IncreaseStreamRetentionPeriodCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<IncreaseStreamRetentionPeriodCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: IncreaseStreamRetentionPeriodCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1IncreaseStreamRetentionPeriodCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<IncreaseStreamRetentionPeriodCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListShardsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListShardsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListShardsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListShardsOutput(data, context);\n  const response: ListShardsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListShardsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListShardsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExpiredNextTokenException\":\n    case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListStreamConsumersCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamConsumersCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListStreamConsumersCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListStreamConsumersOutput(data, context);\n  const response: ListStreamConsumersCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListStreamConsumersCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamConsumersCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ExpiredNextTokenException\":\n    case \"com.amazonaws.kinesis#ExpiredNextTokenException\":\n      response = {\n        ...(await deserializeAws_json1_1ExpiredNextTokenExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListStreamsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListStreamsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListStreamsOutput(data, context);\n  const response: ListStreamsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListStreamsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListStreamsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTagsForStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTagsForStreamCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTagsForStreamOutput(data, context);\n  const response: ListTagsForStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTagsForStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTagsForStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1MergeShardsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeShardsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1MergeShardsCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: MergeShardsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1MergeShardsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<MergeShardsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutRecordCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutRecordCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutRecordOutput(data, context);\n  const response: PutRecordCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutRecordCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1PutRecordsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1PutRecordsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1PutRecordsOutput(data, context);\n  const response: PutRecordsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1PutRecordsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<PutRecordsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ProvisionedThroughputExceededException\":\n    case \"com.amazonaws.kinesis#ProvisionedThroughputExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1RegisterStreamConsumerCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RegisterStreamConsumerCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1RegisterStreamConsumerCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1RegisterStreamConsumerOutput(data, context);\n  const response: RegisterStreamConsumerCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1RegisterStreamConsumerCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RegisterStreamConsumerCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1RemoveTagsFromStreamCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveTagsFromStreamCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1RemoveTagsFromStreamCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: RemoveTagsFromStreamCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1RemoveTagsFromStreamCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<RemoveTagsFromStreamCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1SplitShardCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SplitShardCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SplitShardCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: SplitShardCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SplitShardCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SplitShardCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StartStreamEncryptionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartStreamEncryptionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StartStreamEncryptionCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: StartStreamEncryptionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StartStreamEncryptionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartStreamEncryptionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSAccessDeniedException\":\n    case \"com.amazonaws.kinesis#KMSAccessDeniedException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSDisabledException\":\n    case \"com.amazonaws.kinesis#KMSDisabledException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSDisabledExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSInvalidStateException\":\n    case \"com.amazonaws.kinesis#KMSInvalidStateException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSNotFoundException\":\n    case \"com.amazonaws.kinesis#KMSNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSOptInRequired\":\n    case \"com.amazonaws.kinesis#KMSOptInRequired\":\n      response = {\n        ...(await deserializeAws_json1_1KMSOptInRequiredResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"KMSThrottlingException\":\n    case \"com.amazonaws.kinesis#KMSThrottlingException\":\n      response = {\n        ...(await deserializeAws_json1_1KMSThrottlingExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StopStreamEncryptionCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopStreamEncryptionCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StopStreamEncryptionCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: StopStreamEncryptionCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StopStreamEncryptionCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopStreamEncryptionCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1SubscribeToShardCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SubscribeToShardCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1SubscribeToShardCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1SubscribeToShardOutput(data, context);\n  const response: SubscribeToShardCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1SubscribeToShardCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<SubscribeToShardCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UpdateShardCountCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateShardCountCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UpdateShardCountCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1UpdateShardCountOutput(data, context);\n  const response: UpdateShardCountCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UpdateShardCountCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateShardCountCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InvalidArgumentException\":\n    case \"com.amazonaws.kinesis#InvalidArgumentException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidArgumentExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.kinesis#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceInUseException\":\n    case \"com.amazonaws.kinesis#ResourceInUseException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceInUseExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.kinesis#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1ExpiredIteratorExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ExpiredIteratorException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ExpiredIteratorException(body, context);\n  const contents: ExpiredIteratorException = {\n    name: \"ExpiredIteratorException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ExpiredNextTokenExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ExpiredNextTokenException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ExpiredNextTokenException(body, context);\n  const contents: ExpiredNextTokenException = {\n    name: \"ExpiredNextTokenException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidArgumentExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidArgumentException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidArgumentException(body, context);\n  const contents: InvalidArgumentException = {\n    name: \"InvalidArgumentException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSAccessDeniedExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSAccessDeniedException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSAccessDeniedException(body, context);\n  const contents: KMSAccessDeniedException = {\n    name: \"KMSAccessDeniedException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSDisabledExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSDisabledException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSDisabledException(body, context);\n  const contents: KMSDisabledException = {\n    name: \"KMSDisabledException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSInvalidStateExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSInvalidStateException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSInvalidStateException(body, context);\n  const contents: KMSInvalidStateException = {\n    name: \"KMSInvalidStateException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSNotFoundException(body, context);\n  const contents: KMSNotFoundException = {\n    name: \"KMSNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSOptInRequiredResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSOptInRequired> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSOptInRequired(body, context);\n  const contents: KMSOptInRequired = {\n    name: \"KMSOptInRequired\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1KMSThrottlingExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<KMSThrottlingException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1KMSThrottlingException(body, context);\n  const contents: KMSThrottlingException = {\n    name: \"KMSThrottlingException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ProvisionedThroughputExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ProvisionedThroughputExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ProvisionedThroughputExceededException(body, context);\n  const contents: ProvisionedThroughputExceededException = {\n    name: \"ProvisionedThroughputExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceInUseExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceInUseException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceInUseException(body, context);\n  const contents: ResourceInUseException = {\n    name: \"ResourceInUseException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1AddTagsToStreamInput = (input: AddTagsToStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.Tags !== undefined && input.Tags !== null && { Tags: serializeAws_json1_1TagMap(input.Tags, context) }),\n  };\n};\n\nconst serializeAws_json1_1CreateStreamInput = (input: CreateStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ShardCount !== undefined && input.ShardCount !== null && { ShardCount: input.ShardCount }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DecreaseStreamRetentionPeriodInput = (\n  input: DecreaseStreamRetentionPeriodInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.RetentionPeriodHours !== undefined &&\n      input.RetentionPeriodHours !== null && { RetentionPeriodHours: input.RetentionPeriodHours }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeleteStreamInput = (input: DeleteStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.EnforceConsumerDeletion !== undefined &&\n      input.EnforceConsumerDeletion !== null && { EnforceConsumerDeletion: input.EnforceConsumerDeletion }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DeregisterStreamConsumerInput = (\n  input: DeregisterStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && input.ConsumerARN !== null && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ConsumerName !== undefined && input.ConsumerName !== null && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1DescribeLimitsInput = (input: DescribeLimitsInput, context: __SerdeContext): any => {\n  return {};\n};\n\nconst serializeAws_json1_1DescribeStreamConsumerInput = (\n  input: DescribeStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && input.ConsumerARN !== null && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ConsumerName !== undefined && input.ConsumerName !== null && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1DescribeStreamInput = (input: DescribeStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartShardId !== undefined &&\n      input.ExclusiveStartShardId !== null && { ExclusiveStartShardId: input.ExclusiveStartShardId }),\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DescribeStreamSummaryInput = (\n  input: DescribeStreamSummaryInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1DisableEnhancedMonitoringInput = (\n  input: DisableEnhancedMonitoringInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ShardLevelMetrics !== undefined &&\n      input.ShardLevelMetrics !== null && {\n        ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context),\n      }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1EnableEnhancedMonitoringInput = (\n  input: EnableEnhancedMonitoringInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ShardLevelMetrics !== undefined &&\n      input.ShardLevelMetrics !== null && {\n        ShardLevelMetrics: serializeAws_json1_1MetricsNameList(input.ShardLevelMetrics, context),\n      }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1GetRecordsInput = (input: GetRecordsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n    ...(input.ShardIterator !== undefined && input.ShardIterator !== null && { ShardIterator: input.ShardIterator }),\n  };\n};\n\nconst serializeAws_json1_1GetShardIteratorInput = (input: GetShardIteratorInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ShardId !== undefined && input.ShardId !== null && { ShardId: input.ShardId }),\n    ...(input.ShardIteratorType !== undefined &&\n      input.ShardIteratorType !== null && { ShardIteratorType: input.ShardIteratorType }),\n    ...(input.StartingSequenceNumber !== undefined &&\n      input.StartingSequenceNumber !== null && { StartingSequenceNumber: input.StartingSequenceNumber }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.Timestamp !== undefined &&\n      input.Timestamp !== null && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }),\n  };\n};\n\nconst serializeAws_json1_1IncreaseStreamRetentionPeriodInput = (\n  input: IncreaseStreamRetentionPeriodInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.RetentionPeriodHours !== undefined &&\n      input.RetentionPeriodHours !== null && { RetentionPeriodHours: input.RetentionPeriodHours }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1ListShardsInput = (input: ListShardsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartShardId !== undefined &&\n      input.ExclusiveStartShardId !== null && { ExclusiveStartShardId: input.ExclusiveStartShardId }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n    ...(input.ShardFilter !== undefined &&\n      input.ShardFilter !== null && { ShardFilter: serializeAws_json1_1ShardFilter(input.ShardFilter, context) }),\n    ...(input.StreamCreationTimestamp !== undefined &&\n      input.StreamCreationTimestamp !== null && {\n        StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000),\n      }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1ListStreamConsumersInput = (\n  input: ListStreamConsumersInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n    ...(input.StreamCreationTimestamp !== undefined &&\n      input.StreamCreationTimestamp !== null && {\n        StreamCreationTimestamp: Math.round(input.StreamCreationTimestamp.getTime() / 1000),\n      }),\n  };\n};\n\nconst serializeAws_json1_1ListStreamsInput = (input: ListStreamsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartStreamName !== undefined &&\n      input.ExclusiveStartStreamName !== null && { ExclusiveStartStreamName: input.ExclusiveStartStreamName }),\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n  };\n};\n\nconst serializeAws_json1_1ListTagsForStreamInput = (input: ListTagsForStreamInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ExclusiveStartTagKey !== undefined &&\n      input.ExclusiveStartTagKey !== null && { ExclusiveStartTagKey: input.ExclusiveStartTagKey }),\n    ...(input.Limit !== undefined && input.Limit !== null && { Limit: input.Limit }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1MergeShardsInput = (input: MergeShardsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.AdjacentShardToMerge !== undefined &&\n      input.AdjacentShardToMerge !== null && { AdjacentShardToMerge: input.AdjacentShardToMerge }),\n    ...(input.ShardToMerge !== undefined && input.ShardToMerge !== null && { ShardToMerge: input.ShardToMerge }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1MetricsNameList = (input: (MetricsName | string)[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1PutRecordInput = (input: PutRecordInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: context.base64Encoder(input.Data) }),\n    ...(input.ExplicitHashKey !== undefined &&\n      input.ExplicitHashKey !== null && { ExplicitHashKey: input.ExplicitHashKey }),\n    ...(input.PartitionKey !== undefined && input.PartitionKey !== null && { PartitionKey: input.PartitionKey }),\n    ...(input.SequenceNumberForOrdering !== undefined &&\n      input.SequenceNumberForOrdering !== null && { SequenceNumberForOrdering: input.SequenceNumberForOrdering }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsInput = (input: PutRecordsInput, context: __SerdeContext): any => {\n  return {\n    ...(input.Records !== undefined &&\n      input.Records !== null && { Records: serializeAws_json1_1PutRecordsRequestEntryList(input.Records, context) }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsRequestEntry = (input: PutRecordsRequestEntry, context: __SerdeContext): any => {\n  return {\n    ...(input.Data !== undefined && input.Data !== null && { Data: context.base64Encoder(input.Data) }),\n    ...(input.ExplicitHashKey !== undefined &&\n      input.ExplicitHashKey !== null && { ExplicitHashKey: input.ExplicitHashKey }),\n    ...(input.PartitionKey !== undefined && input.PartitionKey !== null && { PartitionKey: input.PartitionKey }),\n  };\n};\n\nconst serializeAws_json1_1PutRecordsRequestEntryList = (\n  input: PutRecordsRequestEntry[],\n  context: __SerdeContext\n): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return serializeAws_json1_1PutRecordsRequestEntry(entry, context);\n    });\n};\n\nconst serializeAws_json1_1RegisterStreamConsumerInput = (\n  input: RegisterStreamConsumerInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.ConsumerName !== undefined && input.ConsumerName !== null && { ConsumerName: input.ConsumerName }),\n    ...(input.StreamARN !== undefined && input.StreamARN !== null && { StreamARN: input.StreamARN }),\n  };\n};\n\nconst serializeAws_json1_1RemoveTagsFromStreamInput = (\n  input: RemoveTagsFromStreamInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.TagKeys !== undefined &&\n      input.TagKeys !== null && { TagKeys: serializeAws_json1_1TagKeyList(input.TagKeys, context) }),\n  };\n};\n\nconst serializeAws_json1_1ShardFilter = (input: ShardFilter, context: __SerdeContext): any => {\n  return {\n    ...(input.ShardId !== undefined && input.ShardId !== null && { ShardId: input.ShardId }),\n    ...(input.Timestamp !== undefined &&\n      input.Timestamp !== null && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1SplitShardInput = (input: SplitShardInput, context: __SerdeContext): any => {\n  return {\n    ...(input.NewStartingHashKey !== undefined &&\n      input.NewStartingHashKey !== null && { NewStartingHashKey: input.NewStartingHashKey }),\n    ...(input.ShardToSplit !== undefined && input.ShardToSplit !== null && { ShardToSplit: input.ShardToSplit }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1StartingPosition = (input: StartingPosition, context: __SerdeContext): any => {\n  return {\n    ...(input.SequenceNumber !== undefined &&\n      input.SequenceNumber !== null && { SequenceNumber: input.SequenceNumber }),\n    ...(input.Timestamp !== undefined &&\n      input.Timestamp !== null && { Timestamp: Math.round(input.Timestamp.getTime() / 1000) }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1StartStreamEncryptionInput = (\n  input: StartStreamEncryptionInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.EncryptionType !== undefined &&\n      input.EncryptionType !== null && { EncryptionType: input.EncryptionType }),\n    ...(input.KeyId !== undefined && input.KeyId !== null && { KeyId: input.KeyId }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1StopStreamEncryptionInput = (\n  input: StopStreamEncryptionInput,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.EncryptionType !== undefined &&\n      input.EncryptionType !== null && { EncryptionType: input.EncryptionType }),\n    ...(input.KeyId !== undefined && input.KeyId !== null && { KeyId: input.KeyId }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n  };\n};\n\nconst serializeAws_json1_1SubscribeToShardInput = (input: SubscribeToShardInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ConsumerARN !== undefined && input.ConsumerARN !== null && { ConsumerARN: input.ConsumerARN }),\n    ...(input.ShardId !== undefined && input.ShardId !== null && { ShardId: input.ShardId }),\n    ...(input.StartingPosition !== undefined &&\n      input.StartingPosition !== null && {\n        StartingPosition: serializeAws_json1_1StartingPosition(input.StartingPosition, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1TagKeyList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1TagMap = (input: { [key: string]: string }, context: __SerdeContext): any => {\n  return Object.entries(input).reduce((acc: { [key: string]: string }, [key, value]: [string, any]) => {\n    if (value === null) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [key]: value,\n    };\n  }, {});\n};\n\nconst serializeAws_json1_1UpdateShardCountInput = (input: UpdateShardCountInput, context: __SerdeContext): any => {\n  return {\n    ...(input.ScalingType !== undefined && input.ScalingType !== null && { ScalingType: input.ScalingType }),\n    ...(input.StreamName !== undefined && input.StreamName !== null && { StreamName: input.StreamName }),\n    ...(input.TargetShardCount !== undefined &&\n      input.TargetShardCount !== null && { TargetShardCount: input.TargetShardCount }),\n  };\n};\n\nconst deserializeAws_json1_1ChildShard = (output: any, context: __SerdeContext): ChildShard => {\n  return {\n    HashKeyRange:\n      output.HashKeyRange !== undefined && output.HashKeyRange !== null\n        ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context)\n        : undefined,\n    ParentShards:\n      output.ParentShards !== undefined && output.ParentShards !== null\n        ? deserializeAws_json1_1ShardIdList(output.ParentShards, context)\n        : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ChildShardList = (output: any, context: __SerdeContext): ChildShard[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ChildShard(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1Consumer = (output: any, context: __SerdeContext): Consumer => {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp:\n      output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null\n        ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000))\n        : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus:\n      output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ConsumerDescription = (output: any, context: __SerdeContext): ConsumerDescription => {\n  return {\n    ConsumerARN: output.ConsumerARN !== undefined && output.ConsumerARN !== null ? output.ConsumerARN : undefined,\n    ConsumerCreationTimestamp:\n      output.ConsumerCreationTimestamp !== undefined && output.ConsumerCreationTimestamp !== null\n        ? new Date(Math.round(output.ConsumerCreationTimestamp * 1000))\n        : undefined,\n    ConsumerName: output.ConsumerName !== undefined && output.ConsumerName !== null ? output.ConsumerName : undefined,\n    ConsumerStatus:\n      output.ConsumerStatus !== undefined && output.ConsumerStatus !== null ? output.ConsumerStatus : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ConsumerList = (output: any, context: __SerdeContext): Consumer[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Consumer(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1DescribeLimitsOutput = (output: any, context: __SerdeContext): DescribeLimitsOutput => {\n  return {\n    OpenShardCount:\n      output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    ShardLimit: output.ShardLimit !== undefined && output.ShardLimit !== null ? output.ShardLimit : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamConsumerOutput = (\n  output: any,\n  context: __SerdeContext\n): DescribeStreamConsumerOutput => {\n  return {\n    ConsumerDescription:\n      output.ConsumerDescription !== undefined && output.ConsumerDescription !== null\n        ? deserializeAws_json1_1ConsumerDescription(output.ConsumerDescription, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamOutput = (output: any, context: __SerdeContext): DescribeStreamOutput => {\n  return {\n    StreamDescription:\n      output.StreamDescription !== undefined && output.StreamDescription !== null\n        ? deserializeAws_json1_1StreamDescription(output.StreamDescription, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeStreamSummaryOutput = (\n  output: any,\n  context: __SerdeContext\n): DescribeStreamSummaryOutput => {\n  return {\n    StreamDescriptionSummary:\n      output.StreamDescriptionSummary !== undefined && output.StreamDescriptionSummary !== null\n        ? deserializeAws_json1_1StreamDescriptionSummary(output.StreamDescriptionSummary, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EnhancedMetrics = (output: any, context: __SerdeContext): EnhancedMetrics => {\n  return {\n    ShardLevelMetrics:\n      output.ShardLevelMetrics !== undefined && output.ShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.ShardLevelMetrics, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EnhancedMonitoringList = (output: any, context: __SerdeContext): EnhancedMetrics[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1EnhancedMetrics(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1EnhancedMonitoringOutput = (\n  output: any,\n  context: __SerdeContext\n): EnhancedMonitoringOutput => {\n  return {\n    CurrentShardLevelMetrics:\n      output.CurrentShardLevelMetrics !== undefined && output.CurrentShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.CurrentShardLevelMetrics, context)\n        : undefined,\n    DesiredShardLevelMetrics:\n      output.DesiredShardLevelMetrics !== undefined && output.DesiredShardLevelMetrics !== null\n        ? deserializeAws_json1_1MetricsNameList(output.DesiredShardLevelMetrics, context)\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExpiredIteratorException = (\n  output: any,\n  context: __SerdeContext\n): ExpiredIteratorException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ExpiredNextTokenException = (\n  output: any,\n  context: __SerdeContext\n): ExpiredNextTokenException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetRecordsOutput = (output: any, context: __SerdeContext): GetRecordsOutput => {\n  return {\n    ChildShards:\n      output.ChildShards !== undefined && output.ChildShards !== null\n        ? deserializeAws_json1_1ChildShardList(output.ChildShards, context)\n        : undefined,\n    MillisBehindLatest:\n      output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null\n        ? output.MillisBehindLatest\n        : undefined,\n    NextShardIterator:\n      output.NextShardIterator !== undefined && output.NextShardIterator !== null\n        ? output.NextShardIterator\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1RecordList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetShardIteratorOutput = (output: any, context: __SerdeContext): GetShardIteratorOutput => {\n  return {\n    ShardIterator:\n      output.ShardIterator !== undefined && output.ShardIterator !== null ? output.ShardIterator : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1HashKeyRange = (output: any, context: __SerdeContext): HashKeyRange => {\n  return {\n    EndingHashKey:\n      output.EndingHashKey !== undefined && output.EndingHashKey !== null ? output.EndingHashKey : undefined,\n    StartingHashKey:\n      output.StartingHashKey !== undefined && output.StartingHashKey !== null ? output.StartingHashKey : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InternalFailureException = (\n  output: any,\n  context: __SerdeContext\n): InternalFailureException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidArgumentException = (\n  output: any,\n  context: __SerdeContext\n): InvalidArgumentException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSAccessDeniedException = (\n  output: any,\n  context: __SerdeContext\n): KMSAccessDeniedException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSDisabledException = (output: any, context: __SerdeContext): KMSDisabledException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSInvalidStateException = (\n  output: any,\n  context: __SerdeContext\n): KMSInvalidStateException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSNotFoundException = (output: any, context: __SerdeContext): KMSNotFoundException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSOptInRequired = (output: any, context: __SerdeContext): KMSOptInRequired => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1KMSThrottlingException = (output: any, context: __SerdeContext): KMSThrottlingException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListShardsOutput = (output: any, context: __SerdeContext): ListShardsOutput => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    Shards:\n      output.Shards !== undefined && output.Shards !== null\n        ? deserializeAws_json1_1ShardList(output.Shards, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListStreamConsumersOutput = (\n  output: any,\n  context: __SerdeContext\n): ListStreamConsumersOutput => {\n  return {\n    Consumers:\n      output.Consumers !== undefined && output.Consumers !== null\n        ? deserializeAws_json1_1ConsumerList(output.Consumers, context)\n        : undefined,\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListStreamsOutput = (output: any, context: __SerdeContext): ListStreamsOutput => {\n  return {\n    HasMoreStreams:\n      output.HasMoreStreams !== undefined && output.HasMoreStreams !== null ? output.HasMoreStreams : undefined,\n    StreamNames:\n      output.StreamNames !== undefined && output.StreamNames !== null\n        ? deserializeAws_json1_1StreamNameList(output.StreamNames, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTagsForStreamOutput = (\n  output: any,\n  context: __SerdeContext\n): ListTagsForStreamOutput => {\n  return {\n    HasMoreTags: output.HasMoreTags !== undefined && output.HasMoreTags !== null ? output.HasMoreTags : undefined,\n    Tags:\n      output.Tags !== undefined && output.Tags !== null\n        ? deserializeAws_json1_1TagList(output.Tags, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1MetricsNameList = (output: any, context: __SerdeContext): (MetricsName | string)[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ProvisionedThroughputExceededException = (\n  output: any,\n  context: __SerdeContext\n): ProvisionedThroughputExceededException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordOutput = (output: any, context: __SerdeContext): PutRecordOutput => {\n  return {\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsOutput = (output: any, context: __SerdeContext): PutRecordsOutput => {\n  return {\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    FailedRecordCount:\n      output.FailedRecordCount !== undefined && output.FailedRecordCount !== null\n        ? output.FailedRecordCount\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1PutRecordsResultEntryList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsResultEntry = (output: any, context: __SerdeContext): PutRecordsResultEntry => {\n  return {\n    ErrorCode: output.ErrorCode !== undefined && output.ErrorCode !== null ? output.ErrorCode : undefined,\n    ErrorMessage: output.ErrorMessage !== undefined && output.ErrorMessage !== null ? output.ErrorMessage : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1PutRecordsResultEntryList = (\n  output: any,\n  context: __SerdeContext\n): PutRecordsResultEntry[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1PutRecordsResultEntry(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1_Record = (output: any, context: __SerdeContext): _Record => {\n  return {\n    ApproximateArrivalTimestamp:\n      output.ApproximateArrivalTimestamp !== undefined && output.ApproximateArrivalTimestamp !== null\n        ? new Date(Math.round(output.ApproximateArrivalTimestamp * 1000))\n        : undefined,\n    Data: output.Data !== undefined && output.Data !== null ? context.base64Decoder(output.Data) : undefined,\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    PartitionKey: output.PartitionKey !== undefined && output.PartitionKey !== null ? output.PartitionKey : undefined,\n    SequenceNumber:\n      output.SequenceNumber !== undefined && output.SequenceNumber !== null ? output.SequenceNumber : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1RecordList = (output: any, context: __SerdeContext): _Record[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1_Record(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1RegisterStreamConsumerOutput = (\n  output: any,\n  context: __SerdeContext\n): RegisterStreamConsumerOutput => {\n  return {\n    Consumer:\n      output.Consumer !== undefined && output.Consumer !== null\n        ? deserializeAws_json1_1Consumer(output.Consumer, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceInUseException = (output: any, context: __SerdeContext): ResourceInUseException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    message: output.message !== undefined && output.message !== null ? output.message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SequenceNumberRange = (output: any, context: __SerdeContext): SequenceNumberRange => {\n  return {\n    EndingSequenceNumber:\n      output.EndingSequenceNumber !== undefined && output.EndingSequenceNumber !== null\n        ? output.EndingSequenceNumber\n        : undefined,\n    StartingSequenceNumber:\n      output.StartingSequenceNumber !== undefined && output.StartingSequenceNumber !== null\n        ? output.StartingSequenceNumber\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Shard = (output: any, context: __SerdeContext): Shard => {\n  return {\n    AdjacentParentShardId:\n      output.AdjacentParentShardId !== undefined && output.AdjacentParentShardId !== null\n        ? output.AdjacentParentShardId\n        : undefined,\n    HashKeyRange:\n      output.HashKeyRange !== undefined && output.HashKeyRange !== null\n        ? deserializeAws_json1_1HashKeyRange(output.HashKeyRange, context)\n        : undefined,\n    ParentShardId:\n      output.ParentShardId !== undefined && output.ParentShardId !== null ? output.ParentShardId : undefined,\n    SequenceNumberRange:\n      output.SequenceNumberRange !== undefined && output.SequenceNumberRange !== null\n        ? deserializeAws_json1_1SequenceNumberRange(output.SequenceNumberRange, context)\n        : undefined,\n    ShardId: output.ShardId !== undefined && output.ShardId !== null ? output.ShardId : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ShardIdList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ShardList = (output: any, context: __SerdeContext): Shard[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Shard(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1StreamDescription = (output: any, context: __SerdeContext): StreamDescription => {\n  return {\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring:\n      output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null\n        ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context)\n        : undefined,\n    HasMoreShards:\n      output.HasMoreShards !== undefined && output.HasMoreShards !== null ? output.HasMoreShards : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    RetentionPeriodHours:\n      output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null\n        ? output.RetentionPeriodHours\n        : undefined,\n    Shards:\n      output.Shards !== undefined && output.Shards !== null\n        ? deserializeAws_json1_1ShardList(output.Shards, context)\n        : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp:\n      output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null\n        ? new Date(Math.round(output.StreamCreationTimestamp * 1000))\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StreamDescriptionSummary = (\n  output: any,\n  context: __SerdeContext\n): StreamDescriptionSummary => {\n  return {\n    ConsumerCount:\n      output.ConsumerCount !== undefined && output.ConsumerCount !== null ? output.ConsumerCount : undefined,\n    EncryptionType:\n      output.EncryptionType !== undefined && output.EncryptionType !== null ? output.EncryptionType : undefined,\n    EnhancedMonitoring:\n      output.EnhancedMonitoring !== undefined && output.EnhancedMonitoring !== null\n        ? deserializeAws_json1_1EnhancedMonitoringList(output.EnhancedMonitoring, context)\n        : undefined,\n    KeyId: output.KeyId !== undefined && output.KeyId !== null ? output.KeyId : undefined,\n    OpenShardCount:\n      output.OpenShardCount !== undefined && output.OpenShardCount !== null ? output.OpenShardCount : undefined,\n    RetentionPeriodHours:\n      output.RetentionPeriodHours !== undefined && output.RetentionPeriodHours !== null\n        ? output.RetentionPeriodHours\n        : undefined,\n    StreamARN: output.StreamARN !== undefined && output.StreamARN !== null ? output.StreamARN : undefined,\n    StreamCreationTimestamp:\n      output.StreamCreationTimestamp !== undefined && output.StreamCreationTimestamp !== null\n        ? new Date(Math.round(output.StreamCreationTimestamp * 1000))\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    StreamStatus: output.StreamStatus !== undefined && output.StreamStatus !== null ? output.StreamStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StreamNameList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1SubscribeToShardEvent = (output: any, context: __SerdeContext): SubscribeToShardEvent => {\n  return {\n    ChildShards:\n      output.ChildShards !== undefined && output.ChildShards !== null\n        ? deserializeAws_json1_1ChildShardList(output.ChildShards, context)\n        : undefined,\n    ContinuationSequenceNumber:\n      output.ContinuationSequenceNumber !== undefined && output.ContinuationSequenceNumber !== null\n        ? output.ContinuationSequenceNumber\n        : undefined,\n    MillisBehindLatest:\n      output.MillisBehindLatest !== undefined && output.MillisBehindLatest !== null\n        ? output.MillisBehindLatest\n        : undefined,\n    Records:\n      output.Records !== undefined && output.Records !== null\n        ? deserializeAws_json1_1RecordList(output.Records, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1SubscribeToShardEventStream = (\n  output: any,\n  context: __SerdeContext\n): SubscribeToShardEventStream => {\n  if (output.InternalFailureException !== undefined && output.InternalFailureException !== null) {\n    return {\n      InternalFailureException: deserializeAws_json1_1InternalFailureException(\n        output.InternalFailureException,\n        context\n      ),\n    };\n  }\n  if (output.KMSAccessDeniedException !== undefined && output.KMSAccessDeniedException !== null) {\n    return {\n      KMSAccessDeniedException: deserializeAws_json1_1KMSAccessDeniedException(\n        output.KMSAccessDeniedException,\n        context\n      ),\n    };\n  }\n  if (output.KMSDisabledException !== undefined && output.KMSDisabledException !== null) {\n    return {\n      KMSDisabledException: deserializeAws_json1_1KMSDisabledException(output.KMSDisabledException, context),\n    };\n  }\n  if (output.KMSInvalidStateException !== undefined && output.KMSInvalidStateException !== null) {\n    return {\n      KMSInvalidStateException: deserializeAws_json1_1KMSInvalidStateException(\n        output.KMSInvalidStateException,\n        context\n      ),\n    };\n  }\n  if (output.KMSNotFoundException !== undefined && output.KMSNotFoundException !== null) {\n    return {\n      KMSNotFoundException: deserializeAws_json1_1KMSNotFoundException(output.KMSNotFoundException, context),\n    };\n  }\n  if (output.KMSOptInRequired !== undefined && output.KMSOptInRequired !== null) {\n    return {\n      KMSOptInRequired: deserializeAws_json1_1KMSOptInRequired(output.KMSOptInRequired, context),\n    };\n  }\n  if (output.KMSThrottlingException !== undefined && output.KMSThrottlingException !== null) {\n    return {\n      KMSThrottlingException: deserializeAws_json1_1KMSThrottlingException(output.KMSThrottlingException, context),\n    };\n  }\n  if (output.ResourceInUseException !== undefined && output.ResourceInUseException !== null) {\n    return {\n      ResourceInUseException: deserializeAws_json1_1ResourceInUseException(output.ResourceInUseException, context),\n    };\n  }\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_json1_1ResourceNotFoundException(\n        output.ResourceNotFoundException,\n        context\n      ),\n    };\n  }\n  if (output.SubscribeToShardEvent !== undefined && output.SubscribeToShardEvent !== null) {\n    return {\n      SubscribeToShardEvent: deserializeAws_json1_1SubscribeToShardEvent(output.SubscribeToShardEvent, context),\n    };\n  }\n  return { $unknown: Object.entries(output)[0] };\n};\n\nconst deserializeAws_json1_1SubscribeToShardOutput = (output: any, context: __SerdeContext): SubscribeToShardOutput => {\n  return {\n    EventStream:\n      output.EventStream !== undefined && output.EventStream !== null\n        ? deserializeAws_json1_1SubscribeToShardEventStream(output.EventStream, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1Tag = (output: any, context: __SerdeContext): Tag => {\n  return {\n    Key: output.Key !== undefined && output.Key !== null ? output.Key : undefined,\n    Value: output.Value !== undefined && output.Value !== null ? output.Value : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TagList = (output: any, context: __SerdeContext): Tag[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Tag(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1UpdateShardCountOutput = (output: any, context: __SerdeContext): UpdateShardCountOutput => {\n  return {\n    CurrentShardCount:\n      output.CurrentShardCount !== undefined && output.CurrentShardCount !== null\n        ? output.CurrentShardCount\n        : undefined,\n    StreamName: output.StreamName !== undefined && output.StreamName !== null ? output.StreamName : undefined,\n    TargetShardCount:\n      output.TargetShardCount !== undefined && output.TargetShardCount !== null ? output.TargetShardCount : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}