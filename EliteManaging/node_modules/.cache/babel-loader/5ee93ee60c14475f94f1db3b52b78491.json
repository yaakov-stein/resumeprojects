{"ast":null,"code":"import { __assign } from \"tslib\";\nexport var AmbiguousRoleResolutionType;\n\n(function (AmbiguousRoleResolutionType) {\n  AmbiguousRoleResolutionType[\"AUTHENTICATED_ROLE\"] = \"AuthenticatedRole\";\n  AmbiguousRoleResolutionType[\"DENY\"] = \"Deny\";\n})(AmbiguousRoleResolutionType || (AmbiguousRoleResolutionType = {}));\n\nexport var CognitoIdentityProvider;\n\n(function (CognitoIdentityProvider) {\n  CognitoIdentityProvider.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CognitoIdentityProvider || (CognitoIdentityProvider = {}));\n\nexport var CreateIdentityPoolInput;\n\n(function (CreateIdentityPoolInput) {\n  CreateIdentityPoolInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(CreateIdentityPoolInput || (CreateIdentityPoolInput = {}));\n\nexport var IdentityPool;\n\n(function (IdentityPool) {\n  IdentityPool.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IdentityPool || (IdentityPool = {}));\n\nexport var InternalErrorException;\n\n(function (InternalErrorException) {\n  InternalErrorException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InternalErrorException || (InternalErrorException = {}));\n\nexport var InvalidParameterException;\n\n(function (InvalidParameterException) {\n  InvalidParameterException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InvalidParameterException || (InvalidParameterException = {}));\n\nexport var LimitExceededException;\n\n(function (LimitExceededException) {\n  LimitExceededException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LimitExceededException || (LimitExceededException = {}));\n\nexport var NotAuthorizedException;\n\n(function (NotAuthorizedException) {\n  NotAuthorizedException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(NotAuthorizedException || (NotAuthorizedException = {}));\n\nexport var ResourceConflictException;\n\n(function (ResourceConflictException) {\n  ResourceConflictException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ResourceConflictException || (ResourceConflictException = {}));\n\nexport var TooManyRequestsException;\n\n(function (TooManyRequestsException) {\n  TooManyRequestsException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(TooManyRequestsException || (TooManyRequestsException = {}));\n\nexport var DeleteIdentitiesInput;\n\n(function (DeleteIdentitiesInput) {\n  DeleteIdentitiesInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteIdentitiesInput || (DeleteIdentitiesInput = {}));\n\nexport var ErrorCode;\n\n(function (ErrorCode) {\n  ErrorCode[\"ACCESS_DENIED\"] = \"AccessDenied\";\n  ErrorCode[\"INTERNAL_SERVER_ERROR\"] = \"InternalServerError\";\n})(ErrorCode || (ErrorCode = {}));\n\nexport var UnprocessedIdentityId;\n\n(function (UnprocessedIdentityId) {\n  UnprocessedIdentityId.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(UnprocessedIdentityId || (UnprocessedIdentityId = {}));\n\nexport var DeleteIdentitiesResponse;\n\n(function (DeleteIdentitiesResponse) {\n  DeleteIdentitiesResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteIdentitiesResponse || (DeleteIdentitiesResponse = {}));\n\nexport var DeleteIdentityPoolInput;\n\n(function (DeleteIdentityPoolInput) {\n  DeleteIdentityPoolInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeleteIdentityPoolInput || (DeleteIdentityPoolInput = {}));\n\nexport var ResourceNotFoundException;\n\n(function (ResourceNotFoundException) {\n  ResourceNotFoundException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ResourceNotFoundException || (ResourceNotFoundException = {}));\n\nexport var DescribeIdentityInput;\n\n(function (DescribeIdentityInput) {\n  DescribeIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeIdentityInput || (DescribeIdentityInput = {}));\n\nexport var IdentityDescription;\n\n(function (IdentityDescription) {\n  IdentityDescription.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IdentityDescription || (IdentityDescription = {}));\n\nexport var DescribeIdentityPoolInput;\n\n(function (DescribeIdentityPoolInput) {\n  DescribeIdentityPoolInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DescribeIdentityPoolInput || (DescribeIdentityPoolInput = {}));\n\nexport var ExternalServiceException;\n\n(function (ExternalServiceException) {\n  ExternalServiceException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ExternalServiceException || (ExternalServiceException = {}));\n\nexport var GetCredentialsForIdentityInput;\n\n(function (GetCredentialsForIdentityInput) {\n  GetCredentialsForIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetCredentialsForIdentityInput || (GetCredentialsForIdentityInput = {}));\n\nexport var Credentials;\n\n(function (Credentials) {\n  Credentials.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(Credentials || (Credentials = {}));\n\nexport var GetCredentialsForIdentityResponse;\n\n(function (GetCredentialsForIdentityResponse) {\n  GetCredentialsForIdentityResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetCredentialsForIdentityResponse || (GetCredentialsForIdentityResponse = {}));\n\nexport var InvalidIdentityPoolConfigurationException;\n\n(function (InvalidIdentityPoolConfigurationException) {\n  InvalidIdentityPoolConfigurationException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(InvalidIdentityPoolConfigurationException || (InvalidIdentityPoolConfigurationException = {}));\n\nexport var GetIdInput;\n\n(function (GetIdInput) {\n  GetIdInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetIdInput || (GetIdInput = {}));\n\nexport var GetIdResponse;\n\n(function (GetIdResponse) {\n  GetIdResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetIdResponse || (GetIdResponse = {}));\n\nexport var GetIdentityPoolRolesInput;\n\n(function (GetIdentityPoolRolesInput) {\n  GetIdentityPoolRolesInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetIdentityPoolRolesInput || (GetIdentityPoolRolesInput = {}));\n\nexport var MappingRuleMatchType;\n\n(function (MappingRuleMatchType) {\n  MappingRuleMatchType[\"CONTAINS\"] = \"Contains\";\n  MappingRuleMatchType[\"EQUALS\"] = \"Equals\";\n  MappingRuleMatchType[\"NOT_EQUAL\"] = \"NotEqual\";\n  MappingRuleMatchType[\"STARTS_WITH\"] = \"StartsWith\";\n})(MappingRuleMatchType || (MappingRuleMatchType = {}));\n\nexport var MappingRule;\n\n(function (MappingRule) {\n  MappingRule.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MappingRule || (MappingRule = {}));\n\nexport var RulesConfigurationType;\n\n(function (RulesConfigurationType) {\n  RulesConfigurationType.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RulesConfigurationType || (RulesConfigurationType = {}));\n\nexport var RoleMappingType;\n\n(function (RoleMappingType) {\n  RoleMappingType[\"RULES\"] = \"Rules\";\n  RoleMappingType[\"TOKEN\"] = \"Token\";\n})(RoleMappingType || (RoleMappingType = {}));\n\nexport var RoleMapping;\n\n(function (RoleMapping) {\n  RoleMapping.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(RoleMapping || (RoleMapping = {}));\n\nexport var GetIdentityPoolRolesResponse;\n\n(function (GetIdentityPoolRolesResponse) {\n  GetIdentityPoolRolesResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetIdentityPoolRolesResponse || (GetIdentityPoolRolesResponse = {}));\n\nexport var GetOpenIdTokenInput;\n\n(function (GetOpenIdTokenInput) {\n  GetOpenIdTokenInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetOpenIdTokenInput || (GetOpenIdTokenInput = {}));\n\nexport var GetOpenIdTokenResponse;\n\n(function (GetOpenIdTokenResponse) {\n  GetOpenIdTokenResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetOpenIdTokenResponse || (GetOpenIdTokenResponse = {}));\n\nexport var DeveloperUserAlreadyRegisteredException;\n\n(function (DeveloperUserAlreadyRegisteredException) {\n  DeveloperUserAlreadyRegisteredException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(DeveloperUserAlreadyRegisteredException || (DeveloperUserAlreadyRegisteredException = {}));\n\nexport var GetOpenIdTokenForDeveloperIdentityInput;\n\n(function (GetOpenIdTokenForDeveloperIdentityInput) {\n  GetOpenIdTokenForDeveloperIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetOpenIdTokenForDeveloperIdentityInput || (GetOpenIdTokenForDeveloperIdentityInput = {}));\n\nexport var GetOpenIdTokenForDeveloperIdentityResponse;\n\n(function (GetOpenIdTokenForDeveloperIdentityResponse) {\n  GetOpenIdTokenForDeveloperIdentityResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(GetOpenIdTokenForDeveloperIdentityResponse || (GetOpenIdTokenForDeveloperIdentityResponse = {}));\n\nexport var ListIdentitiesInput;\n\n(function (ListIdentitiesInput) {\n  ListIdentitiesInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListIdentitiesInput || (ListIdentitiesInput = {}));\n\nexport var ListIdentitiesResponse;\n\n(function (ListIdentitiesResponse) {\n  ListIdentitiesResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListIdentitiesResponse || (ListIdentitiesResponse = {}));\n\nexport var ListIdentityPoolsInput;\n\n(function (ListIdentityPoolsInput) {\n  ListIdentityPoolsInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListIdentityPoolsInput || (ListIdentityPoolsInput = {}));\n\nexport var IdentityPoolShortDescription;\n\n(function (IdentityPoolShortDescription) {\n  IdentityPoolShortDescription.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(IdentityPoolShortDescription || (IdentityPoolShortDescription = {}));\n\nexport var ListIdentityPoolsResponse;\n\n(function (ListIdentityPoolsResponse) {\n  ListIdentityPoolsResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListIdentityPoolsResponse || (ListIdentityPoolsResponse = {}));\n\nexport var ListTagsForResourceInput;\n\n(function (ListTagsForResourceInput) {\n  ListTagsForResourceInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListTagsForResourceInput || (ListTagsForResourceInput = {}));\n\nexport var ListTagsForResourceResponse;\n\n(function (ListTagsForResourceResponse) {\n  ListTagsForResourceResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ListTagsForResourceResponse || (ListTagsForResourceResponse = {}));\n\nexport var LookupDeveloperIdentityInput;\n\n(function (LookupDeveloperIdentityInput) {\n  LookupDeveloperIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LookupDeveloperIdentityInput || (LookupDeveloperIdentityInput = {}));\n\nexport var LookupDeveloperIdentityResponse;\n\n(function (LookupDeveloperIdentityResponse) {\n  LookupDeveloperIdentityResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(LookupDeveloperIdentityResponse || (LookupDeveloperIdentityResponse = {}));\n\nexport var MergeDeveloperIdentitiesInput;\n\n(function (MergeDeveloperIdentitiesInput) {\n  MergeDeveloperIdentitiesInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MergeDeveloperIdentitiesInput || (MergeDeveloperIdentitiesInput = {}));\n\nexport var MergeDeveloperIdentitiesResponse;\n\n(function (MergeDeveloperIdentitiesResponse) {\n  MergeDeveloperIdentitiesResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(MergeDeveloperIdentitiesResponse || (MergeDeveloperIdentitiesResponse = {}));\n\nexport var ConcurrentModificationException;\n\n(function (ConcurrentModificationException) {\n  ConcurrentModificationException.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(ConcurrentModificationException || (ConcurrentModificationException = {}));\n\nexport var SetIdentityPoolRolesInput;\n\n(function (SetIdentityPoolRolesInput) {\n  SetIdentityPoolRolesInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(SetIdentityPoolRolesInput || (SetIdentityPoolRolesInput = {}));\n\nexport var TagResourceInput;\n\n(function (TagResourceInput) {\n  TagResourceInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(TagResourceInput || (TagResourceInput = {}));\n\nexport var TagResourceResponse;\n\n(function (TagResourceResponse) {\n  TagResourceResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(TagResourceResponse || (TagResourceResponse = {}));\n\nexport var UnlinkDeveloperIdentityInput;\n\n(function (UnlinkDeveloperIdentityInput) {\n  UnlinkDeveloperIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(UnlinkDeveloperIdentityInput || (UnlinkDeveloperIdentityInput = {}));\n\nexport var UnlinkIdentityInput;\n\n(function (UnlinkIdentityInput) {\n  UnlinkIdentityInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(UnlinkIdentityInput || (UnlinkIdentityInput = {}));\n\nexport var UntagResourceInput;\n\n(function (UntagResourceInput) {\n  UntagResourceInput.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(UntagResourceInput || (UntagResourceInput = {}));\n\nexport var UntagResourceResponse;\n\n(function (UntagResourceResponse) {\n  UntagResourceResponse.filterSensitiveLog = function (obj) {\n    return __assign({}, obj);\n  };\n})(UntagResourceResponse || (UntagResourceResponse = {}));","map":{"version":3,"mappings":";AAGA,WAAYA,2BAAZ;;AAAA,WAAYA,2BAAZ,EAAuC;EACrCA;EACAA;AACD,CAHD,EAAYA,2BAA2B,KAA3BA,2BAA2B,MAAvC;;AAiCA,OAAM,IAAWC,uBAAX;;AAAN,WAAiBA,uBAAjB,EAAwC;EACzBA,6CAAqB,UAACC,GAAD,EAA6B;IAAU,oBACpEA,GADoE;EAEvE,CAFW;AAGd,CAJD,EAAiBD,uBAAuB,KAAvBA,uBAAuB,MAAxC;;AAkEA,OAAM,IAAWE,uBAAX;;AAAN,WAAiBA,uBAAjB,EAAwC;EACzBA,6CAAqB,UAACD,GAAD,EAA6B;IAAU,oBACpEA,GADoE;EAEvE,CAFW;AAGd,CAJD,EAAiBC,uBAAuB,KAAvBA,uBAAuB,MAAxC;;AAiEA,OAAM,IAAWC,YAAX;;AAAN,WAAiBA,YAAjB,EAA6B;EACdA,kCAAqB,UAACF,GAAD,EAAkB;IAAU,oBACzDA,GADyD;EAE5D,CAFW;AAGd,CAJD,EAAiBE,YAAY,KAAZA,YAAY,MAA7B;;AAkBA,OAAM,IAAWC,sBAAX;;AAAN,WAAiBA,sBAAjB,EAAuC;EACxBA,4CAAqB,UAACH,GAAD,EAA4B;IAAU,oBACnEA,GADmE;EAEtE,CAFW;AAGd,CAJD,EAAiBG,sBAAsB,KAAtBA,sBAAsB,MAAvC;;AAkBA,OAAM,IAAWC,yBAAX;;AAAN,WAAiBA,yBAAjB,EAA0C;EAC3BA,+CAAqB,UAACJ,GAAD,EAA+B;IAAU,oBACtEA,GADsE;EAEzE,CAFW;AAGd,CAJD,EAAiBI,yBAAyB,KAAzBA,yBAAyB,MAA1C;;AAkBA,OAAM,IAAWC,sBAAX;;AAAN,WAAiBA,sBAAjB,EAAuC;EACxBA,4CAAqB,UAACL,GAAD,EAA4B;IAAU,oBACnEA,GADmE;EAEtE,CAFW;AAGd,CAJD,EAAiBK,sBAAsB,KAAtBA,sBAAsB,MAAvC;;AAkBA,OAAM,IAAWC,sBAAX;;AAAN,WAAiBA,sBAAjB,EAAuC;EACxBA,4CAAqB,UAACN,GAAD,EAA4B;IAAU,oBACnEA,GADmE;EAEtE,CAFW;AAGd,CAJD,EAAiBM,sBAAsB,KAAtBA,sBAAsB,MAAvC;;AAmBA,OAAM,IAAWC,yBAAX;;AAAN,WAAiBA,yBAAjB,EAA0C;EAC3BA,+CAAqB,UAACP,GAAD,EAA+B;IAAU,oBACtEA,GADsE;EAEzE,CAFW;AAGd,CAJD,EAAiBO,yBAAyB,KAAzBA,yBAAyB,MAA1C;;AAkBA,OAAM,IAAWC,wBAAX;;AAAN,WAAiBA,wBAAjB,EAAyC;EAC1BA,8CAAqB,UAACR,GAAD,EAA8B;IAAU,oBACrEA,GADqE;EAExE,CAFW;AAGd,CAJD,EAAiBQ,wBAAwB,KAAxBA,wBAAwB,MAAzC;;AAgBA,OAAM,IAAWC,qBAAX;;AAAN,WAAiBA,qBAAjB,EAAsC;EACvBA,2CAAqB,UAACT,GAAD,EAA2B;IAAU,oBAClEA,GADkE;EAErE,CAFW;AAGd,CAJD,EAAiBS,qBAAqB,KAArBA,qBAAqB,MAAtC;;AAMA,WAAYC,SAAZ;;AAAA,WAAYA,SAAZ,EAAqB;EACnBA;EACAA;AACD,CAHD,EAAYA,SAAS,KAATA,SAAS,MAArB;;AAqBA,OAAM,IAAWC,qBAAX;;AAAN,WAAiBA,qBAAjB,EAAsC;EACvBA,2CAAqB,UAACX,GAAD,EAA2B;IAAU,oBAClEA,GADkE;EAErE,CAFW;AAGd,CAJD,EAAiBW,qBAAqB,KAArBA,qBAAqB,MAAtC;;AAkBA,OAAM,IAAWC,wBAAX;;AAAN,WAAiBA,wBAAjB,EAAyC;EAC1BA,8CAAqB,UAACZ,GAAD,EAA8B;IAAU,oBACrEA,GADqE;EAExE,CAFW;AAGd,CAJD,EAAiBY,wBAAwB,KAAxBA,wBAAwB,MAAzC;;AAgBA,OAAM,IAAWC,uBAAX;;AAAN,WAAiBA,uBAAjB,EAAwC;EACzBA,6CAAqB,UAACb,GAAD,EAA6B;IAAU,oBACpEA,GADoE;EAEvE,CAFW;AAGd,CAJD,EAAiBa,uBAAuB,KAAvBA,uBAAuB,MAAxC;;AAmBA,OAAM,IAAWC,yBAAX;;AAAN,WAAiBA,yBAAjB,EAA0C;EAC3BA,+CAAqB,UAACd,GAAD,EAA+B;IAAU,oBACtEA,GADsE;EAEzE,CAFW;AAGd,CAJD,EAAiBc,yBAAyB,KAAzBA,yBAAyB,MAA1C;;AAgBA,OAAM,IAAWC,qBAAX;;AAAN,WAAiBA,qBAAjB,EAAsC;EACvBA,2CAAqB,UAACf,GAAD,EAA2B;IAAU,oBAClEA,GADkE;EAErE,CAFW;AAGd,CAJD,EAAiBe,qBAAqB,KAArBA,qBAAqB,MAAtC;;AA+BA,OAAM,IAAWC,mBAAX;;AAAN,WAAiBA,mBAAjB,EAAoC;EACrBA,yCAAqB,UAAChB,GAAD,EAAyB;IAAU,oBAChEA,GADgE;EAEnE,CAFW;AAGd,CAJD,EAAiBgB,mBAAmB,KAAnBA,mBAAmB,MAApC;;AAgBA,OAAM,IAAWC,yBAAX;;AAAN,WAAiBA,yBAAjB,EAA0C;EAC3BA,+CAAqB,UAACjB,GAAD,EAA+B;IAAU,oBACtEA,GADsE;EAEzE,CAFW;AAGd,CAJD,EAAiBiB,yBAAyB,KAAzBA,yBAAyB,MAA1C;;AAmBA,OAAM,IAAWC,wBAAX;;AAAN,WAAiBA,wBAAjB,EAAyC;EAC1BA,8CAAqB,UAAClB,GAAD,EAA8B;IAAU,oBACrEA,GADqE;EAExE,CAFW;AAGd,CAJD,EAAiBkB,wBAAwB,KAAxBA,wBAAwB,MAAzC;;AAqCA,OAAM,IAAWC,8BAAX;;AAAN,WAAiBA,8BAAjB,EAA+C;EAChCA,oDAAqB,UAACnB,GAAD,EAAoC;IAAU,oBAC3EA,GAD2E;EAE9E,CAFW;AAGd,CAJD,EAAiBmB,8BAA8B,KAA9BA,8BAA8B,MAA/C;;AA+BA,OAAM,IAAWC,WAAX;;AAAN,WAAiBA,WAAjB,EAA4B;EACbA,iCAAqB,UAACpB,GAAD,EAAiB;IAAU,oBACxDA,GADwD;EAE3D,CAFW;AAGd,CAJD,EAAiBoB,WAAW,KAAXA,WAAW,MAA5B;;AAsBA,OAAM,IAAWC,iCAAX;;AAAN,WAAiBA,iCAAjB,EAAkD;EACnCA,uDAAqB,UAACrB,GAAD,EAAuC;IAAU,oBAC9EA,GAD8E;EAEjF,CAFW;AAGd,CAJD,EAAiBqB,iCAAiC,KAAjCA,iCAAiC,MAAlD;;AAoBA,OAAM,IAAWC,yCAAX;;AAAN,WAAiBA,yCAAjB,EAA0D;EAC3CA,+DAAqB,UAACtB,GAAD,EAA+C;IAAU,oBACtFA,GADsF;EAEzF,CAFW;AAGd,CAJD,EAAiBsB,yCAAyC,KAAzCA,yCAAyC,MAA1D;;AAuDA,OAAM,IAAWC,UAAX;;AAAN,WAAiBA,UAAjB,EAA2B;EACZA,gCAAqB,UAACvB,GAAD,EAAgB;IAAU,oBACvDA,GADuD;EAE1D,CAFW;AAGd,CAJD,EAAiBuB,UAAU,KAAVA,UAAU,MAA3B;;AAgBA,OAAM,IAAWC,aAAX;;AAAN,WAAiBA,aAAjB,EAA8B;EACfA,mCAAqB,UAACxB,GAAD,EAAmB;IAAU,oBAC1DA,GAD0D;EAE7D,CAFW;AAGd,CAJD,EAAiBwB,aAAa,KAAbA,aAAa,MAA9B;;AAgBA,OAAM,IAAWC,yBAAX;;AAAN,WAAiBA,yBAAjB,EAA0C;EAC3BA,+CAAqB,UAACzB,GAAD,EAA+B;IAAU,oBACtEA,GADsE;EAEzE,CAFW;AAGd,CAJD,EAAiByB,yBAAyB,KAAzBA,yBAAyB,MAA1C;;AAMA,WAAYC,oBAAZ;;AAAA,WAAYA,oBAAZ,EAAgC;EAC9BA;EACAA;EACAA;EACAA;AACD,CALD,EAAYA,oBAAoB,KAApBA,oBAAoB,MAAhC;;AAmCA,OAAM,IAAWC,WAAX;;AAAN,WAAiBA,WAAjB,EAA4B;EACbA,iCAAqB,UAAC3B,GAAD,EAAiB;IAAU,oBACxDA,GADwD;EAE3D,CAFW;AAGd,CAJD,EAAiB2B,WAAW,KAAXA,WAAW,MAA5B;;AAiBA,OAAM,IAAWC,sBAAX;;AAAN,WAAiBA,sBAAjB,EAAuC;EACxBA,4CAAqB,UAAC5B,GAAD,EAA4B;IAAU,oBACnEA,GADmE;EAEtE,CAFW;AAGd,CAJD,EAAiB4B,sBAAsB,KAAtBA,sBAAsB,MAAvC;;AAMA,WAAYC,eAAZ;;AAAA,WAAYA,eAAZ,EAA2B;EACzBA;EACAA;AACD,CAHD,EAAYA,eAAe,KAAfA,eAAe,MAA3B;;AAmCA,OAAM,IAAWC,WAAX;;AAAN,WAAiBA,WAAjB,EAA4B;EACbA,iCAAqB,UAAC9B,GAAD,EAAiB;IAAU,oBACxDA,GADwD;EAE3D,CAFW;AAGd,CAJD,EAAiB8B,WAAW,KAAXA,WAAW,MAA5B;;AA+BA,OAAM,IAAWC,4BAAX;;AAAN,WAAiBA,4BAAjB,EAA6C;EAC9BA,kDAAqB,UAAC/B,GAAD,EAAkC;IAAU,oBACzEA,GADyE;EAE5E,CAFW;AAGd,CAJD,EAAiB+B,4BAA4B,KAA5BA,4BAA4B,MAA7C;;AAwBA,OAAM,IAAWC,mBAAX;;AAAN,WAAiBA,mBAAjB,EAAoC;EACrBA,yCAAqB,UAAChC,GAAD,EAAyB;IAAU,oBAChEA,GADgE;EAEnE,CAFW;AAGd,CAJD,EAAiBgC,mBAAmB,KAAnBA,mBAAmB,MAApC;;AAsBA,OAAM,IAAWC,sBAAX;;AAAN,WAAiBA,sBAAjB,EAAuC;EACxBA,4CAAqB,UAACjC,GAAD,EAA4B;IAAU,oBACnEA,GADmE;EAEtE,CAFW;AAGd,CAJD,EAAiBiC,sBAAsB,KAAtBA,sBAAsB,MAAvC;;AAmBA,OAAM,IAAWC,uCAAX;;AAAN,WAAiBA,uCAAjB,EAAwD;EACzCA,6DAAqB,UAAClC,GAAD,EAA6C;IAAU,oBACpFA,GADoF;EAEvF,CAFW;AAGd,CAJD,EAAiBkC,uCAAuC,KAAvCA,uCAAuC,MAAxD;;AA+CA,OAAM,IAAWC,uCAAX;;AAAN,WAAiBA,uCAAjB,EAAwD;EACzCA,6DAAqB,UAACnC,GAAD,EAA6C;IAAU,oBACpFA,GADoF;EAEvF,CAFW;AAGd,CAJD,EAAiBmC,uCAAuC,KAAvCA,uCAAuC,MAAxD;;AAsBA,OAAM,IAAWC,0CAAX;;AAAN,WAAiBA,0CAAjB,EAA2D;EAC5CA,gEAAqB,UAACpC,GAAD,EAAgD;IAAU,oBACvFA,GADuF;EAE1F,CAFW;AAGd,CAJD,EAAiBoC,0CAA0C,KAA1CA,0CAA0C,MAA3D;;AAgCA,OAAM,IAAWC,mBAAX;;AAAN,WAAiBA,mBAAjB,EAAoC;EACrBA,yCAAqB,UAACrC,GAAD,EAAyB;IAAU,oBAChEA,GADgE;EAEnE,CAFW;AAGd,CAJD,EAAiBqC,mBAAmB,KAAnBA,mBAAmB,MAApC;;AA0BA,OAAM,IAAWC,sBAAX;;AAAN,WAAiBA,sBAAjB,EAAuC;EACxBA,4CAAqB,UAACtC,GAAD,EAA4B;IAAU,oBACnEA,GADmE;EAEtE,CAFW;AAGd,CAJD,EAAiBsC,sBAAsB,KAAtBA,sBAAsB,MAAvC;;AAqBA,OAAM,IAAWC,sBAAX;;AAAN,WAAiBA,sBAAjB,EAAuC;EACxBA,4CAAqB,UAACvC,GAAD,EAA4B;IAAU,oBACnEA,GADmE;EAEtE,CAFW;AAGd,CAJD,EAAiBuC,sBAAsB,KAAtBA,sBAAsB,MAAvC;;AAqBA,OAAM,IAAWC,4BAAX;;AAAN,WAAiBA,4BAAjB,EAA6C;EAC9BA,kDAAqB,UAACxC,GAAD,EAAkC;IAAU,oBACzEA,GADyE;EAE5E,CAFW;AAGd,CAJD,EAAiBwC,4BAA4B,KAA5BA,4BAA4B,MAA7C;;AAqBA,OAAM,IAAWC,yBAAX;;AAAN,WAAiBA,yBAAjB,EAA0C;EAC3BA,+CAAqB,UAACzC,GAAD,EAA+B;IAAU,oBACtEA,GADsE;EAEzE,CAFW;AAGd,CAJD,EAAiByC,yBAAyB,KAAzBA,yBAAyB,MAA1C;;AAcA,OAAM,IAAWC,wBAAX;;AAAN,WAAiBA,wBAAjB,EAAyC;EAC1BA,8CAAqB,UAAC1C,GAAD,EAA8B;IAAU,oBACrEA,GADqE;EAExE,CAFW;AAGd,CAJD,EAAiB0C,wBAAwB,KAAxBA,wBAAwB,MAAzC;;AAaA,OAAM,IAAWC,2BAAX;;AAAN,WAAiBA,2BAAjB,EAA4C;EAC7BA,iDAAqB,UAAC3C,GAAD,EAAiC;IAAU,oBACxEA,GADwE;EAE3E,CAFW;AAGd,CAJD,EAAiB2C,2BAA2B,KAA3BA,2BAA2B,MAA5C;;AA2CA,OAAM,IAAWC,4BAAX;;AAAN,WAAiBA,4BAAjB,EAA6C;EAC9BA,kDAAqB,UAAC5C,GAAD,EAAkC;IAAU,oBACzEA,GADyE;EAE5E,CAFW;AAGd,CAJD,EAAiB4C,4BAA4B,KAA5BA,4BAA4B,MAA7C;;AAkCA,OAAM,IAAWC,+BAAX;;AAAN,WAAiBA,+BAAjB,EAAgD;EACjCA,qDAAqB,UAAC7C,GAAD,EAAqC;IAAU,oBAC5EA,GAD4E;EAE/E,CAFW;AAGd,CAJD,EAAiB6C,+BAA+B,KAA/BA,+BAA+B,MAAhD;;AAqCA,OAAM,IAAWC,6BAAX;;AAAN,WAAiBA,6BAAjB,EAA8C;EAC/BA,mDAAqB,UAAC9C,GAAD,EAAmC;IAAU,oBAC1EA,GAD0E;EAE7E,CAFW;AAGd,CAJD,EAAiB8C,6BAA6B,KAA7BA,6BAA6B,MAA9C;;AAiBA,OAAM,IAAWC,gCAAX;;AAAN,WAAiBA,gCAAjB,EAAiD;EAClCA,sDAAqB,UAAC/C,GAAD,EAAsC;IAAU,oBAC7EA,GAD6E;EAEhF,CAFW;AAGd,CAJD,EAAiB+C,gCAAgC,KAAhCA,gCAAgC,MAAjD;;AAkBA,OAAM,IAAWC,+BAAX;;AAAN,WAAiBA,+BAAjB,EAAgD;EACjCA,qDAAqB,UAAChD,GAAD,EAAqC;IAAU,oBAC5EA,GAD4E;EAE/E,CAFW;AAGd,CAJD,EAAiBgD,+BAA+B,KAA/BA,+BAA+B,MAAhD;;AA+BA,OAAM,IAAWC,yBAAX;;AAAN,WAAiBA,yBAAjB,EAA0C;EAC3BA,+CAAqB,UAACjD,GAAD,EAA+B;IAAU,oBACtEA,GADsE;EAEzE,CAFW;AAGd,CAJD,EAAiBiD,yBAAyB,KAAzBA,yBAAyB,MAA1C;;AAkBA,OAAM,IAAWC,gBAAX;;AAAN,WAAiBA,gBAAjB,EAAiC;EAClBA,sCAAqB,UAAClD,GAAD,EAAsB;IAAU,oBAC7DA,GAD6D;EAEhE,CAFW;AAGd,CAJD,EAAiBkD,gBAAgB,KAAhBA,gBAAgB,MAAjC;;AAQA,OAAM,IAAWC,mBAAX;;AAAN,WAAiBA,mBAAjB,EAAoC;EACrBA,yCAAqB,UAACnD,GAAD,EAAyB;IAAU,oBAChEA,GADgE;EAEnE,CAFW;AAGd,CAJD,EAAiBmD,mBAAmB,KAAnBA,mBAAmB,MAApC;;AA+BA,OAAM,IAAWC,4BAAX;;AAAN,WAAiBA,4BAAjB,EAA6C;EAC9BA,kDAAqB,UAACpD,GAAD,EAAkC;IAAU,oBACzEA,GADyE;EAE5E,CAFW;AAGd,CAJD,EAAiBoD,4BAA4B,KAA5BA,4BAA4B,MAA7C;;AA2BA,OAAM,IAAWC,mBAAX;;AAAN,WAAiBA,mBAAjB,EAAoC;EACrBA,yCAAqB,UAACrD,GAAD,EAAyB;IAAU,oBAChEA,GADgE;EAEnE,CAFW;AAGd,CAJD,EAAiBqD,mBAAmB,KAAnBA,mBAAmB,MAApC;;AAmBA,OAAM,IAAWC,kBAAX;;AAAN,WAAiBA,kBAAjB,EAAmC;EACpBA,wCAAqB,UAACtD,GAAD,EAAwB;IAAU,oBAC/DA,GAD+D;EAElE,CAFW;AAGd,CAJD,EAAiBsD,kBAAkB,KAAlBA,kBAAkB,MAAnC;;AAQA,OAAM,IAAWC,qBAAX;;AAAN,WAAiBA,qBAAjB,EAAsC;EACvBA,2CAAqB,UAACvD,GAAD,EAA2B;IAAU,oBAClEA,GADkE;EAErE,CAFW;AAGd,CAJD,EAAiBuD,qBAAqB,KAArBA,qBAAqB,MAAtC","names":["AmbiguousRoleResolutionType","CognitoIdentityProvider","obj","CreateIdentityPoolInput","IdentityPool","InternalErrorException","InvalidParameterException","LimitExceededException","NotAuthorizedException","ResourceConflictException","TooManyRequestsException","DeleteIdentitiesInput","ErrorCode","UnprocessedIdentityId","DeleteIdentitiesResponse","DeleteIdentityPoolInput","ResourceNotFoundException","DescribeIdentityInput","IdentityDescription","DescribeIdentityPoolInput","ExternalServiceException","GetCredentialsForIdentityInput","Credentials","GetCredentialsForIdentityResponse","InvalidIdentityPoolConfigurationException","GetIdInput","GetIdResponse","GetIdentityPoolRolesInput","MappingRuleMatchType","MappingRule","RulesConfigurationType","RoleMappingType","RoleMapping","GetIdentityPoolRolesResponse","GetOpenIdTokenInput","GetOpenIdTokenResponse","DeveloperUserAlreadyRegisteredException","GetOpenIdTokenForDeveloperIdentityInput","GetOpenIdTokenForDeveloperIdentityResponse","ListIdentitiesInput","ListIdentitiesResponse","ListIdentityPoolsInput","IdentityPoolShortDescription","ListIdentityPoolsResponse","ListTagsForResourceInput","ListTagsForResourceResponse","LookupDeveloperIdentityInput","LookupDeveloperIdentityResponse","MergeDeveloperIdentitiesInput","MergeDeveloperIdentitiesResponse","ConcurrentModificationException","SetIdentityPoolRolesInput","TagResourceInput","TagResourceResponse","UnlinkDeveloperIdentityInput","UnlinkIdentityInput","UntagResourceInput","UntagResourceResponse"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-sdk\\client-cognito-identity\\models\\models_0.ts"],"sourcesContent":["import { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport { MetadataBearer as $MetadataBearer } from \"@aws-sdk/types\";\n\nexport enum AmbiguousRoleResolutionType {\n  AUTHENTICATED_ROLE = \"AuthenticatedRole\",\n  DENY = \"Deny\",\n}\n\n/**\n * <p>A provider representing an Amazon Cognito user pool and its client ID.</p>\n */\nexport interface CognitoIdentityProvider {\n  /**\n   * <p>The provider name for an Amazon Cognito user pool. For example,\n   *             <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.</p>\n   */\n  ProviderName?: string;\n\n  /**\n   * <p>The client ID for the Amazon Cognito user pool.</p>\n   */\n  ClientId?: string;\n\n  /**\n   * <p>TRUE if server-side token validation is enabled for the identity provider’s\n   *          token.</p>\n   *          <p>Once you set <code>ServerSideTokenCheck</code> to TRUE for an identity pool, that\n   *          identity pool will check with the integrated user pools to make sure that the user has not\n   *          been globally signed out or deleted before the identity pool provides an OIDC token or AWS\n   *          credentials for the user.</p>\n   *          <p>If the user is signed out or deleted, the identity pool will return a 400 Not\n   *          Authorized error.</p>\n   */\n  ServerSideTokenCheck?: boolean;\n}\n\nexport namespace CognitoIdentityProvider {\n  export const filterSensitiveLog = (obj: CognitoIdentityProvider): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the CreateIdentityPool action.</p>\n */\nexport interface CreateIdentityPoolInput {\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName: string | undefined;\n\n  /**\n   * <p>TRUE if the identity pool supports unauthenticated logins.</p>\n   */\n  AllowUnauthenticatedIdentities: boolean | undefined;\n\n  /**\n   * <p>Enables or disables the Basic (Classic) authentication flow. For more information, see\n   *       <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Identity Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.</p>\n   */\n  AllowClassicFlow?: boolean;\n\n  /**\n   * <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   */\n  SupportedLoginProviders?: { [key: string]: string };\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users. This name acts as a\n   *          placeholder that allows your backend and the Cognito service to communicate about the\n   *          developer provider. For the <code>DeveloperProviderName</code>, you can use letters as well\n   *          as period (<code>.</code>), underscore (<code>_</code>), and dash\n   *          (<code>-</code>).</p>\n   *          <p>Once you have set a developer provider name, you cannot change it. Please take care\n   *          in setting this parameter.</p>\n   */\n  DeveloperProviderName?: string;\n\n  /**\n   * <p>A list of OpendID Connect provider ARNs.</p>\n   */\n  OpenIdConnectProviderARNs?: string[];\n\n  /**\n   * <p>An array of Amazon Cognito user pools and their client IDs.</p>\n   */\n  CognitoIdentityProviders?: CognitoIdentityProvider[];\n\n  /**\n   * <p>An array of Amazon Resource Names (ARNs) of the SAML provider for your identity\n   *          pool.</p>\n   */\n  SamlProviderARNs?: string[];\n\n  /**\n   * <p>Tags to assign to the identity pool. A tag is a label that you can apply to identity\n   *          pools to categorize and manage them in different ways, such as by purpose, owner,\n   *          environment, or other criteria.</p>\n   */\n  IdentityPoolTags?: { [key: string]: string };\n}\n\nexport namespace CreateIdentityPoolInput {\n  export const filterSensitiveLog = (obj: CreateIdentityPoolInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>An object representing an Amazon Cognito identity pool.</p>\n */\nexport interface IdentityPool {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName: string | undefined;\n\n  /**\n   * <p>TRUE if the identity pool supports unauthenticated logins.</p>\n   */\n  AllowUnauthenticatedIdentities: boolean | undefined;\n\n  /**\n   * <p>Enables or disables the Basic (Classic) authentication flow. For more information, see\n   *       <a href=\"https://docs.aws.amazon.com/cognito/latest/developerguide/authentication-flow.html\">Identity Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.</p>\n   */\n  AllowClassicFlow?: boolean;\n\n  /**\n   * <p>Optional key:value pairs mapping provider names to provider app IDs.</p>\n   */\n  SupportedLoginProviders?: { [key: string]: string };\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users.</p>\n   */\n  DeveloperProviderName?: string;\n\n  /**\n   * <p>A list of OpendID Connect provider ARNs.</p>\n   */\n  OpenIdConnectProviderARNs?: string[];\n\n  /**\n   * <p>A list representing an Amazon Cognito user pool and its client ID.</p>\n   */\n  CognitoIdentityProviders?: CognitoIdentityProvider[];\n\n  /**\n   * <p>An array of Amazon Resource Names (ARNs) of the SAML provider for your identity\n   *          pool.</p>\n   */\n  SamlProviderARNs?: string[];\n\n  /**\n   * <p>The tags that are assigned to the identity pool. A tag is a label that you can apply to\n   *          identity pools to categorize and manage them in different ways, such as by purpose, owner,\n   *          environment, or other criteria.</p>\n   */\n  IdentityPoolTags?: { [key: string]: string };\n}\n\nexport namespace IdentityPool {\n  export const filterSensitiveLog = (obj: IdentityPool): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when the service encounters an error during processing the request.</p>\n */\nexport interface InternalErrorException extends __SmithyException, $MetadataBearer {\n  name: \"InternalErrorException\";\n  $fault: \"server\";\n  /**\n   * <p>The message returned by an InternalErrorException.</p>\n   */\n  message?: string;\n}\n\nexport namespace InternalErrorException {\n  export const filterSensitiveLog = (obj: InternalErrorException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown for missing or bad input parameter(s).</p>\n */\nexport interface InvalidParameterException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidParameterException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by an InvalidParameterException.</p>\n   */\n  message?: string;\n}\n\nexport namespace InvalidParameterException {\n  export const filterSensitiveLog = (obj: InvalidParameterException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when the total number of user pools has exceeded a preset limit.</p>\n */\nexport interface LimitExceededException extends __SmithyException, $MetadataBearer {\n  name: \"LimitExceededException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a LimitExceededException.</p>\n   */\n  message?: string;\n}\n\nexport namespace LimitExceededException {\n  export const filterSensitiveLog = (obj: LimitExceededException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when a user is not authorized to access the requested resource.</p>\n */\nexport interface NotAuthorizedException extends __SmithyException, $MetadataBearer {\n  name: \"NotAuthorizedException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a NotAuthorizedException</p>\n   */\n  message?: string;\n}\n\nexport namespace NotAuthorizedException {\n  export const filterSensitiveLog = (obj: NotAuthorizedException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when a user tries to use a login which is already linked to another\n *          account.</p>\n */\nexport interface ResourceConflictException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceConflictException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ResourceConflictException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ResourceConflictException {\n  export const filterSensitiveLog = (obj: ResourceConflictException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when a request is throttled.</p>\n */\nexport interface TooManyRequestsException extends __SmithyException, $MetadataBearer {\n  name: \"TooManyRequestsException\";\n  $fault: \"client\";\n  /**\n   * <p>Message returned by a TooManyRequestsException</p>\n   */\n  message?: string;\n}\n\nexport namespace TooManyRequestsException {\n  export const filterSensitiveLog = (obj: TooManyRequestsException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>DeleteIdentities</code> action.</p>\n */\nexport interface DeleteIdentitiesInput {\n  /**\n   * <p>A list of 1-60 identities that you want to delete.</p>\n   */\n  IdentityIdsToDelete: string[] | undefined;\n}\n\nexport namespace DeleteIdentitiesInput {\n  export const filterSensitiveLog = (obj: DeleteIdentitiesInput): any => ({\n    ...obj,\n  });\n}\n\nexport enum ErrorCode {\n  ACCESS_DENIED = \"AccessDenied\",\n  INTERNAL_SERVER_ERROR = \"InternalServerError\",\n}\n\n/**\n * <p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and\n *          IdentityId.</p>\n */\nexport interface UnprocessedIdentityId {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>The error code indicating the type of error that occurred.</p>\n   */\n  ErrorCode?: ErrorCode | string;\n}\n\nexport namespace UnprocessedIdentityId {\n  export const filterSensitiveLog = (obj: UnprocessedIdentityId): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>DeleteIdentities</code>\n *          operation.</p>\n */\nexport interface DeleteIdentitiesResponse {\n  /**\n   * <p>An array of UnprocessedIdentityId objects, each of which contains an ErrorCode and\n   *          IdentityId.</p>\n   */\n  UnprocessedIdentityIds?: UnprocessedIdentityId[];\n}\n\nexport namespace DeleteIdentitiesResponse {\n  export const filterSensitiveLog = (obj: DeleteIdentitiesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the DeleteIdentityPool action.</p>\n */\nexport interface DeleteIdentityPoolInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace DeleteIdentityPoolInput {\n  export const filterSensitiveLog = (obj: DeleteIdentityPoolInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown when the requested resource (for example, a dataset or record) does not\n *          exist.</p>\n */\nexport interface ResourceNotFoundException extends __SmithyException, $MetadataBearer {\n  name: \"ResourceNotFoundException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ResourceNotFoundException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ResourceNotFoundException {\n  export const filterSensitiveLog = (obj: ResourceNotFoundException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>DescribeIdentity</code> action.</p>\n */\nexport interface DescribeIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n}\n\nexport namespace DescribeIdentityInput {\n  export const filterSensitiveLog = (obj: DescribeIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A description of the identity.</p>\n */\nexport interface IdentityDescription {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>The provider names.</p>\n   */\n  Logins?: string[];\n\n  /**\n   * <p>Date on which the identity was created.</p>\n   */\n  CreationDate?: Date;\n\n  /**\n   * <p>Date on which the identity was last modified.</p>\n   */\n  LastModifiedDate?: Date;\n}\n\nexport namespace IdentityDescription {\n  export const filterSensitiveLog = (obj: IdentityDescription): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the DescribeIdentityPool action.</p>\n */\nexport interface DescribeIdentityPoolInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace DescribeIdentityPoolInput {\n  export const filterSensitiveLog = (obj: DescribeIdentityPoolInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>An exception thrown when a dependent service such as Facebook or Twitter is not\n *          responding</p>\n */\nexport interface ExternalServiceException extends __SmithyException, $MetadataBearer {\n  name: \"ExternalServiceException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by an ExternalServiceException</p>\n   */\n  message?: string;\n}\n\nexport namespace ExternalServiceException {\n  export const filterSensitiveLog = (obj: ExternalServiceException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>GetCredentialsForIdentity</code> action.</p>\n */\nexport interface GetCredentialsForIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. The\n   *          name-value pair will follow the syntax \"provider_name\":\n   *          \"provider_user_identifier\".</p>\n   *          <p>Logins should not be specified when trying to get credentials for an unauthenticated\n   *          identity.</p>\n   *          <p>The Logins parameter is required when using identities associated with external\n   *          identity providers such as FaceBook. For examples of <code>Logins</code> maps, see the code\n   *          examples in the <a href=\"http://docs.aws.amazon.com/cognito/latest/developerguide/external-identity-providers.html\">External Identity Providers</a> section of the Amazon Cognito Developer\n   *          Guide.</p>\n   */\n  Logins?: { [key: string]: string };\n\n  /**\n   * <p>The Amazon Resource Name (ARN) of the role to be assumed when multiple roles were\n   *          received in the token from the identity provider. For example, a SAML-based identity\n   *          provider. This parameter is optional for identity providers that do not support role\n   *          customization.</p>\n   */\n  CustomRoleArn?: string;\n}\n\nexport namespace GetCredentialsForIdentityInput {\n  export const filterSensitiveLog = (obj: GetCredentialsForIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Credentials for the provided identity ID.</p>\n */\nexport interface Credentials {\n  /**\n   * <p>The Access Key portion of the credentials.</p>\n   */\n  AccessKeyId?: string;\n\n  /**\n   * <p>The Secret Access Key portion of the credentials</p>\n   */\n  SecretKey?: string;\n\n  /**\n   * <p>The Session Token portion of the credentials</p>\n   */\n  SessionToken?: string;\n\n  /**\n   * <p>The date at which these credentials will expire.</p>\n   */\n  Expiration?: Date;\n}\n\nexport namespace Credentials {\n  export const filterSensitiveLog = (obj: Credentials): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>GetCredentialsForIdentity</code>\n *          operation.</p>\n */\nexport interface GetCredentialsForIdentityResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>Credentials for the provided identity ID.</p>\n   */\n  Credentials?: Credentials;\n}\n\nexport namespace GetCredentialsForIdentityResponse {\n  export const filterSensitiveLog = (obj: GetCredentialsForIdentityResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown if the identity pool has no role associated for the given auth type\n *          (auth/unauth) or if the AssumeRole fails.</p>\n */\nexport interface InvalidIdentityPoolConfigurationException extends __SmithyException, $MetadataBearer {\n  name: \"InvalidIdentityPoolConfigurationException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned for an <code>InvalidIdentityPoolConfigurationException</code>\n   *          </p>\n   */\n  message?: string;\n}\n\nexport namespace InvalidIdentityPoolConfigurationException {\n  export const filterSensitiveLog = (obj: InvalidIdentityPoolConfigurationException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the GetId action.</p>\n */\nexport interface GetIdInput {\n  /**\n   * <p>A standard AWS account ID (9+ digits).</p>\n   */\n  AccountId?: string;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. The\n   *          available provider names for <code>Logins</code> are as follows:</p>\n   *          <ul>\n   *             <li>\n   *                <p>Facebook: <code>graph.facebook.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Amazon Cognito user pool:\n   *                   <code>cognito-idp.<region>.amazonaws.com/<YOUR_USER_POOL_ID></code>,\n   *                for example, <code>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</code>.\n   *             </p>\n   *             </li>\n   *             <li>\n   *                <p>Google: <code>accounts.google.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Amazon: <code>www.amazon.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Twitter: <code>api.twitter.com</code>\n   *                </p>\n   *             </li>\n   *             <li>\n   *                <p>Digits: <code>www.digits.com</code>\n   *                </p>\n   *             </li>\n   *          </ul>\n   */\n  Logins?: { [key: string]: string };\n}\n\nexport namespace GetIdInput {\n  export const filterSensitiveLog = (obj: GetIdInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a GetId request.</p>\n */\nexport interface GetIdResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n}\n\nexport namespace GetIdResponse {\n  export const filterSensitiveLog = (obj: GetIdResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>GetIdentityPoolRoles</code> action.</p>\n */\nexport interface GetIdentityPoolRolesInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace GetIdentityPoolRolesInput {\n  export const filterSensitiveLog = (obj: GetIdentityPoolRolesInput): any => ({\n    ...obj,\n  });\n}\n\nexport enum MappingRuleMatchType {\n  CONTAINS = \"Contains\",\n  EQUALS = \"Equals\",\n  NOT_EQUAL = \"NotEqual\",\n  STARTS_WITH = \"StartsWith\",\n}\n\n/**\n * <p>A rule that maps a claim name, a claim value, and a match type to a role\n *          ARN.</p>\n */\nexport interface MappingRule {\n  /**\n   * <p>The claim name that must be present in the token, for example, \"isAdmin\" or\n   *          \"paid\".</p>\n   */\n  Claim: string | undefined;\n\n  /**\n   * <p>The match condition that specifies how closely the claim value in the IdP token must\n   *          match <code>Value</code>.</p>\n   */\n  MatchType: MappingRuleMatchType | string | undefined;\n\n  /**\n   * <p>A brief string that the claim must match, for example, \"paid\" or \"yes\".</p>\n   */\n  Value: string | undefined;\n\n  /**\n   * <p>The role ARN.</p>\n   */\n  RoleARN: string | undefined;\n}\n\nexport namespace MappingRule {\n  export const filterSensitiveLog = (obj: MappingRule): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A container for rules.</p>\n */\nexport interface RulesConfigurationType {\n  /**\n   * <p>An array of rules. You can specify up to 25 rules per identity provider.</p>\n   *          <p>Rules are evaluated in order. The first one to match specifies the role.</p>\n   */\n  Rules: MappingRule[] | undefined;\n}\n\nexport namespace RulesConfigurationType {\n  export const filterSensitiveLog = (obj: RulesConfigurationType): any => ({\n    ...obj,\n  });\n}\n\nexport enum RoleMappingType {\n  RULES = \"Rules\",\n  TOKEN = \"Token\",\n}\n\n/**\n * <p>A role mapping.</p>\n */\nexport interface RoleMapping {\n  /**\n   * <p>The role mapping type. Token will use <code>cognito:roles</code> and\n   *             <code>cognito:preferred_role</code> claims from the Cognito identity provider token to\n   *          map groups to roles. Rules will attempt to match claims from the token to map to a\n   *          role.</p>\n   */\n  Type: RoleMappingType | string | undefined;\n\n  /**\n   * <p>If you specify Token or Rules as the <code>Type</code>,\n   *             <code>AmbiguousRoleResolution</code> is required.</p>\n   *          <p>Specifies the action to be taken if either no rules match the claim value for the\n   *             <code>Rules</code> type, or there is no <code>cognito:preferred_role</code> claim and\n   *          there are multiple <code>cognito:roles</code> matches for the <code>Token</code>\n   *          type.</p>\n   */\n  AmbiguousRoleResolution?: AmbiguousRoleResolutionType | string;\n\n  /**\n   * <p>The rules to be used for mapping users to roles.</p>\n   *          <p>If you specify Rules as the role mapping type, <code>RulesConfiguration</code> is\n   *          required.</p>\n   */\n  RulesConfiguration?: RulesConfigurationType;\n}\n\nexport namespace RoleMapping {\n  export const filterSensitiveLog = (obj: RoleMapping): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>GetIdentityPoolRoles</code>\n *          operation.</p>\n */\nexport interface GetIdentityPoolRolesResponse {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n\n  /**\n   * <p>The map of roles associated with this pool. Currently only authenticated and\n   *          unauthenticated roles are supported.</p>\n   */\n  Roles?: { [key: string]: string };\n\n  /**\n   * <p>How users for a specific identity provider are to mapped to roles. This is a\n   *             String-to-<a>RoleMapping</a> object map. The string identifies the identity\n   *          provider, for example, \"graph.facebook.com\" or\n   *          \"cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id\".</p>\n   */\n  RoleMappings?: { [key: string]: RoleMapping };\n}\n\nexport namespace GetIdentityPoolRolesResponse {\n  export const filterSensitiveLog = (obj: GetIdentityPoolRolesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the GetOpenIdToken action.</p>\n */\nexport interface GetOpenIdTokenInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. When\n   *          using graph.facebook.com and www.amazon.com, supply the access_token returned from the\n   *          provider's authflow. For accounts.google.com, an Amazon Cognito user pool provider, or any\n   *          other OpenId Connect provider, always include the <code>id_token</code>.</p>\n   */\n  Logins?: { [key: string]: string };\n}\n\nexport namespace GetOpenIdTokenInput {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful GetOpenIdToken request.</p>\n */\nexport interface GetOpenIdTokenResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID. Note that the IdentityId returned may\n   *          not match the one passed on input.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>An OpenID token, valid for 10 minutes.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetOpenIdTokenResponse {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The provided developer user identifier is already registered with Cognito under a\n *          different identity ID.</p>\n */\nexport interface DeveloperUserAlreadyRegisteredException extends __SmithyException, $MetadataBearer {\n  name: \"DeveloperUserAlreadyRegisteredException\";\n  $fault: \"client\";\n  /**\n   * <p>This developer user identifier is already registered with Cognito.</p>\n   */\n  message?: string;\n}\n\nexport namespace DeveloperUserAlreadyRegisteredException {\n  export const filterSensitiveLog = (obj: DeveloperUserAlreadyRegisteredException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>GetOpenIdTokenForDeveloperIdentity</code> action.</p>\n */\nexport interface GetOpenIdTokenForDeveloperIdentityInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider tokens. Each\n   *          name-value pair represents a user from a public provider or developer provider. If the user\n   *          is from a developer provider, the name-value pair will follow the syntax\n   *             <code>\"developer_provider_name\": \"developer_user_identifier\"</code>. The developer\n   *          provider is the \"domain\" by which Cognito will refer to your users; you provided this\n   *          domain while creating/updating the identity pool. The developer user identifier is an\n   *          identifier from your backend that uniquely identifies a user. When you create an identity\n   *          pool, you can specify the supported logins.</p>\n   */\n  Logins: { [key: string]: string } | undefined;\n\n  /**\n   * <p>The expiration time of the token, in seconds. You can specify a custom expiration\n   *          time for the token so that you can cache it. If you don't provide an expiration time, the\n   *          token is valid for 15 minutes. You can exchange the token with Amazon STS for temporary AWS\n   *          credentials, which are valid for a maximum of one hour. The maximum token duration you can\n   *          set is 24 hours. You should take care in setting the expiration time for a token, as there\n   *          are significant security implications: an attacker could use a leaked token to access your\n   *          AWS resources for the token's duration.</p>\n   *          <note>\n   *             <p>Please provide for a small grace period, usually no more than 5 minutes, to account for clock skew.</p>\n   *          </note>\n   */\n  TokenDuration?: number;\n}\n\nexport namespace GetOpenIdTokenForDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenForDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>GetOpenIdTokenForDeveloperIdentity</code>\n *          request.</p>\n */\nexport interface GetOpenIdTokenForDeveloperIdentityResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>An OpenID token.</p>\n   */\n  Token?: string;\n}\n\nexport namespace GetOpenIdTokenForDeveloperIdentityResponse {\n  export const filterSensitiveLog = (obj: GetOpenIdTokenForDeveloperIdentityResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the ListIdentities action.</p>\n */\nexport interface ListIdentitiesInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults: number | undefined;\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n\n  /**\n   * <p>An optional boolean parameter that allows you to hide disabled identities. If\n   *          omitted, the ListIdentities API will include disabled identities in the response.</p>\n   */\n  HideDisabled?: boolean;\n}\n\nexport namespace ListIdentitiesInput {\n  export const filterSensitiveLog = (obj: ListIdentitiesInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The response to a ListIdentities request.</p>\n */\nexport interface ListIdentitiesResponse {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n\n  /**\n   * <p>An object containing a set of identities and associated mappings.</p>\n   */\n  Identities?: IdentityDescription[];\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace ListIdentitiesResponse {\n  export const filterSensitiveLog = (obj: ListIdentitiesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the ListIdentityPools action.</p>\n */\nexport interface ListIdentityPoolsInput {\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults: number | undefined;\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace ListIdentityPoolsInput {\n  export const filterSensitiveLog = (obj: ListIdentityPoolsInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>A description of the identity pool.</p>\n */\nexport interface IdentityPoolShortDescription {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId?: string;\n\n  /**\n   * <p>A string that you provide.</p>\n   */\n  IdentityPoolName?: string;\n}\n\nexport namespace IdentityPoolShortDescription {\n  export const filterSensitiveLog = (obj: IdentityPoolShortDescription): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>The result of a successful ListIdentityPools action.</p>\n */\nexport interface ListIdentityPoolsResponse {\n  /**\n   * <p>The identity pools returned by the ListIdentityPools action.</p>\n   */\n  IdentityPools?: IdentityPoolShortDescription[];\n\n  /**\n   * <p>A pagination token.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace ListIdentityPoolsResponse {\n  export const filterSensitiveLog = (obj: ListIdentityPoolsResponse): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsForResourceInput {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool that the tags are assigned\n   *          to.</p>\n   */\n  ResourceArn: string | undefined;\n}\n\nexport namespace ListTagsForResourceInput {\n  export const filterSensitiveLog = (obj: ListTagsForResourceInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface ListTagsForResourceResponse {\n  /**\n   * <p>The tags that are assigned to the identity pool.</p>\n   */\n  Tags?: { [key: string]: string };\n}\n\nexport namespace ListTagsForResourceResponse {\n  export const filterSensitiveLog = (obj: ListTagsForResourceResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>LookupDeveloperIdentityInput</code> action.</p>\n */\nexport interface LookupDeveloperIdentityInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>A unique ID used by your backend authentication process to identify a user.\n   *          Typically, a developer identity provider would issue many developer user identifiers, in\n   *          keeping with the number of users.</p>\n   */\n  DeveloperUserIdentifier?: string;\n\n  /**\n   * <p>The maximum number of identities to return.</p>\n   */\n  MaxResults?: number;\n\n  /**\n   * <p>A pagination token. The first call you make will have <code>NextToken</code> set to\n   *          null. After that the service will return <code>NextToken</code> values as needed. For\n   *          example, let's say you make a request with <code>MaxResults</code> set to 10, and there are\n   *          20 matches in the database. The service will return a pagination token as a part of the\n   *          response. This token can be used to call the API again and get results starting from the\n   *          11th match.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace LookupDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: LookupDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>LookupDeveloperIdentity</code>\n *          action.</p>\n */\nexport interface LookupDeveloperIdentityResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n\n  /**\n   * <p>This is the list of developer user identifiers associated with an identity ID.\n   *          Cognito supports the association of multiple developer user identifiers with an identity\n   *          ID.</p>\n   */\n  DeveloperUserIdentifierList?: string[];\n\n  /**\n   * <p>A pagination token. The first call you make will have <code>NextToken</code> set to\n   *          null. After that the service will return <code>NextToken</code> values as needed. For\n   *          example, let's say you make a request with <code>MaxResults</code> set to 10, and there are\n   *          20 matches in the database. The service will return a pagination token as a part of the\n   *          response. This token can be used to call the API again and get results starting from the\n   *          11th match.</p>\n   */\n  NextToken?: string;\n}\n\nexport namespace LookupDeveloperIdentityResponse {\n  export const filterSensitiveLog = (obj: LookupDeveloperIdentityResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>MergeDeveloperIdentities</code> action.</p>\n */\nexport interface MergeDeveloperIdentitiesInput {\n  /**\n   * <p>User identifier for the source user. The value should be a\n   *             <code>DeveloperUserIdentifier</code>.</p>\n   */\n  SourceUserIdentifier: string | undefined;\n\n  /**\n   * <p>User identifier for the destination user. The value should be a\n   *             <code>DeveloperUserIdentifier</code>.</p>\n   */\n  DestinationUserIdentifier: string | undefined;\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users. This is a (pseudo) domain\n   *          name that you provide while creating an identity pool. This name acts as a placeholder that\n   *          allows your backend and the Cognito service to communicate about the developer provider.\n   *          For the <code>DeveloperProviderName</code>, you can use letters as well as period (.),\n   *          underscore (_), and dash (-).</p>\n   */\n  DeveloperProviderName: string | undefined;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n}\n\nexport namespace MergeDeveloperIdentitiesInput {\n  export const filterSensitiveLog = (obj: MergeDeveloperIdentitiesInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Returned in response to a successful <code>MergeDeveloperIdentities</code>\n *          action.</p>\n */\nexport interface MergeDeveloperIdentitiesResponse {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId?: string;\n}\n\nexport namespace MergeDeveloperIdentitiesResponse {\n  export const filterSensitiveLog = (obj: MergeDeveloperIdentitiesResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Thrown if there are parallel requests to modify a resource.</p>\n */\nexport interface ConcurrentModificationException extends __SmithyException, $MetadataBearer {\n  name: \"ConcurrentModificationException\";\n  $fault: \"client\";\n  /**\n   * <p>The message returned by a ConcurrentModificationException.</p>\n   */\n  message?: string;\n}\n\nexport namespace ConcurrentModificationException {\n  export const filterSensitiveLog = (obj: ConcurrentModificationException): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>SetIdentityPoolRoles</code> action.</p>\n */\nexport interface SetIdentityPoolRolesInput {\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>The map of roles associated with this pool. For a given role, the key will be either\n   *          \"authenticated\" or \"unauthenticated\" and the value will be the Role ARN.</p>\n   */\n  Roles: { [key: string]: string } | undefined;\n\n  /**\n   * <p>How users for a specific identity provider are to mapped to roles. This is a string\n   *          to <a>RoleMapping</a> object map. The string identifies the identity provider,\n   *          for example, \"graph.facebook.com\" or\n   *          \"cognito-idp-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id\".</p>\n   *          <p>Up to 25 rules can be specified per identity provider.</p>\n   */\n  RoleMappings?: { [key: string]: RoleMapping };\n}\n\nexport namespace SetIdentityPoolRolesInput {\n  export const filterSensitiveLog = (obj: SetIdentityPoolRolesInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface TagResourceInput {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool to assign the tags to.</p>\n   */\n  ResourceArn: string | undefined;\n\n  /**\n   * <p>The tags to assign to the identity pool.</p>\n   */\n  Tags: { [key: string]: string } | undefined;\n}\n\nexport namespace TagResourceInput {\n  export const filterSensitiveLog = (obj: TagResourceInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface TagResourceResponse {}\n\nexport namespace TagResourceResponse {\n  export const filterSensitiveLog = (obj: TagResourceResponse): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the <code>UnlinkDeveloperIdentity</code> action.</p>\n */\nexport interface UnlinkDeveloperIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>An identity pool ID in the format REGION:GUID.</p>\n   */\n  IdentityPoolId: string | undefined;\n\n  /**\n   * <p>The \"domain\" by which Cognito will refer to your users.</p>\n   */\n  DeveloperProviderName: string | undefined;\n\n  /**\n   * <p>A unique ID used by your backend authentication process to identify a user.</p>\n   */\n  DeveloperUserIdentifier: string | undefined;\n}\n\nexport namespace UnlinkDeveloperIdentityInput {\n  export const filterSensitiveLog = (obj: UnlinkDeveloperIdentityInput): any => ({\n    ...obj,\n  });\n}\n\n/**\n * <p>Input to the UnlinkIdentity action.</p>\n */\nexport interface UnlinkIdentityInput {\n  /**\n   * <p>A unique identifier in the format REGION:GUID.</p>\n   */\n  IdentityId: string | undefined;\n\n  /**\n   * <p>A set of optional name-value pairs that map provider names to provider\n   *          tokens.</p>\n   */\n  Logins: { [key: string]: string } | undefined;\n\n  /**\n   * <p>Provider names to unlink from this identity.</p>\n   */\n  LoginsToRemove: string[] | undefined;\n}\n\nexport namespace UnlinkIdentityInput {\n  export const filterSensitiveLog = (obj: UnlinkIdentityInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface UntagResourceInput {\n  /**\n   * <p>The Amazon Resource Name (ARN) of the identity pool that the tags are assigned\n   *          to.</p>\n   */\n  ResourceArn: string | undefined;\n\n  /**\n   * <p>The keys of the tags to remove from the user pool.</p>\n   */\n  TagKeys: string[] | undefined;\n}\n\nexport namespace UntagResourceInput {\n  export const filterSensitiveLog = (obj: UntagResourceInput): any => ({\n    ...obj,\n  });\n}\n\nexport interface UntagResourceResponse {}\n\nexport namespace UntagResourceResponse {\n  export const filterSensitiveLog = (obj: UntagResourceResponse): any => ({\n    ...obj,\n  });\n}\n"]},"metadata":{},"sourceType":"module"}