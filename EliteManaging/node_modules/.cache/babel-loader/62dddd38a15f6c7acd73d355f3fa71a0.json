{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function () {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) try {\n      if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n      if (y = 0, t) op = [op[0] & 2, t.value];\n\n      switch (op[0]) {\n        case 0:\n        case 1:\n          t = op;\n          break;\n\n        case 4:\n          _.label++;\n          return {\n            value: op[1],\n            done: false\n          };\n\n        case 5:\n          _.label++;\n          y = op[1];\n          op = [0];\n          continue;\n\n        case 7:\n          op = _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n\n        default:\n          if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n            _ = 0;\n            continue;\n          }\n\n          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n            _.label = op[1];\n            break;\n          }\n\n          if (op[0] === 6 && _.label < t[1]) {\n            _.label = t[1];\n            t = op;\n            break;\n          }\n\n          if (t && _.label < t[2]) {\n            _.label = t[2];\n\n            _.ops.push(op);\n\n            break;\n          }\n\n          if (t[2]) _.ops.pop();\n\n          _.trys.pop();\n\n          continue;\n      }\n\n      op = body.call(thisArg, _);\n    } catch (e) {\n      op = [6, e];\n      y = 0;\n    } finally {\n      f = t = 0;\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\n\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { browserOrNode } from '../JS';\nimport { NonRetryableError } from '../Util';\nvar logger = new Logger('CognitoCredentials');\nvar waitForInit = new Promise(function (res, rej) {\n  if (!browserOrNode().isBrowser) {\n    logger.debug('not in the browser, directly resolved');\n    return res();\n  }\n\n  var ga = window['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n\n  if (ga) {\n    logger.debug('google api already loaded');\n    return res();\n  } else {\n    setTimeout(function () {\n      return res();\n    }, 2000);\n  }\n});\n\nvar GoogleOAuth =\n/** @class */\nfunction () {\n  function GoogleOAuth() {\n    this.initialized = false;\n    this.refreshGoogleToken = this.refreshGoogleToken.bind(this);\n    this._refreshGoogleTokenImpl = this._refreshGoogleTokenImpl.bind(this);\n  }\n\n  GoogleOAuth.prototype.refreshGoogleToken = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!!this.initialized) return [3\n            /*break*/\n            , 2];\n            logger.debug('need to wait for the Google SDK loaded');\n            return [4\n            /*yield*/\n            , waitForInit];\n\n          case 1:\n            _a.sent();\n\n            this.initialized = true;\n            logger.debug('finish waiting');\n            _a.label = 2;\n\n          case 2:\n            return [2\n            /*return*/\n            , this._refreshGoogleTokenImpl()];\n        }\n      });\n    });\n  };\n\n  GoogleOAuth.prototype._refreshGoogleTokenImpl = function () {\n    var ga = null;\n    if (browserOrNode().isBrowser) ga = window['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n\n    if (!ga) {\n      logger.debug('no gapi auth2 available');\n      return Promise.reject('no gapi auth2 available');\n    }\n\n    return new Promise(function (res, rej) {\n      ga.getAuthInstance().then(function (googleAuth) {\n        if (!googleAuth) {\n          logger.debug('google Auth undefined');\n          rej(new NonRetryableError('google Auth undefined'));\n        }\n\n        var googleUser = googleAuth.currentUser.get(); // refresh the token\n\n        if (googleUser.isSignedIn()) {\n          logger.debug('refreshing the google access token');\n          googleUser.reloadAuthResponse().then(function (authResponse) {\n            var id_token = authResponse.id_token,\n                expires_at = authResponse.expires_at;\n            res({\n              token: id_token,\n              expires_at: expires_at\n            });\n          }).catch(function (err) {\n            if (err && err.error === 'network_error') {\n              // Not using NonRetryableError so handler will be retried\n              rej('Network error reloading google auth response');\n            } else {\n              rej(new NonRetryableError('Failed to reload google auth response'));\n            }\n          });\n        } else {\n          rej(new NonRetryableError('User is not signed in with Google'));\n        }\n      }).catch(function (err) {\n        logger.debug('Failed to refresh google token', err);\n        rej(new NonRetryableError('Failed to refresh google token'));\n      });\n    });\n  };\n\n  return GoogleOAuth;\n}();\n\nexport { GoogleOAuth };\n/**\n * @deprecated use named import\n */\n\nexport default GoogleOAuth;","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","browserOrNode","NonRetryableError","logger","waitForInit","Promise","res","rej","isBrowser","debug","ga","window","auth2","setTimeout","refreshGoogleToken","bind","_refreshGoogleTokenImpl","GoogleOAuth","initialized","_a","reject","getAuthInstance","then","googleAuth","googleUser","currentUser","get","isSignedIn","reloadAuthResponse","expires_at","token","id_token","catch","err","error"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\github\\resumeprojectsrepo\\resumeprojects\\EliteManaging\\node_modules\\@aws-amplify\\core\\src\\OAuthHelper\\GoogleOAuth.ts"],"sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nimport { browserOrNode } from '../JS';\nimport { NonRetryableError } from '../Util';\n\nconst logger = new Logger('CognitoCredentials');\n\nconst waitForInit = new Promise((res, rej) => {\n\tif (!browserOrNode().isBrowser) {\n\t\tlogger.debug('not in the browser, directly resolved');\n\t\treturn res();\n\t}\n\tconst ga =\n\t\twindow['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n\tif (ga) {\n\t\tlogger.debug('google api already loaded');\n\t\treturn res();\n\t} else {\n\t\tsetTimeout(() => {\n\t\t\treturn res();\n\t\t}, 2000);\n\t}\n});\n\nexport class GoogleOAuth {\n\tpublic initialized = false;\n\n\tconstructor() {\n\t\tthis.refreshGoogleToken = this.refreshGoogleToken.bind(this);\n\t\tthis._refreshGoogleTokenImpl = this._refreshGoogleTokenImpl.bind(this);\n\t}\n\n\tpublic async refreshGoogleToken() {\n\t\tif (!this.initialized) {\n\t\t\tlogger.debug('need to wait for the Google SDK loaded');\n\t\t\tawait waitForInit;\n\t\t\tthis.initialized = true;\n\t\t\tlogger.debug('finish waiting');\n\t\t}\n\n\t\treturn this._refreshGoogleTokenImpl();\n\t}\n\n\tprivate _refreshGoogleTokenImpl() {\n\t\tlet ga = null;\n\t\tif (browserOrNode().isBrowser)\n\t\t\tga = window['gapi'] && window['gapi'].auth2 ? window['gapi'].auth2 : null;\n\t\tif (!ga) {\n\t\t\tlogger.debug('no gapi auth2 available');\n\t\t\treturn Promise.reject('no gapi auth2 available');\n\t\t}\n\n\t\treturn new Promise((res, rej) => {\n\t\t\tga.getAuthInstance()\n\t\t\t\t.then(googleAuth => {\n\t\t\t\t\tif (!googleAuth) {\n\t\t\t\t\t\tlogger.debug('google Auth undefined');\n\t\t\t\t\t\trej(new NonRetryableError('google Auth undefined'));\n\t\t\t\t\t}\n\n\t\t\t\t\tconst googleUser = googleAuth.currentUser.get();\n\t\t\t\t\t// refresh the token\n\t\t\t\t\tif (googleUser.isSignedIn()) {\n\t\t\t\t\t\tlogger.debug('refreshing the google access token');\n\t\t\t\t\t\tgoogleUser\n\t\t\t\t\t\t\t.reloadAuthResponse()\n\t\t\t\t\t\t\t.then(authResponse => {\n\t\t\t\t\t\t\t\tconst { id_token, expires_at } = authResponse;\n\t\t\t\t\t\t\t\tres({ token: id_token, expires_at });\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t.catch(err => {\n\t\t\t\t\t\t\t\tif (err && err.error === 'network_error') {\n\t\t\t\t\t\t\t\t\t// Not using NonRetryableError so handler will be retried\n\t\t\t\t\t\t\t\t\trej('Network error reloading google auth response');\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\trej(\n\t\t\t\t\t\t\t\t\t\tnew NonRetryableError(\n\t\t\t\t\t\t\t\t\t\t\t'Failed to reload google auth response'\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\trej(new NonRetryableError('User is not signed in with Google'));\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tlogger.debug('Failed to refresh google token', err);\n\t\t\t\t\trej(new NonRetryableError('Failed to refresh google token'));\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n/**\n * @deprecated use named import\n */\nexport default GoogleOAuth;\n"]},"metadata":{},"sourceType":"module"}