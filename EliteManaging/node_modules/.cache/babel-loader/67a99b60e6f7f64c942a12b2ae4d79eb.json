{"ast":null,"code":"/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\nvar logger = new Logger('ClientDevice_Browser');\nexport function clientInfo() {\n  if (typeof window === 'undefined') {\n    return {};\n  }\n\n  return browserClientInfo();\n}\n\nfunction browserClientInfo() {\n  if (typeof window === 'undefined') {\n    logger.warn('No window object available to get browser client info');\n    return {};\n  }\n\n  var nav = window.navigator;\n\n  if (!nav) {\n    logger.warn('No navigator object available to get browser client info');\n    return {};\n  }\n\n  var platform = nav.platform,\n      product = nav.product,\n      vendor = nav.vendor,\n      userAgent = nav.userAgent,\n      language = nav.language;\n  var type = browserType(userAgent);\n  var timezone = browserTimezone();\n  return {\n    platform: platform,\n    make: product || vendor,\n    model: type.type,\n    version: type.version,\n    appVersion: [type.type, type.version].join('/'),\n    language: language,\n    timezone: timezone\n  };\n}\n\nexport function dimension() {\n  if (typeof window === 'undefined') {\n    logger.warn('No window object available to get browser client info');\n    return {\n      width: 320,\n      height: 320\n    };\n  }\n\n  return {\n    width: window.innerWidth,\n    height: window.innerHeight\n  };\n}\n\nfunction browserTimezone() {\n  var tzMatch = /\\(([A-Za-z\\s].*)\\)/.exec(new Date().toString());\n  return tzMatch ? tzMatch[1] || '' : '';\n}\n\nexport function browserType(userAgent) {\n  var operaMatch = /.+(Opera[\\s[A-Z]*|OPR[\\sA-Z]*)\\/([0-9\\.]+).*/i.exec(userAgent);\n\n  if (operaMatch) {\n    return {\n      type: operaMatch[1],\n      version: operaMatch[2]\n    };\n  }\n\n  var ieMatch = /.+(Trident|Edge)\\/([0-9\\.]+).*/i.exec(userAgent);\n\n  if (ieMatch) {\n    return {\n      type: ieMatch[1],\n      version: ieMatch[2]\n    };\n  }\n\n  var cfMatch = /.+(Chrome|Firefox|FxiOS)\\/([0-9\\.]+).*/i.exec(userAgent);\n\n  if (cfMatch) {\n    return {\n      type: cfMatch[1],\n      version: cfMatch[2]\n    };\n  }\n\n  var sMatch = /.+(Safari)\\/([0-9\\.]+).*/i.exec(userAgent);\n\n  if (sMatch) {\n    return {\n      type: sMatch[1],\n      version: sMatch[2]\n    };\n  }\n\n  var awkMatch = /.+(AppleWebKit)\\/([0-9\\.]+).*/i.exec(userAgent);\n\n  if (awkMatch) {\n    return {\n      type: awkMatch[1],\n      version: awkMatch[2]\n    };\n  }\n\n  var anyMatch = /.*([A-Z]+)\\/([0-9\\.]+).*/i.exec(userAgent);\n\n  if (anyMatch) {\n    return {\n      type: anyMatch[1],\n      version: anyMatch[2]\n    };\n  }\n\n  return {\n    type: '',\n    version: ''\n  };\n}","map":{"version":3,"mappings":"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","names":["ConsoleLogger","Logger","logger","clientInfo","window","browserClientInfo","warn","nav","navigator","product","vendor","userAgent","language","type","browserType","timezone","browserTimezone","platform","make","model","version","appVersion","join","dimension","width","height","innerWidth","innerHeight","tzMatch","exec","Date","toString","operaMatch","ieMatch","cfMatch","sMatch","awkMatch","anyMatch"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-amplify\\core\\src\\ClientDevice\\browser.ts"],"sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { ConsoleLogger as Logger } from '../Logger';\n\nconst logger = new Logger('ClientDevice_Browser');\n\nexport function clientInfo() {\n\tif (typeof window === 'undefined') {\n\t\treturn {};\n\t}\n\n\treturn browserClientInfo();\n}\n\nfunction browserClientInfo() {\n\tif (typeof window === 'undefined') {\n\t\tlogger.warn('No window object available to get browser client info');\n\t\treturn {};\n\t}\n\n\tconst nav = window.navigator;\n\tif (!nav) {\n\t\tlogger.warn('No navigator object available to get browser client info');\n\t\treturn {};\n\t}\n\n\tconst { platform, product, vendor, userAgent, language } = nav;\n\tconst type = browserType(userAgent);\n\tconst timezone = browserTimezone();\n\n\treturn {\n\t\tplatform,\n\t\tmake: product || vendor,\n\t\tmodel: type.type,\n\t\tversion: type.version,\n\t\tappVersion: [type.type, type.version].join('/'),\n\t\tlanguage,\n\t\ttimezone,\n\t};\n}\n\nexport function dimension() {\n\tif (typeof window === 'undefined') {\n\t\tlogger.warn('No window object available to get browser client info');\n\t\treturn { width: 320, height: 320 };\n\t}\n\n\treturn {\n\t\twidth: window.innerWidth,\n\t\theight: window.innerHeight,\n\t};\n}\n\nfunction browserTimezone() {\n\tconst tzMatch = /\\(([A-Za-z\\s].*)\\)/.exec(new Date().toString());\n\treturn tzMatch ? tzMatch[1] || '' : '';\n}\n\nexport function browserType(userAgent: string) {\n\tconst operaMatch = /.+(Opera[\\s[A-Z]*|OPR[\\sA-Z]*)\\/([0-9\\.]+).*/i.exec(\n\t\tuserAgent\n\t);\n\tif (operaMatch) {\n\t\treturn { type: operaMatch[1], version: operaMatch[2] };\n\t}\n\n\tconst ieMatch = /.+(Trident|Edge)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (ieMatch) {\n\t\treturn { type: ieMatch[1], version: ieMatch[2] };\n\t}\n\n\tconst cfMatch = /.+(Chrome|Firefox|FxiOS)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (cfMatch) {\n\t\treturn { type: cfMatch[1], version: cfMatch[2] };\n\t}\n\n\tconst sMatch = /.+(Safari)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (sMatch) {\n\t\treturn { type: sMatch[1], version: sMatch[2] };\n\t}\n\n\tconst awkMatch = /.+(AppleWebKit)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (awkMatch) {\n\t\treturn { type: awkMatch[1], version: awkMatch[2] };\n\t}\n\n\tconst anyMatch = /.*([A-Z]+)\\/([0-9\\.]+).*/i.exec(userAgent);\n\tif (anyMatch) {\n\t\treturn { type: anyMatch[1], version: anyMatch[2] };\n\t}\n\n\treturn { type: '', version: '' };\n}\n"]},"metadata":{},"sourceType":"module"}