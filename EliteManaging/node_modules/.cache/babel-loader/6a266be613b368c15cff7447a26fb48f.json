{"ast":null,"code":"import { __values } from \"tslib\";\nimport { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\n/**\n * @internal\n */\n\nexport function prepareRequest(request) {\n  var e_1, _a; // Create a clone of the request object that does not clone the body\n\n\n  request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n\n  try {\n    for (var _b = __values(Object.keys(request.headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var headerName = _c.value;\n\n      if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n        delete request.headers[headerName];\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return request;\n}","map":{"version":3,"mappings":";AAEA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,iBAAT,QAAkC,aAAlC;AAEA;;;;AAGA,OAAM,SAAUC,cAAV,CAAyBC,OAAzB,EAA6C;cAAA,CACjD;;;EACAA,OAAO,GAAG,OAAQA,OAAe,CAACC,KAAxB,KAAkC,UAAlC,GAAgDD,OAAe,CAACC,KAAhB,EAAhD,GAA0EJ,YAAY,CAACG,OAAD,CAAhG;;;IAEA,KAAyB,wBAAM,CAACE,IAAP,CAAYF,OAAO,CAACG,OAApB,IAA4BC,cAArD,EAAqD,QAArD,EAAqDA,cAArD,EAAuD;MAAlD,IAAMC,UAAU,WAAhB;;MACH,IAAIP,iBAAiB,CAACQ,OAAlB,CAA0BD,UAAU,CAACE,WAAX,EAA1B,IAAsD,CAAC,CAA3D,EAA8D;QAC5D,OAAOP,OAAO,CAACG,OAAR,CAAgBE,UAAhB,CAAP;MACD;IACF;;;;;;;;;;;;;EAED,OAAOL,OAAP;AACD","names":["cloneRequest","GENERATED_HEADERS","prepareRequest","request","clone","keys","headers","_c","headerName","indexOf","toLowerCase"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-sdk\\signature-v4\\src\\prepareRequest.ts"],"sourcesContent":["import { HttpRequest } from \"@aws-sdk/types\";\n\nimport { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\n\n/**\n * @internal\n */\nexport function prepareRequest(request: HttpRequest): HttpRequest {\n  // Create a clone of the request object that does not clone the body\n  request = typeof (request as any).clone === \"function\" ? (request as any).clone() : cloneRequest(request);\n\n  for (const headerName of Object.keys(request.headers)) {\n    if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n      delete request.headers[headerName];\n    }\n  }\n\n  return request;\n}\n"]},"metadata":{},"sourceType":"module"}