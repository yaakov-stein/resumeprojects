{"ast":null,"code":"import { buildQueryString } from \"@aws-sdk/querystring-builder\";\nexport function formatUrl(request) {\n  var port = request.port,\n      query = request.query;\n  var protocol = request.protocol,\n      path = request.path,\n      hostname = request.hostname;\n\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n\n  if (port) {\n    hostname += \":\" + port;\n  }\n\n  if (path && path.charAt(0) !== \"/\") {\n    path = \"/\" + path;\n  }\n\n  var queryString = query ? buildQueryString(query) : \"\";\n\n  if (queryString && queryString[0] !== \"?\") {\n    queryString = \"?\" + queryString;\n  }\n\n  return protocol + \"//\" + hostname + path + queryString;\n}","map":{"version":3,"mappings":"AAAA,SAASA,gBAAT,QAAiC,8BAAjC;AAGA,OAAM,SAAUC,SAAV,CAAoBC,OAApB,EAAoE;EAChE,QAAI,GAAYA,OAAO,KAAvB;EAAA,IAAMC,KAAK,GAAKD,OAAO,MAAvB;EACF,YAAQ,GAAqBA,OAAO,SAApC;EAAA,IAAUE,IAAI,GAAeF,OAAO,KAApC;EAAA,IAAgBG,QAAQ,GAAKH,OAAO,SAApC;;EACN,IAAII,QAAQ,IAAIA,QAAQ,CAACC,MAAT,CAAgB,CAAC,CAAjB,MAAwB,GAAxC,EAA6C;IAC3CD,QAAQ,IAAI,GAAZ;EACD;;EACD,IAAIE,IAAJ,EAAU;IACRH,QAAQ,IAAI,MAAIG,IAAhB;EACD;;EACD,IAAIJ,IAAI,IAAIA,IAAI,CAACK,MAAL,CAAY,CAAZ,MAAmB,GAA/B,EAAoC;IAClCL,IAAI,GAAG,MAAIA,IAAX;EACD;;EACD,IAAIM,WAAW,GAAGP,KAAK,GAAGH,gBAAgB,CAACG,KAAD,CAAnB,GAA6B,EAApD;;EACA,IAAIO,WAAW,IAAIA,WAAW,CAAC,CAAD,CAAX,KAAmB,GAAtC,EAA2C;IACzCA,WAAW,GAAG,MAAIA,WAAlB;EACD;;EACD,OAAUJ,QAAQ,OAAR,GAAaD,QAAb,GAAwBD,IAAxB,GAA+BM,WAAzC;AACD","names":["buildQueryString","formatUrl","request","query","path","hostname","protocol","substr","port","charAt","queryString"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-sdk\\util-format-url\\src\\index.ts"],"sourcesContent":["import { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { HttpRequest } from \"@aws-sdk/types\";\n\nexport function formatUrl(request: Omit<HttpRequest, \"headers\" | \"method\">): string {\n  const { port, query } = request;\n  let { protocol, path, hostname } = request;\n  if (protocol && protocol.substr(-1) !== \":\") {\n    protocol += \":\";\n  }\n  if (port) {\n    hostname += `:${port}`;\n  }\n  if (path && path.charAt(0) !== \"/\") {\n    path = `/${path}`;\n  }\n  let queryString = query ? buildQueryString(query) : \"\";\n  if (queryString && queryString[0] !== \"?\") {\n    queryString = `?${queryString}`;\n  }\n  return `${protocol}//${hostname}${path}${queryString}`;\n}\n"]},"metadata":{},"sourceType":"module"}