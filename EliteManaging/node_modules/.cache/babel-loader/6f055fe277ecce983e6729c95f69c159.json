{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { PutEventsRequest } from \"../models/models_0\";\nimport { deserializeAws_restJson1PutEventsCommand, serializeAws_restJson1PutEventsCommand } from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\n/**\n * <p>Records user interaction event data. For more information see <a>event-record-api</a>.</p>\n */\n\nvar PutEventsCommand =\n/** @class */\nfunction (_super) {\n  __extends(PutEventsCommand, _super); // Start section: command_properties\n  // End section: command_properties\n\n\n  function PutEventsCommand(input) {\n    var _this = // Start section: command_constructor\n    _super.call(this) || this;\n\n    _this.input = input;\n    return _this; // End section: command_constructor\n  }\n  /**\n   * @internal\n   */\n\n\n  PutEventsCommand.prototype.resolveMiddleware = function (clientStack, configuration, options) {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n    var stack = clientStack.concat(this.middlewareStack);\n    var logger = configuration.logger;\n    var clientName = \"PersonalizeEventsClient\";\n    var commandName = \"PutEventsCommand\";\n    var handlerExecutionContext = {\n      logger: logger,\n      clientName: clientName,\n      commandName: commandName,\n      inputFilterSensitiveLog: PutEventsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: function (output) {\n        return output;\n      }\n    };\n    var requestHandler = configuration.requestHandler;\n    return stack.resolve(function (request) {\n      return requestHandler.handle(request.request, options || {});\n    }, handlerExecutionContext);\n  };\n\n  PutEventsCommand.prototype.serialize = function (input, context) {\n    return serializeAws_restJson1PutEventsCommand(input, context);\n  };\n\n  PutEventsCommand.prototype.deserialize = function (output, context) {\n    return deserializeAws_restJson1PutEventsCommand(output, context);\n  };\n\n  return PutEventsCommand;\n}($Command);\n\nexport { PutEventsCommand };","map":{"version":3,"mappings":";AAKA,SAASA,gBAAT,QAAiC,oBAAjC;AACA,SACEC,wCADF,EAEEC,sCAFF,QAGO,4BAHP;AAIA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,SAASC,OAAO,IAAIC,QAApB,QAAoC,wBAApC;AAcA;;;;AAGA;AAAA;AAAA;EAAsCC,oCAAtC,CAKE;EACA;;;EAEA,0BAAqBC,KAArB,EAAiD;IAAjD,YACE;IACAC,qBAAO,IAFT;;IAAqBC;iBAA4B,CAG/C;EACD;EAED;;;;;EAGAC,yDACEC,WADF,EAEEC,aAFF,EAGEC,OAHF,EAGgC;IAE9B,KAAKC,eAAL,CAAqBC,GAArB,CAAyBZ,cAAc,CAACS,aAAD,EAAgB,KAAKI,SAArB,EAAgC,KAAKC,WAArC,CAAvC;IAEA,IAAMC,KAAK,GAAGP,WAAW,CAACQ,MAAZ,CAAmB,KAAKL,eAAxB,CAAd;IAEQ,UAAM,GAAKF,aAAa,OAAxB;IACR,IAAMQ,UAAU,GAAG,yBAAnB;IACA,IAAMC,WAAW,GAAG,kBAApB;IACA,IAAMC,uBAAuB,GAA4B;MACvDC,MAAM,QADiD;MAEvDH,UAAU,YAF6C;MAGvDC,WAAW,aAH4C;MAIvDG,uBAAuB,EAAExB,gBAAgB,CAACyB,kBAJa;MAKvDC,wBAAwB,EAAE,UAACC,MAAD,EAAY;QAAK;MAAM;IALM,CAAzD;IAOQ,kBAAc,GAAKf,aAAa,eAAhC;IACR,OAAOM,KAAK,CAACU,OAAN,CACL,UAACC,OAAD,EAAuC;MACrC,qBAAc,CAACC,MAAf,CAAsBD,OAAO,CAACA,OAA9B,EAAwDhB,OAAO,IAAI,EAAnE;IAAsE,CAFnE,EAGLS,uBAHK,CAAP;EAKD,CAzBD;;EA2BQZ,uCAAR,UAAkBH,KAAlB,EAAgDwB,OAAhD,EAAuE;IACrE,OAAO7B,sCAAsC,CAACK,KAAD,EAAQwB,OAAR,CAA7C;EACD,CAFO;;EAIArB,yCAAR,UAAoBiB,MAApB,EAA4CI,OAA5C,EAAmE;IACjE,OAAO9B,wCAAwC,CAAC0B,MAAD,EAASI,OAAT,CAA/C;EACD,CAFO;;EAMV;AAAC,CAtDD,CAAsC1B,QAAtC","names":["PutEventsRequest","deserializeAws_restJson1PutEventsCommand","serializeAws_restJson1PutEventsCommand","getSerdePlugin","Command","$Command","__extends","input","_super","_this","PutEventsCommand","clientStack","configuration","options","middlewareStack","use","serialize","deserialize","stack","concat","clientName","commandName","handlerExecutionContext","logger","inputFilterSensitiveLog","filterSensitiveLog","outputFilterSensitiveLog","output","resolve","request","handle","context"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\Freshman_2021-2022\\Summer_2022\\COM4570H\\newcrm\\new-crm\\node_modules\\@aws-sdk\\client-personalize-events\\commands\\PutEventsCommand.ts"],"sourcesContent":["import {\n  PersonalizeEventsClientResolvedConfig,\n  ServiceInputTypes,\n  ServiceOutputTypes,\n} from \"../PersonalizeEventsClient\";\nimport { PutEventsRequest } from \"../models/models_0\";\nimport {\n  deserializeAws_restJson1PutEventsCommand,\n  serializeAws_restJson1PutEventsCommand,\n} from \"../protocols/Aws_restJson1\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport {\n  FinalizeHandlerArguments,\n  Handler,\n  HandlerExecutionContext,\n  MiddlewareStack,\n  HttpHandlerOptions as __HttpHandlerOptions,\n  MetadataBearer as __MetadataBearer,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\n\nexport type PutEventsCommandInput = PutEventsRequest;\nexport type PutEventsCommandOutput = __MetadataBearer;\n\n/**\n * <p>Records user interaction event data. For more information see <a>event-record-api</a>.</p>\n */\nexport class PutEventsCommand extends $Command<\n  PutEventsCommandInput,\n  PutEventsCommandOutput,\n  PersonalizeEventsClientResolvedConfig\n> {\n  // Start section: command_properties\n  // End section: command_properties\n\n  constructor(readonly input: PutEventsCommandInput) {\n    // Start section: command_constructor\n    super();\n    // End section: command_constructor\n  }\n\n  /**\n   * @internal\n   */\n  resolveMiddleware(\n    clientStack: MiddlewareStack<ServiceInputTypes, ServiceOutputTypes>,\n    configuration: PersonalizeEventsClientResolvedConfig,\n    options?: __HttpHandlerOptions\n  ): Handler<PutEventsCommandInput, PutEventsCommandOutput> {\n    this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n\n    const stack = clientStack.concat(this.middlewareStack);\n\n    const { logger } = configuration;\n    const clientName = \"PersonalizeEventsClient\";\n    const commandName = \"PutEventsCommand\";\n    const handlerExecutionContext: HandlerExecutionContext = {\n      logger,\n      clientName,\n      commandName,\n      inputFilterSensitiveLog: PutEventsRequest.filterSensitiveLog,\n      outputFilterSensitiveLog: (output: any) => output,\n    };\n    const { requestHandler } = configuration;\n    return stack.resolve(\n      (request: FinalizeHandlerArguments<any>) =>\n        requestHandler.handle(request.request as __HttpRequest, options || {}),\n      handlerExecutionContext\n    );\n  }\n\n  private serialize(input: PutEventsCommandInput, context: __SerdeContext): Promise<__HttpRequest> {\n    return serializeAws_restJson1PutEventsCommand(input, context);\n  }\n\n  private deserialize(output: __HttpResponse, context: __SerdeContext): Promise<PutEventsCommandOutput> {\n    return deserializeAws_restJson1PutEventsCommand(output, context);\n  }\n\n  // Start section: command_body_extra\n  // End section: command_body_extra\n}\n"]},"metadata":{},"sourceType":"module"}