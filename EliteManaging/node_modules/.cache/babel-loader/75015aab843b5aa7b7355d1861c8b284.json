{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\nexport var serializeAws_json1_1CreateParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.CreateParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1CreateParallelDataRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteParallelDataRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DeleteTerminologyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteTerminology\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DeleteTerminologyRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1DescribeTextTranslationJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.DescribeTextTranslationJob\"\n      };\n      body = JSON.stringify(serializeAws_json1_1DescribeTextTranslationJobRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.GetParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetParallelDataRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1GetTerminologyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.GetTerminology\"\n      };\n      body = JSON.stringify(serializeAws_json1_1GetTerminologyRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ImportTerminologyCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ImportTerminology\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ImportTerminologyRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ListParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListParallelDataRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTerminologiesCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTerminologies\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTerminologiesRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1ListTextTranslationJobsCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTextTranslationJobs\"\n      };\n      body = JSON.stringify(serializeAws_json1_1ListTextTranslationJobsRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StartTextTranslationJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.StartTextTranslationJob\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StartTextTranslationJobRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1StopTextTranslationJobCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.StopTextTranslationJob\"\n      };\n      body = JSON.stringify(serializeAws_json1_1StopTextTranslationJobRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1TranslateTextCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.TranslateText\"\n      };\n      body = JSON.stringify(serializeAws_json1_1TranslateTextRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var serializeAws_json1_1UpdateParallelDataCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var headers, body;\n    return __generator(this, function (_a) {\n      headers = {\n        \"content-type\": \"application/x-amz-json-1.1\",\n        \"x-amz-target\": \"AWSShineFrontendService_20170701.UpdateParallelData\"\n      };\n      body = JSON.stringify(serializeAws_json1_1UpdateParallelDataRequest(input, context));\n      return [2\n      /*return*/\n      , buildHttpRpcRequest(context, headers, \"/\", undefined, body)];\n    });\n  });\n};\nexport var deserializeAws_json1_1CreateParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1CreateParallelDataCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1CreateParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1CreateParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, parsedBody, message;\n\n    var _j;\n\n    return __generator(this, function (_k) {\n      switch (_k.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _j = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_j.body = _k.sent(), _j)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#ConflictException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"InvalidRequestException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.translate#LimitExceededException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 12];\n          }\n\n          return [3\n          /*break*/\n          , 14];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_k.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 15];\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _k.label = 15;\n\n        case 15:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteParallelDataCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DeleteParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ConcurrentModificationException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#ConcurrentModificationException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DeleteTerminologyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DeleteTerminologyCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , collectBody(output.body, context)];\n\n        case 1:\n          _a.sent();\n\n          response = {\n            $metadata: deserializeMetadata(output)\n          };\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DeleteTerminologyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1DescribeTextTranslationJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1DescribeTextTranslationJobCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1DescribeTextTranslationJobResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1DescribeTextTranslationJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetParallelDataCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1GetTerminologyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1GetTerminologyCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1GetTerminologyResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1GetTerminologyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ImportTerminologyCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ImportTerminologyCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ImportTerminologyResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ImportTerminologyCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#LimitExceededException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListParallelDataCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListTerminologiesCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListTerminologiesCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTerminologiesResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListTerminologiesCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1ListTextTranslationJobsCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1ListTextTranslationJobsCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1ListTextTranslationJobsResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ListTextTranslationJobsCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, parsedBody, message;\n\n    var _g;\n\n    return __generator(this, function (_h) {\n      switch (_h.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _g = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_g.body = _h.sent(), _g)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidFilterException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#InvalidFilterException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InvalidRequestException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n          }\n\n          return [3\n          /*break*/\n          , 10];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidFilterExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_h.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 11];\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _h.label = 11;\n\n        case 11:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1StartTextTranslationJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StartTextTranslationJobCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1StartTextTranslationJobResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1StartTextTranslationJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, parsedBody, message;\n\n    var _h;\n\n    return __generator(this, function (_j) {\n      switch (_j.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _h = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_h.body = _j.sent(), _h)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InvalidRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"UnsupportedLanguagePairException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n              return [3\n              /*break*/\n              , 10];\n          }\n\n          return [3\n          /*break*/\n          , 12];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_j.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 13];\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _j.label = 13;\n\n        case 13:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1StopTextTranslationJobCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1StopTextTranslationJobCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1StopTextTranslationJobResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1StopTextTranslationJobCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, parsedBody, message;\n\n    var _f;\n\n    return __generator(this, function (_g) {\n      switch (_g.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _f = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_f.body = _g.sent(), _f)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 6];\n          }\n\n          return [3\n          /*break*/\n          , 8];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_g.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 9];\n\n        case 8:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _g.label = 9;\n\n        case 9:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1TranslateTextCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1TranslateTextCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1TranslateTextResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1TranslateTextCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"DetectedLanguageLowConfidenceException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#DetectedLanguageLowConfidenceException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InvalidRequestException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.translate#ServiceUnavailableException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"TextSizeLimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.translate#TextSizeLimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"UnsupportedLanguagePairException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n              return [3\n              /*break*/\n              , 16];\n          }\n\n          return [3\n          /*break*/\n          , 18];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TextSizeLimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nexport var deserializeAws_json1_1UpdateParallelDataCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var data, contents, response;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          if (output.statusCode >= 300) {\n            return [2\n            /*return*/\n            , deserializeAws_json1_1UpdateParallelDataCommandError(output, context)];\n          }\n\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = {};\n          contents = deserializeAws_json1_1UpdateParallelDataResponse(data, context);\n          response = __assign({\n            $metadata: deserializeMetadata(output)\n          }, contents);\n          return [2\n          /*return*/\n          , Promise.resolve(response)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1UpdateParallelDataCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, _c, _d, _e, _f, _g, _h, _j, _k, parsedBody, message;\n\n    var _l;\n\n    return __generator(this, function (_m) {\n      switch (_m.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _l = {};\n          return [4\n          /*yield*/\n          , parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_l.body = _m.sent(), _l)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"ConcurrentModificationException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"com.amazonaws.translate#ConcurrentModificationException\":\n              return [3\n              /*break*/\n              , 2];\n\n            case \"ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"com.amazonaws.translate#ConflictException\":\n              return [3\n              /*break*/\n              , 4];\n\n            case \"InternalServerException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"com.amazonaws.translate#InternalServerException\":\n              return [3\n              /*break*/\n              , 6];\n\n            case \"InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"com.amazonaws.translate#InvalidParameterValueException\":\n              return [3\n              /*break*/\n              , 8];\n\n            case \"InvalidRequestException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"com.amazonaws.translate#InvalidRequestException\":\n              return [3\n              /*break*/\n              , 10];\n\n            case \"LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"com.amazonaws.translate#LimitExceededException\":\n              return [3\n              /*break*/\n              , 12];\n\n            case \"ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"com.amazonaws.translate#ResourceNotFoundException\":\n              return [3\n              /*break*/\n              , 14];\n\n            case \"TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 16];\n\n            case \"com.amazonaws.translate#TooManyRequestsException\":\n              return [3\n              /*break*/\n              , 16];\n          }\n\n          return [3\n          /*break*/\n          , 18];\n\n        case 2:\n          _c = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _c.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 4:\n          _d = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _d.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 6:\n          _e = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _e.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 8:\n          _f = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _f.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 10:\n          _g = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _g.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 12:\n          _h = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _h.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 14:\n          _j = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _j.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 16:\n          _k = [{}];\n          return [4\n          /*yield*/\n          , deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          response = __assign.apply(void 0, [__assign.apply(void 0, _k.concat([_m.sent()])), {\n            name: errorCode,\n            $metadata: deserializeMetadata(output)\n          }]);\n          return [3\n          /*break*/\n          , 19];\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          errorCode = parsedBody.code || parsedBody.Code || errorCode;\n          response = __assign(__assign({}, parsedBody), {\n            name: \"\" + errorCode,\n            message: parsedBody.message || parsedBody.Message || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          _m.label = 19;\n\n        case 19:\n          message = response.message || response.Message || errorCode;\n          response.message = message;\n          delete response.Message;\n          return [2\n          /*return*/\n          , Promise.reject(Object.assign(new Error(message), response))];\n      }\n    });\n  });\n};\n\nvar deserializeAws_json1_1ConcurrentModificationExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ConcurrentModificationException(body, context);\n      contents = __assign({\n        name: \"ConcurrentModificationException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ConflictExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ConflictException(body, context);\n      contents = __assign({\n        name: \"ConflictException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1DetectedLanguageLowConfidenceException(body, context);\n      contents = __assign({\n        name: \"DetectedLanguageLowConfidenceException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InternalServerExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InternalServerException(body, context);\n      contents = __assign({\n        name: \"InternalServerException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidFilterExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidFilterException(body, context);\n      contents = __assign({\n        name: \"InvalidFilterException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidParameterValueExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidParameterValueException(body, context);\n      contents = __assign({\n        name: \"InvalidParameterValueException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1InvalidRequestExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1InvalidRequestException(body, context);\n      contents = __assign({\n        name: \"InvalidRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1LimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1LimitExceededException(body, context);\n      contents = __assign({\n        name: \"LimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ResourceNotFoundException(body, context);\n      contents = __assign({\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1ServiceUnavailableExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1ServiceUnavailableException(body, context);\n      contents = __assign({\n        name: \"ServiceUnavailableException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1TextSizeLimitExceededExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1TextSizeLimitExceededException(body, context);\n      contents = __assign({\n        name: \"TextSizeLimitExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1TooManyRequestsExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1TooManyRequestsException(body, context);\n      contents = __assign({\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var body, deserialized, contents;\n    return __generator(this, function (_a) {\n      body = parsedOutput.body;\n      deserialized = deserializeAws_json1_1UnsupportedLanguagePairException(body, context);\n      contents = __assign({\n        name: \"UnsupportedLanguagePairException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput)\n      }, deserialized);\n      return [2\n      /*return*/\n      , contents];\n    });\n  });\n};\n\nvar serializeAws_json1_1CreateParallelDataRequest = function (input, context) {\n  var _a;\n\n  return __assign(__assign(__assign(__assign({\n    ClientToken: (_a = input.ClientToken) !== null && _a !== void 0 ? _a : generateIdempotencyToken()\n  }, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EncryptionKey !== undefined && input.EncryptionKey !== null && {\n    EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context)\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.ParallelDataConfig !== undefined && input.ParallelDataConfig !== null && {\n    ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context)\n  });\n};\n\nvar serializeAws_json1_1DeleteParallelDataRequest = function (input, context) {\n  return __assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  });\n};\n\nvar serializeAws_json1_1DeleteTerminologyRequest = function (input, context) {\n  return __assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  });\n};\n\nvar serializeAws_json1_1DescribeTextTranslationJobRequest = function (input, context) {\n  return __assign({}, input.JobId !== undefined && input.JobId !== null && {\n    JobId: input.JobId\n  });\n};\n\nvar serializeAws_json1_1EncryptionKey = function (input, context) {\n  return __assign(__assign({}, input.Id !== undefined && input.Id !== null && {\n    Id: input.Id\n  }), input.Type !== undefined && input.Type !== null && {\n    Type: input.Type\n  });\n};\n\nvar serializeAws_json1_1GetParallelDataRequest = function (input, context) {\n  return __assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  });\n};\n\nvar serializeAws_json1_1GetTerminologyRequest = function (input, context) {\n  return __assign(__assign({}, input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.TerminologyDataFormat !== undefined && input.TerminologyDataFormat !== null && {\n    TerminologyDataFormat: input.TerminologyDataFormat\n  });\n};\n\nvar serializeAws_json1_1ImportTerminologyRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign({}, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.EncryptionKey !== undefined && input.EncryptionKey !== null && {\n    EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context)\n  }), input.MergeStrategy !== undefined && input.MergeStrategy !== null && {\n    MergeStrategy: input.MergeStrategy\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.TerminologyData !== undefined && input.TerminologyData !== null && {\n    TerminologyData: serializeAws_json1_1TerminologyData(input.TerminologyData, context)\n  });\n};\n\nvar serializeAws_json1_1InputDataConfig = function (input, context) {\n  return __assign(__assign({}, input.ContentType !== undefined && input.ContentType !== null && {\n    ContentType: input.ContentType\n  }), input.S3Uri !== undefined && input.S3Uri !== null && {\n    S3Uri: input.S3Uri\n  });\n};\n\nvar serializeAws_json1_1ListParallelDataRequest = function (input, context) {\n  return __assign(__assign({}, input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  });\n};\n\nvar serializeAws_json1_1ListTerminologiesRequest = function (input, context) {\n  return __assign(__assign({}, input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  });\n};\n\nvar serializeAws_json1_1ListTextTranslationJobsRequest = function (input, context) {\n  return __assign(__assign(__assign({}, input.Filter !== undefined && input.Filter !== null && {\n    Filter: serializeAws_json1_1TextTranslationJobFilter(input.Filter, context)\n  }), input.MaxResults !== undefined && input.MaxResults !== null && {\n    MaxResults: input.MaxResults\n  }), input.NextToken !== undefined && input.NextToken !== null && {\n    NextToken: input.NextToken\n  });\n};\n\nvar serializeAws_json1_1OutputDataConfig = function (input, context) {\n  return __assign({}, input.S3Uri !== undefined && input.S3Uri !== null && {\n    S3Uri: input.S3Uri\n  });\n};\n\nvar serializeAws_json1_1ParallelDataConfig = function (input, context) {\n  return __assign(__assign({}, input.Format !== undefined && input.Format !== null && {\n    Format: input.Format\n  }), input.S3Uri !== undefined && input.S3Uri !== null && {\n    S3Uri: input.S3Uri\n  });\n};\n\nvar serializeAws_json1_1ResourceNameList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1StartTextTranslationJobRequest = function (input, context) {\n  var _a;\n\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign(__assign({\n    ClientToken: (_a = input.ClientToken) !== null && _a !== void 0 ? _a : generateIdempotencyToken()\n  }, input.DataAccessRoleArn !== undefined && input.DataAccessRoleArn !== null && {\n    DataAccessRoleArn: input.DataAccessRoleArn\n  }), input.InputDataConfig !== undefined && input.InputDataConfig !== null && {\n    InputDataConfig: serializeAws_json1_1InputDataConfig(input.InputDataConfig, context)\n  }), input.JobName !== undefined && input.JobName !== null && {\n    JobName: input.JobName\n  }), input.OutputDataConfig !== undefined && input.OutputDataConfig !== null && {\n    OutputDataConfig: serializeAws_json1_1OutputDataConfig(input.OutputDataConfig, context)\n  }), input.ParallelDataNames !== undefined && input.ParallelDataNames !== null && {\n    ParallelDataNames: serializeAws_json1_1ResourceNameList(input.ParallelDataNames, context)\n  }), input.SourceLanguageCode !== undefined && input.SourceLanguageCode !== null && {\n    SourceLanguageCode: input.SourceLanguageCode\n  }), input.TargetLanguageCodes !== undefined && input.TargetLanguageCodes !== null && {\n    TargetLanguageCodes: serializeAws_json1_1TargetLanguageCodeStringList(input.TargetLanguageCodes, context)\n  }), input.TerminologyNames !== undefined && input.TerminologyNames !== null && {\n    TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context)\n  });\n};\n\nvar serializeAws_json1_1StopTextTranslationJobRequest = function (input, context) {\n  return __assign({}, input.JobId !== undefined && input.JobId !== null && {\n    JobId: input.JobId\n  });\n};\n\nvar serializeAws_json1_1TargetLanguageCodeStringList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_json1_1TerminologyData = function (input, context) {\n  return __assign(__assign({}, input.File !== undefined && input.File !== null && {\n    File: context.base64Encoder(input.File)\n  }), input.Format !== undefined && input.Format !== null && {\n    Format: input.Format\n  });\n};\n\nvar serializeAws_json1_1TextTranslationJobFilter = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.JobName !== undefined && input.JobName !== null && {\n    JobName: input.JobName\n  }), input.JobStatus !== undefined && input.JobStatus !== null && {\n    JobStatus: input.JobStatus\n  }), input.SubmittedAfterTime !== undefined && input.SubmittedAfterTime !== null && {\n    SubmittedAfterTime: Math.round(input.SubmittedAfterTime.getTime() / 1000)\n  }), input.SubmittedBeforeTime !== undefined && input.SubmittedBeforeTime !== null && {\n    SubmittedBeforeTime: Math.round(input.SubmittedBeforeTime.getTime() / 1000)\n  });\n};\n\nvar serializeAws_json1_1TranslateTextRequest = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.SourceLanguageCode !== undefined && input.SourceLanguageCode !== null && {\n    SourceLanguageCode: input.SourceLanguageCode\n  }), input.TargetLanguageCode !== undefined && input.TargetLanguageCode !== null && {\n    TargetLanguageCode: input.TargetLanguageCode\n  }), input.TerminologyNames !== undefined && input.TerminologyNames !== null && {\n    TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context)\n  }), input.Text !== undefined && input.Text !== null && {\n    Text: input.Text\n  });\n};\n\nvar serializeAws_json1_1UpdateParallelDataRequest = function (input, context) {\n  var _a;\n\n  return __assign(__assign(__assign({\n    ClientToken: (_a = input.ClientToken) !== null && _a !== void 0 ? _a : generateIdempotencyToken()\n  }, input.Description !== undefined && input.Description !== null && {\n    Description: input.Description\n  }), input.Name !== undefined && input.Name !== null && {\n    Name: input.Name\n  }), input.ParallelDataConfig !== undefined && input.ParallelDataConfig !== null && {\n    ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context)\n  });\n};\n\nvar deserializeAws_json1_1AppliedTerminology = function (output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Terms: output.Terms !== undefined && output.Terms !== null ? deserializeAws_json1_1TermList(output.Terms, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1AppliedTerminologyList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1AppliedTerminology(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1ConcurrentModificationException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ConflictException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1CreateParallelDataResponse = function (output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined\n  };\n};\n\nvar deserializeAws_json1_1DeleteParallelDataResponse = function (output, context) {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined\n  };\n};\n\nvar deserializeAws_json1_1DescribeTextTranslationJobResponse = function (output, context) {\n  return {\n    TextTranslationJobProperties: output.TextTranslationJobProperties !== undefined && output.TextTranslationJobProperties !== null ? deserializeAws_json1_1TextTranslationJobProperties(output.TextTranslationJobProperties, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1DetectedLanguageLowConfidenceException = function (output, context) {\n  return {\n    DetectedLanguageCode: output.DetectedLanguageCode !== undefined && output.DetectedLanguageCode !== null ? output.DetectedLanguageCode : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1EncryptionKey = function (output, context) {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetParallelDataResponse = function (output, context) {\n  return {\n    AuxiliaryDataLocation: output.AuxiliaryDataLocation !== undefined && output.AuxiliaryDataLocation !== null ? deserializeAws_json1_1ParallelDataDataLocation(output.AuxiliaryDataLocation, context) : undefined,\n    DataLocation: output.DataLocation !== undefined && output.DataLocation !== null ? deserializeAws_json1_1ParallelDataDataLocation(output.DataLocation, context) : undefined,\n    LatestUpdateAttemptAuxiliaryDataLocation: output.LatestUpdateAttemptAuxiliaryDataLocation !== undefined && output.LatestUpdateAttemptAuxiliaryDataLocation !== null ? deserializeAws_json1_1ParallelDataDataLocation(output.LatestUpdateAttemptAuxiliaryDataLocation, context) : undefined,\n    ParallelDataProperties: output.ParallelDataProperties !== undefined && output.ParallelDataProperties !== null ? deserializeAws_json1_1ParallelDataProperties(output.ParallelDataProperties, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1GetTerminologyResponse = function (output, context) {\n  return {\n    TerminologyDataLocation: output.TerminologyDataLocation !== undefined && output.TerminologyDataLocation !== null ? deserializeAws_json1_1TerminologyDataLocation(output.TerminologyDataLocation, context) : undefined,\n    TerminologyProperties: output.TerminologyProperties !== undefined && output.TerminologyProperties !== null ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1ImportTerminologyResponse = function (output, context) {\n  return {\n    TerminologyProperties: output.TerminologyProperties !== undefined && output.TerminologyProperties !== null ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1InputDataConfig = function (output, context) {\n  return {\n    ContentType: output.ContentType !== undefined && output.ContentType !== null ? output.ContentType : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined\n  };\n};\n\nvar deserializeAws_json1_1InternalServerException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidFilterException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidParameterValueException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1InvalidRequestException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1JobDetails = function (output, context) {\n  return {\n    DocumentsWithErrorsCount: output.DocumentsWithErrorsCount !== undefined && output.DocumentsWithErrorsCount !== null ? output.DocumentsWithErrorsCount : undefined,\n    InputDocumentsCount: output.InputDocumentsCount !== undefined && output.InputDocumentsCount !== null ? output.InputDocumentsCount : undefined,\n    TranslatedDocumentsCount: output.TranslatedDocumentsCount !== undefined && output.TranslatedDocumentsCount !== null ? output.TranslatedDocumentsCount : undefined\n  };\n};\n\nvar deserializeAws_json1_1LanguageCodeStringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1LimitExceededException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListParallelDataResponse = function (output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    ParallelDataPropertiesList: output.ParallelDataPropertiesList !== undefined && output.ParallelDataPropertiesList !== null ? deserializeAws_json1_1ParallelDataPropertiesList(output.ParallelDataPropertiesList, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListTerminologiesResponse = function (output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TerminologyPropertiesList: output.TerminologyPropertiesList !== undefined && output.TerminologyPropertiesList !== null ? deserializeAws_json1_1TerminologyPropertiesList(output.TerminologyPropertiesList, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1ListTextTranslationJobsResponse = function (output, context) {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TextTranslationJobPropertiesList: output.TextTranslationJobPropertiesList !== undefined && output.TextTranslationJobPropertiesList !== null ? deserializeAws_json1_1TextTranslationJobPropertiesList(output.TextTranslationJobPropertiesList, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1OutputDataConfig = function (output, context) {\n  return {\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined\n  };\n};\n\nvar deserializeAws_json1_1ParallelDataConfig = function (output, context) {\n  return {\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined\n  };\n};\n\nvar deserializeAws_json1_1ParallelDataDataLocation = function (output, context) {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType: output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined\n  };\n};\n\nvar deserializeAws_json1_1ParallelDataProperties = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt: output.CreatedAt !== undefined && output.CreatedAt !== null ? new Date(Math.round(output.CreatedAt * 1000)) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey: output.EncryptionKey !== undefined && output.EncryptionKey !== null ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context) : undefined,\n    FailedRecordCount: output.FailedRecordCount !== undefined && output.FailedRecordCount !== null ? output.FailedRecordCount : undefined,\n    ImportedDataSize: output.ImportedDataSize !== undefined && output.ImportedDataSize !== null ? output.ImportedDataSize : undefined,\n    ImportedRecordCount: output.ImportedRecordCount !== undefined && output.ImportedRecordCount !== null ? output.ImportedRecordCount : undefined,\n    LastUpdatedAt: output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null ? new Date(Math.round(output.LastUpdatedAt * 1000)) : undefined,\n    LatestUpdateAttemptAt: output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000)) : undefined,\n    LatestUpdateAttemptStatus: output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null ? output.LatestUpdateAttemptStatus : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    ParallelDataConfig: output.ParallelDataConfig !== undefined && output.ParallelDataConfig !== null ? deserializeAws_json1_1ParallelDataConfig(output.ParallelDataConfig, context) : undefined,\n    SkippedRecordCount: output.SkippedRecordCount !== undefined && output.SkippedRecordCount !== null ? output.SkippedRecordCount : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n    TargetLanguageCodes: output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1ParallelDataPropertiesList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1ParallelDataProperties(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1ResourceNameList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1ResourceNotFoundException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1ServiceUnavailableException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1StartTextTranslationJobResponse = function (output, context) {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined\n  };\n};\n\nvar deserializeAws_json1_1StopTextTranslationJobResponse = function (output, context) {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined\n  };\n};\n\nvar deserializeAws_json1_1TargetLanguageCodeStringList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar deserializeAws_json1_1Term = function (output, context) {\n  return {\n    SourceText: output.SourceText !== undefined && output.SourceText !== null ? output.SourceText : undefined,\n    TargetText: output.TargetText !== undefined && output.TargetText !== null ? output.TargetText : undefined\n  };\n};\n\nvar deserializeAws_json1_1TerminologyDataLocation = function (output, context) {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType: output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined\n  };\n};\n\nvar deserializeAws_json1_1TerminologyProperties = function (output, context) {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt: output.CreatedAt !== undefined && output.CreatedAt !== null ? new Date(Math.round(output.CreatedAt * 1000)) : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey: output.EncryptionKey !== undefined && output.EncryptionKey !== null ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context) : undefined,\n    LastUpdatedAt: output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null ? new Date(Math.round(output.LastUpdatedAt * 1000)) : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SizeBytes: output.SizeBytes !== undefined && output.SizeBytes !== null ? output.SizeBytes : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    TargetLanguageCodes: output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context) : undefined,\n    TermCount: output.TermCount !== undefined && output.TermCount !== null ? output.TermCount : undefined\n  };\n};\n\nvar deserializeAws_json1_1TerminologyPropertiesList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1TerminologyProperties(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1TermList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1Term(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1TextSizeLimitExceededException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1TextTranslationJobProperties = function (output, context) {\n  return {\n    DataAccessRoleArn: output.DataAccessRoleArn !== undefined && output.DataAccessRoleArn !== null ? output.DataAccessRoleArn : undefined,\n    EndTime: output.EndTime !== undefined && output.EndTime !== null ? new Date(Math.round(output.EndTime * 1000)) : undefined,\n    InputDataConfig: output.InputDataConfig !== undefined && output.InputDataConfig !== null ? deserializeAws_json1_1InputDataConfig(output.InputDataConfig, context) : undefined,\n    JobDetails: output.JobDetails !== undefined && output.JobDetails !== null ? deserializeAws_json1_1JobDetails(output.JobDetails, context) : undefined,\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobName: output.JobName !== undefined && output.JobName !== null ? output.JobName : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    OutputDataConfig: output.OutputDataConfig !== undefined && output.OutputDataConfig !== null ? deserializeAws_json1_1OutputDataConfig(output.OutputDataConfig, context) : undefined,\n    ParallelDataNames: output.ParallelDataNames !== undefined && output.ParallelDataNames !== null ? deserializeAws_json1_1ResourceNameList(output.ParallelDataNames, context) : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    SubmittedTime: output.SubmittedTime !== undefined && output.SubmittedTime !== null ? new Date(Math.round(output.SubmittedTime * 1000)) : undefined,\n    TargetLanguageCodes: output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null ? deserializeAws_json1_1TargetLanguageCodeStringList(output.TargetLanguageCodes, context) : undefined,\n    TerminologyNames: output.TerminologyNames !== undefined && output.TerminologyNames !== null ? deserializeAws_json1_1ResourceNameList(output.TerminologyNames, context) : undefined\n  };\n};\n\nvar deserializeAws_json1_1TextTranslationJobPropertiesList = function (output, context) {\n  return (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_json1_1TextTranslationJobProperties(entry, context);\n  });\n};\n\nvar deserializeAws_json1_1TooManyRequestsException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined\n  };\n};\n\nvar deserializeAws_json1_1TranslateTextResponse = function (output, context) {\n  return {\n    AppliedTerminologies: output.AppliedTerminologies !== undefined && output.AppliedTerminologies !== null ? deserializeAws_json1_1AppliedTerminologyList(output.AppliedTerminologies, context) : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    TargetLanguageCode: output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null ? output.TargetLanguageCode : undefined,\n    TranslatedText: output.TranslatedText !== undefined && output.TranslatedText !== null ? output.TranslatedText : undefined\n  };\n};\n\nvar deserializeAws_json1_1UnsupportedLanguagePairException = function (output, context) {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    SourceLanguageCode: output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null ? output.SourceLanguageCode : undefined,\n    TargetLanguageCode: output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null ? output.TargetLanguageCode : undefined\n  };\n};\n\nvar deserializeAws_json1_1UpdateParallelDataResponse = function (output, context) {\n  return {\n    LatestUpdateAttemptAt: output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000)) : undefined,\n    LatestUpdateAttemptStatus: output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null ? output.LatestUpdateAttemptStatus : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined\n  };\n};\n\nvar deserializeMetadata = function (output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n}; // Collect low-level response body stream to Uint8Array.\n\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n}; // Encode Uint8Array data into string with utf-8.\n\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar buildHttpRpcRequest = function (context, headers, path, resolvedHostname, body) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, contents;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4\n          /*yield*/\n          , context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port;\n          contents = {\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            path: path,\n            headers: headers\n          };\n\n          if (resolvedHostname !== undefined) {\n            contents.hostname = resolvedHostname;\n          }\n\n          if (body !== undefined) {\n            contents.body = body;\n          }\n\n          return [2\n          /*return*/\n          , new __HttpRequest(contents)];\n      }\n    });\n  });\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\n\n\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":{"version":3,"mappings":"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","names":["HttpRequest","__HttpRequest","v4","generateIdempotencyToken","serializeAws_json1_1CreateParallelDataCommand","input","context","headers","body","JSON","stringify","serializeAws_json1_1CreateParallelDataRequest","buildHttpRpcRequest","undefined","serializeAws_json1_1DeleteParallelDataCommand","serializeAws_json1_1DeleteParallelDataRequest","serializeAws_json1_1DeleteTerminologyCommand","serializeAws_json1_1DeleteTerminologyRequest","serializeAws_json1_1DescribeTextTranslationJobCommand","serializeAws_json1_1DescribeTextTranslationJobRequest","serializeAws_json1_1GetParallelDataCommand","serializeAws_json1_1GetParallelDataRequest","serializeAws_json1_1GetTerminologyCommand","serializeAws_json1_1GetTerminologyRequest","serializeAws_json1_1ImportTerminologyCommand","serializeAws_json1_1ImportTerminologyRequest","serializeAws_json1_1ListParallelDataCommand","serializeAws_json1_1ListParallelDataRequest","serializeAws_json1_1ListTerminologiesCommand","serializeAws_json1_1ListTerminologiesRequest","serializeAws_json1_1ListTextTranslationJobsCommand","serializeAws_json1_1ListTextTranslationJobsRequest","serializeAws_json1_1StartTextTranslationJobCommand","serializeAws_json1_1StartTextTranslationJobRequest","serializeAws_json1_1StopTextTranslationJobCommand","serializeAws_json1_1StopTextTranslationJobRequest","serializeAws_json1_1TranslateTextCommand","serializeAws_json1_1TranslateTextRequest","serializeAws_json1_1UpdateParallelDataCommand","serializeAws_json1_1UpdateParallelDataRequest","deserializeAws_json1_1CreateParallelDataCommand","output","statusCode","deserializeAws_json1_1CreateParallelDataCommandError","parseBody","data","_a","contents","deserializeAws_json1_1CreateParallelDataResponse","response","$metadata","deserializeMetadata","Promise","resolve","parsedOutput","_j","_k","errorCode","loadRestJsonErrorCode","_b","deserializeAws_json1_1ConflictExceptionResponse","name","deserializeAws_json1_1InternalServerExceptionResponse","deserializeAws_json1_1InvalidParameterValueExceptionResponse","deserializeAws_json1_1InvalidRequestExceptionResponse","deserializeAws_json1_1LimitExceededExceptionResponse","deserializeAws_json1_1TooManyRequestsExceptionResponse","parsedBody","code","Code","__assign","message","Message","$fault","reject","Object","assign","Error","deserializeAws_json1_1DeleteParallelDataCommand","deserializeAws_json1_1DeleteParallelDataCommandError","deserializeAws_json1_1DeleteParallelDataResponse","_g","_h","deserializeAws_json1_1ConcurrentModificationExceptionResponse","deserializeAws_json1_1ResourceNotFoundExceptionResponse","deserializeAws_json1_1DeleteTerminologyCommand","deserializeAws_json1_1DeleteTerminologyCommandError","collectBody","deserializeAws_json1_1DescribeTextTranslationJobCommand","deserializeAws_json1_1DescribeTextTranslationJobCommandError","deserializeAws_json1_1DescribeTextTranslationJobResponse","_f","deserializeAws_json1_1GetParallelDataCommand","deserializeAws_json1_1GetParallelDataCommandError","deserializeAws_json1_1GetParallelDataResponse","deserializeAws_json1_1GetTerminologyCommand","deserializeAws_json1_1GetTerminologyCommandError","deserializeAws_json1_1GetTerminologyResponse","deserializeAws_json1_1ImportTerminologyCommand","deserializeAws_json1_1ImportTerminologyCommandError","deserializeAws_json1_1ImportTerminologyResponse","deserializeAws_json1_1ListParallelDataCommand","deserializeAws_json1_1ListParallelDataCommandError","deserializeAws_json1_1ListParallelDataResponse","deserializeAws_json1_1ListTerminologiesCommand","deserializeAws_json1_1ListTerminologiesCommandError","deserializeAws_json1_1ListTerminologiesResponse","deserializeAws_json1_1ListTextTranslationJobsCommand","deserializeAws_json1_1ListTextTranslationJobsCommandError","deserializeAws_json1_1ListTextTranslationJobsResponse","deserializeAws_json1_1InvalidFilterExceptionResponse","deserializeAws_json1_1StartTextTranslationJobCommand","deserializeAws_json1_1StartTextTranslationJobCommandError","deserializeAws_json1_1StartTextTranslationJobResponse","deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse","deserializeAws_json1_1StopTextTranslationJobCommand","deserializeAws_json1_1StopTextTranslationJobCommandError","deserializeAws_json1_1StopTextTranslationJobResponse","deserializeAws_json1_1TranslateTextCommand","deserializeAws_json1_1TranslateTextCommandError","deserializeAws_json1_1TranslateTextResponse","_l","_m","deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse","deserializeAws_json1_1ServiceUnavailableExceptionResponse","deserializeAws_json1_1TextSizeLimitExceededExceptionResponse","deserializeAws_json1_1UpdateParallelDataCommand","deserializeAws_json1_1UpdateParallelDataCommandError","deserializeAws_json1_1UpdateParallelDataResponse","deserialized","deserializeAws_json1_1ConcurrentModificationException","deserializeAws_json1_1ConflictException","deserializeAws_json1_1DetectedLanguageLowConfidenceException","deserializeAws_json1_1InternalServerException","deserializeAws_json1_1InvalidFilterException","deserializeAws_json1_1InvalidParameterValueException","deserializeAws_json1_1InvalidRequestException","deserializeAws_json1_1LimitExceededException","deserializeAws_json1_1ResourceNotFoundException","deserializeAws_json1_1ServiceUnavailableException","deserializeAws_json1_1TextSizeLimitExceededException","deserializeAws_json1_1TooManyRequestsException","deserializeAws_json1_1UnsupportedLanguagePairException","ClientToken","Description","EncryptionKey","serializeAws_json1_1EncryptionKey","Name","ParallelDataConfig","serializeAws_json1_1ParallelDataConfig","JobId","Id","Type","TerminologyDataFormat","MergeStrategy","TerminologyData","serializeAws_json1_1TerminologyData","serializeAws_json1_1InputDataConfig","ContentType","S3Uri","MaxResults","NextToken","Filter","serializeAws_json1_1TextTranslationJobFilter","serializeAws_json1_1OutputDataConfig","Format","serializeAws_json1_1ResourceNameList","filter","e","map","entry","DataAccessRoleArn","InputDataConfig","JobName","OutputDataConfig","ParallelDataNames","SourceLanguageCode","TargetLanguageCodes","serializeAws_json1_1TargetLanguageCodeStringList","TerminologyNames","File","base64Encoder","JobStatus","SubmittedAfterTime","Math","round","getTime","SubmittedBeforeTime","TargetLanguageCode","Text","deserializeAws_json1_1AppliedTerminology","Terms","deserializeAws_json1_1TermList","deserializeAws_json1_1AppliedTerminologyList","Status","TextTranslationJobProperties","deserializeAws_json1_1TextTranslationJobProperties","DetectedLanguageCode","deserializeAws_json1_1EncryptionKey","AuxiliaryDataLocation","deserializeAws_json1_1ParallelDataDataLocation","DataLocation","LatestUpdateAttemptAuxiliaryDataLocation","ParallelDataProperties","deserializeAws_json1_1ParallelDataProperties","TerminologyDataLocation","deserializeAws_json1_1TerminologyDataLocation","TerminologyProperties","deserializeAws_json1_1TerminologyProperties","deserializeAws_json1_1InputDataConfig","deserializeAws_json1_1JobDetails","DocumentsWithErrorsCount","InputDocumentsCount","TranslatedDocumentsCount","deserializeAws_json1_1LanguageCodeStringList","ParallelDataPropertiesList","deserializeAws_json1_1ParallelDataPropertiesList","TerminologyPropertiesList","deserializeAws_json1_1TerminologyPropertiesList","TextTranslationJobPropertiesList","deserializeAws_json1_1TextTranslationJobPropertiesList","deserializeAws_json1_1OutputDataConfig","deserializeAws_json1_1ParallelDataConfig","Location","RepositoryType","Arn","CreatedAt","Date","FailedRecordCount","ImportedDataSize","ImportedRecordCount","LastUpdatedAt","LatestUpdateAttemptAt","LatestUpdateAttemptStatus","SkippedRecordCount","deserializeAws_json1_1ResourceNameList","deserializeAws_json1_1TargetLanguageCodeStringList","deserializeAws_json1_1Term","SourceText","TargetText","SizeBytes","TermCount","EndTime","JobDetails","SubmittedTime","AppliedTerminologies","TranslatedText","httpStatusCode","requestId","extendedRequestId","cfId","streamBody","Uint8Array","streamCollector","collectBodyString","then","utf8Encoder","path","resolvedHostname","endpoint","_c","hostname","protocol","port","method","encoded","length","parse","findKey","object","key","keys","find","k","toLowerCase","sanitizeErrorCode","rawValue","cleanValue","indexOf","split","headerKey"],"sources":["C:\\Users\\jacob\\OneDrive\\College\\github\\resumeprojectsrepo\\resumeprojects\\EliteManaging\\node_modules\\@aws-sdk\\client-translate\\protocols\\Aws_json1_1.ts"],"sourcesContent":["import { CreateParallelDataCommandInput, CreateParallelDataCommandOutput } from \"../commands/CreateParallelDataCommand\";\nimport { DeleteParallelDataCommandInput, DeleteParallelDataCommandOutput } from \"../commands/DeleteParallelDataCommand\";\nimport { DeleteTerminologyCommandInput, DeleteTerminologyCommandOutput } from \"../commands/DeleteTerminologyCommand\";\nimport {\n  DescribeTextTranslationJobCommandInput,\n  DescribeTextTranslationJobCommandOutput,\n} from \"../commands/DescribeTextTranslationJobCommand\";\nimport { GetParallelDataCommandInput, GetParallelDataCommandOutput } from \"../commands/GetParallelDataCommand\";\nimport { GetTerminologyCommandInput, GetTerminologyCommandOutput } from \"../commands/GetTerminologyCommand\";\nimport { ImportTerminologyCommandInput, ImportTerminologyCommandOutput } from \"../commands/ImportTerminologyCommand\";\nimport { ListParallelDataCommandInput, ListParallelDataCommandOutput } from \"../commands/ListParallelDataCommand\";\nimport { ListTerminologiesCommandInput, ListTerminologiesCommandOutput } from \"../commands/ListTerminologiesCommand\";\nimport {\n  ListTextTranslationJobsCommandInput,\n  ListTextTranslationJobsCommandOutput,\n} from \"../commands/ListTextTranslationJobsCommand\";\nimport {\n  StartTextTranslationJobCommandInput,\n  StartTextTranslationJobCommandOutput,\n} from \"../commands/StartTextTranslationJobCommand\";\nimport {\n  StopTextTranslationJobCommandInput,\n  StopTextTranslationJobCommandOutput,\n} from \"../commands/StopTextTranslationJobCommand\";\nimport { TranslateTextCommandInput, TranslateTextCommandOutput } from \"../commands/TranslateTextCommand\";\nimport { UpdateParallelDataCommandInput, UpdateParallelDataCommandOutput } from \"../commands/UpdateParallelDataCommand\";\nimport {\n  AppliedTerminology,\n  ConcurrentModificationException,\n  ConflictException,\n  CreateParallelDataRequest,\n  CreateParallelDataResponse,\n  DeleteParallelDataRequest,\n  DeleteParallelDataResponse,\n  DeleteTerminologyRequest,\n  DescribeTextTranslationJobRequest,\n  DescribeTextTranslationJobResponse,\n  DetectedLanguageLowConfidenceException,\n  EncryptionKey,\n  GetParallelDataRequest,\n  GetParallelDataResponse,\n  GetTerminologyRequest,\n  GetTerminologyResponse,\n  ImportTerminologyRequest,\n  ImportTerminologyResponse,\n  InputDataConfig,\n  InternalServerException,\n  InvalidFilterException,\n  InvalidParameterValueException,\n  InvalidRequestException,\n  JobDetails,\n  LimitExceededException,\n  ListParallelDataRequest,\n  ListParallelDataResponse,\n  ListTerminologiesRequest,\n  ListTerminologiesResponse,\n  ListTextTranslationJobsRequest,\n  ListTextTranslationJobsResponse,\n  OutputDataConfig,\n  ParallelDataConfig,\n  ParallelDataDataLocation,\n  ParallelDataProperties,\n  ResourceNotFoundException,\n  ServiceUnavailableException,\n  StartTextTranslationJobRequest,\n  StartTextTranslationJobResponse,\n  StopTextTranslationJobRequest,\n  StopTextTranslationJobResponse,\n  Term,\n  TerminologyData,\n  TerminologyDataLocation,\n  TerminologyProperties,\n  TextSizeLimitExceededException,\n  TextTranslationJobFilter,\n  TextTranslationJobProperties,\n  TooManyRequestsException,\n  TranslateTextRequest,\n  TranslateTextResponse,\n  UnsupportedLanguagePairException,\n  UpdateParallelDataRequest,\n  UpdateParallelDataResponse,\n} from \"../models/models_0\";\nimport { HttpRequest as __HttpRequest, HttpResponse as __HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { SmithyException as __SmithyException } from \"@aws-sdk/smithy-client\";\nimport {\n  Endpoint as __Endpoint,\n  HeaderBag as __HeaderBag,\n  MetadataBearer as __MetadataBearer,\n  ResponseMetadata as __ResponseMetadata,\n  SerdeContext as __SerdeContext,\n} from \"@aws-sdk/types\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\n\nexport const serializeAws_json1_1CreateParallelDataCommand = async (\n  input: CreateParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.CreateParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1CreateParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteParallelDataCommand = async (\n  input: DeleteParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DeleteTerminologyCommand = async (\n  input: DeleteTerminologyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.DeleteTerminology\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DeleteTerminologyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1DescribeTextTranslationJobCommand = async (\n  input: DescribeTextTranslationJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.DescribeTextTranslationJob\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1DescribeTextTranslationJobRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetParallelDataCommand = async (\n  input: GetParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.GetParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1GetTerminologyCommand = async (\n  input: GetTerminologyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.GetTerminology\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1GetTerminologyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ImportTerminologyCommand = async (\n  input: ImportTerminologyCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ImportTerminology\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ImportTerminologyRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListParallelDataCommand = async (\n  input: ListParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ListParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTerminologiesCommand = async (\n  input: ListTerminologiesCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTerminologies\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTerminologiesRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1ListTextTranslationJobsCommand = async (\n  input: ListTextTranslationJobsCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.ListTextTranslationJobs\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1ListTextTranslationJobsRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StartTextTranslationJobCommand = async (\n  input: StartTextTranslationJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.StartTextTranslationJob\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StartTextTranslationJobRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1StopTextTranslationJobCommand = async (\n  input: StopTextTranslationJobCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.StopTextTranslationJob\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1StopTextTranslationJobRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1TranslateTextCommand = async (\n  input: TranslateTextCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.TranslateText\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1TranslateTextRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const serializeAws_json1_1UpdateParallelDataCommand = async (\n  input: UpdateParallelDataCommandInput,\n  context: __SerdeContext\n): Promise<__HttpRequest> => {\n  const headers: __HeaderBag = {\n    \"content-type\": \"application/x-amz-json-1.1\",\n    \"x-amz-target\": \"AWSShineFrontendService_20170701.UpdateParallelData\",\n  };\n  let body: any;\n  body = JSON.stringify(serializeAws_json1_1UpdateParallelDataRequest(input, context));\n  return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\n\nexport const deserializeAws_json1_1CreateParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1CreateParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1CreateParallelDataResponse(data, context);\n  const response: CreateParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1CreateParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<CreateParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConflictException\":\n    case \"com.amazonaws.translate#ConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.translate#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DeleteParallelDataResponse(data, context);\n  const response: DeleteParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.translate#ConcurrentModificationException\":\n      response = {\n        ...(await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DeleteTerminologyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteTerminologyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DeleteTerminologyCommandError(output, context);\n  }\n  await collectBody(output.body, context);\n  const response: DeleteTerminologyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DeleteTerminologyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DeleteTerminologyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1DescribeTextTranslationJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeTextTranslationJobCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1DescribeTextTranslationJobCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1DescribeTextTranslationJobResponse(data, context);\n  const response: DescribeTextTranslationJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1DescribeTextTranslationJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<DescribeTextTranslationJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetParallelDataResponse(data, context);\n  const response: GetParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1GetTerminologyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetTerminologyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1GetTerminologyCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1GetTerminologyResponse(data, context);\n  const response: GetTerminologyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1GetTerminologyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<GetTerminologyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ImportTerminologyCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ImportTerminologyCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ImportTerminologyCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ImportTerminologyResponse(data, context);\n  const response: ImportTerminologyCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ImportTerminologyCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ImportTerminologyCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.translate#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListParallelDataResponse(data, context);\n  const response: ListParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTerminologiesCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTerminologiesCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTerminologiesCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTerminologiesResponse(data, context);\n  const response: ListTerminologiesCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTerminologiesCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTerminologiesCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1ListTextTranslationJobsCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTextTranslationJobsCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1ListTextTranslationJobsCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1ListTextTranslationJobsResponse(data, context);\n  const response: ListTextTranslationJobsCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1ListTextTranslationJobsCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<ListTextTranslationJobsCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidFilterException\":\n    case \"com.amazonaws.translate#InvalidFilterException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidFilterExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StartTextTranslationJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartTextTranslationJobCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StartTextTranslationJobCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StartTextTranslationJobResponse(data, context);\n  const response: StartTextTranslationJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StartTextTranslationJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StartTextTranslationJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnsupportedLanguagePairException\":\n    case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n      response = {\n        ...(await deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1StopTextTranslationJobCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopTextTranslationJobCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1StopTextTranslationJobCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1StopTextTranslationJobResponse(data, context);\n  const response: StopTextTranslationJobCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1StopTextTranslationJobCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<StopTextTranslationJobCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1TranslateTextCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TranslateTextCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1TranslateTextCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1TranslateTextResponse(data, context);\n  const response: TranslateTextCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1TranslateTextCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<TranslateTextCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"DetectedLanguageLowConfidenceException\":\n    case \"com.amazonaws.translate#DetectedLanguageLowConfidenceException\":\n      response = {\n        ...(await deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ServiceUnavailableException\":\n    case \"com.amazonaws.translate#ServiceUnavailableException\":\n      response = {\n        ...(await deserializeAws_json1_1ServiceUnavailableExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TextSizeLimitExceededException\":\n    case \"com.amazonaws.translate#TextSizeLimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1TextSizeLimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"UnsupportedLanguagePairException\":\n    case \"com.amazonaws.translate#UnsupportedLanguagePairException\":\n      response = {\n        ...(await deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nexport const deserializeAws_json1_1UpdateParallelDataCommand = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateParallelDataCommandOutput> => {\n  if (output.statusCode >= 300) {\n    return deserializeAws_json1_1UpdateParallelDataCommandError(output, context);\n  }\n  const data: any = await parseBody(output.body, context);\n  let contents: any = {};\n  contents = deserializeAws_json1_1UpdateParallelDataResponse(data, context);\n  const response: UpdateParallelDataCommandOutput = {\n    $metadata: deserializeMetadata(output),\n    ...contents,\n  };\n  return Promise.resolve(response);\n};\n\nconst deserializeAws_json1_1UpdateParallelDataCommandError = async (\n  output: __HttpResponse,\n  context: __SerdeContext\n): Promise<UpdateParallelDataCommandOutput> => {\n  const parsedOutput: any = {\n    ...output,\n    body: await parseBody(output.body, context),\n  };\n  let response: __SmithyException & __MetadataBearer & { [key: string]: any };\n  let errorCode: string = \"UnknownError\";\n  errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n  switch (errorCode) {\n    case \"ConcurrentModificationException\":\n    case \"com.amazonaws.translate#ConcurrentModificationException\":\n      response = {\n        ...(await deserializeAws_json1_1ConcurrentModificationExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ConflictException\":\n    case \"com.amazonaws.translate#ConflictException\":\n      response = {\n        ...(await deserializeAws_json1_1ConflictExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InternalServerException\":\n    case \"com.amazonaws.translate#InternalServerException\":\n      response = {\n        ...(await deserializeAws_json1_1InternalServerExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidParameterValueException\":\n    case \"com.amazonaws.translate#InvalidParameterValueException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"InvalidRequestException\":\n    case \"com.amazonaws.translate#InvalidRequestException\":\n      response = {\n        ...(await deserializeAws_json1_1InvalidRequestExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"LimitExceededException\":\n    case \"com.amazonaws.translate#LimitExceededException\":\n      response = {\n        ...(await deserializeAws_json1_1LimitExceededExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"ResourceNotFoundException\":\n    case \"com.amazonaws.translate#ResourceNotFoundException\":\n      response = {\n        ...(await deserializeAws_json1_1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    case \"TooManyRequestsException\":\n    case \"com.amazonaws.translate#TooManyRequestsException\":\n      response = {\n        ...(await deserializeAws_json1_1TooManyRequestsExceptionResponse(parsedOutput, context)),\n        name: errorCode,\n        $metadata: deserializeMetadata(output),\n      };\n      break;\n    default:\n      const parsedBody = parsedOutput.body;\n      errorCode = parsedBody.code || parsedBody.Code || errorCode;\n      response = {\n        ...parsedBody,\n        name: `${errorCode}`,\n        message: parsedBody.message || parsedBody.Message || errorCode,\n        $fault: \"client\",\n        $metadata: deserializeMetadata(output),\n      } as any;\n  }\n  const message = response.message || response.Message || errorCode;\n  response.message = message;\n  delete response.Message;\n  return Promise.reject(Object.assign(new Error(message), response));\n};\n\nconst deserializeAws_json1_1ConcurrentModificationExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConcurrentModificationException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ConcurrentModificationException(body, context);\n  const contents: ConcurrentModificationException = {\n    name: \"ConcurrentModificationException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ConflictExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ConflictException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ConflictException(body, context);\n  const contents: ConflictException = {\n    name: \"ConflictException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1DetectedLanguageLowConfidenceExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<DetectedLanguageLowConfidenceException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1DetectedLanguageLowConfidenceException(body, context);\n  const contents: DetectedLanguageLowConfidenceException = {\n    name: \"DetectedLanguageLowConfidenceException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InternalServerExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InternalServerException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InternalServerException(body, context);\n  const contents: InternalServerException = {\n    name: \"InternalServerException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidFilterExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidFilterException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidFilterException(body, context);\n  const contents: InvalidFilterException = {\n    name: \"InvalidFilterException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidParameterValueExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidParameterValueException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidParameterValueException(body, context);\n  const contents: InvalidParameterValueException = {\n    name: \"InvalidParameterValueException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1InvalidRequestExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<InvalidRequestException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1InvalidRequestException(body, context);\n  const contents: InvalidRequestException = {\n    name: \"InvalidRequestException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1LimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<LimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1LimitExceededException(body, context);\n  const contents: LimitExceededException = {\n    name: \"LimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ResourceNotFoundExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ResourceNotFoundException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ResourceNotFoundException(body, context);\n  const contents: ResourceNotFoundException = {\n    name: \"ResourceNotFoundException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1ServiceUnavailableExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<ServiceUnavailableException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1ServiceUnavailableException(body, context);\n  const contents: ServiceUnavailableException = {\n    name: \"ServiceUnavailableException\",\n    $fault: \"server\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1TextSizeLimitExceededExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<TextSizeLimitExceededException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1TextSizeLimitExceededException(body, context);\n  const contents: TextSizeLimitExceededException = {\n    name: \"TextSizeLimitExceededException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1TooManyRequestsExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<TooManyRequestsException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1TooManyRequestsException(body, context);\n  const contents: TooManyRequestsException = {\n    name: \"TooManyRequestsException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst deserializeAws_json1_1UnsupportedLanguagePairExceptionResponse = async (\n  parsedOutput: any,\n  context: __SerdeContext\n): Promise<UnsupportedLanguagePairException> => {\n  const body = parsedOutput.body;\n  const deserialized: any = deserializeAws_json1_1UnsupportedLanguagePairException(body, context);\n  const contents: UnsupportedLanguagePairException = {\n    name: \"UnsupportedLanguagePairException\",\n    $fault: \"client\",\n    $metadata: deserializeMetadata(parsedOutput),\n    ...deserialized,\n  };\n  return contents;\n};\n\nconst serializeAws_json1_1CreateParallelDataRequest = (\n  input: CreateParallelDataRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ClientToken: input.ClientToken ?? generateIdempotencyToken(),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EncryptionKey !== undefined &&\n      input.EncryptionKey !== null && {\n        EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context),\n      }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.ParallelDataConfig !== undefined &&\n      input.ParallelDataConfig !== null && {\n        ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1DeleteParallelDataRequest = (\n  input: DeleteParallelDataRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n  };\n};\n\nconst serializeAws_json1_1DeleteTerminologyRequest = (\n  input: DeleteTerminologyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n  };\n};\n\nconst serializeAws_json1_1DescribeTextTranslationJobRequest = (\n  input: DescribeTextTranslationJobRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.JobId !== undefined && input.JobId !== null && { JobId: input.JobId }),\n  };\n};\n\nconst serializeAws_json1_1EncryptionKey = (input: EncryptionKey, context: __SerdeContext): any => {\n  return {\n    ...(input.Id !== undefined && input.Id !== null && { Id: input.Id }),\n    ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n  };\n};\n\nconst serializeAws_json1_1GetParallelDataRequest = (input: GetParallelDataRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n  };\n};\n\nconst serializeAws_json1_1GetTerminologyRequest = (input: GetTerminologyRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.TerminologyDataFormat !== undefined &&\n      input.TerminologyDataFormat !== null && { TerminologyDataFormat: input.TerminologyDataFormat }),\n  };\n};\n\nconst serializeAws_json1_1ImportTerminologyRequest = (\n  input: ImportTerminologyRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.EncryptionKey !== undefined &&\n      input.EncryptionKey !== null && {\n        EncryptionKey: serializeAws_json1_1EncryptionKey(input.EncryptionKey, context),\n      }),\n    ...(input.MergeStrategy !== undefined && input.MergeStrategy !== null && { MergeStrategy: input.MergeStrategy }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.TerminologyData !== undefined &&\n      input.TerminologyData !== null && {\n        TerminologyData: serializeAws_json1_1TerminologyData(input.TerminologyData, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1InputDataConfig = (input: InputDataConfig, context: __SerdeContext): any => {\n  return {\n    ...(input.ContentType !== undefined && input.ContentType !== null && { ContentType: input.ContentType }),\n    ...(input.S3Uri !== undefined && input.S3Uri !== null && { S3Uri: input.S3Uri }),\n  };\n};\n\nconst serializeAws_json1_1ListParallelDataRequest = (input: ListParallelDataRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1ListTerminologiesRequest = (\n  input: ListTerminologiesRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1ListTextTranslationJobsRequest = (\n  input: ListTextTranslationJobsRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.Filter !== undefined &&\n      input.Filter !== null && { Filter: serializeAws_json1_1TextTranslationJobFilter(input.Filter, context) }),\n    ...(input.MaxResults !== undefined && input.MaxResults !== null && { MaxResults: input.MaxResults }),\n    ...(input.NextToken !== undefined && input.NextToken !== null && { NextToken: input.NextToken }),\n  };\n};\n\nconst serializeAws_json1_1OutputDataConfig = (input: OutputDataConfig, context: __SerdeContext): any => {\n  return {\n    ...(input.S3Uri !== undefined && input.S3Uri !== null && { S3Uri: input.S3Uri }),\n  };\n};\n\nconst serializeAws_json1_1ParallelDataConfig = (input: ParallelDataConfig, context: __SerdeContext): any => {\n  return {\n    ...(input.Format !== undefined && input.Format !== null && { Format: input.Format }),\n    ...(input.S3Uri !== undefined && input.S3Uri !== null && { S3Uri: input.S3Uri }),\n  };\n};\n\nconst serializeAws_json1_1ResourceNameList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1StartTextTranslationJobRequest = (\n  input: StartTextTranslationJobRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ClientToken: input.ClientToken ?? generateIdempotencyToken(),\n    ...(input.DataAccessRoleArn !== undefined &&\n      input.DataAccessRoleArn !== null && { DataAccessRoleArn: input.DataAccessRoleArn }),\n    ...(input.InputDataConfig !== undefined &&\n      input.InputDataConfig !== null && {\n        InputDataConfig: serializeAws_json1_1InputDataConfig(input.InputDataConfig, context),\n      }),\n    ...(input.JobName !== undefined && input.JobName !== null && { JobName: input.JobName }),\n    ...(input.OutputDataConfig !== undefined &&\n      input.OutputDataConfig !== null && {\n        OutputDataConfig: serializeAws_json1_1OutputDataConfig(input.OutputDataConfig, context),\n      }),\n    ...(input.ParallelDataNames !== undefined &&\n      input.ParallelDataNames !== null && {\n        ParallelDataNames: serializeAws_json1_1ResourceNameList(input.ParallelDataNames, context),\n      }),\n    ...(input.SourceLanguageCode !== undefined &&\n      input.SourceLanguageCode !== null && { SourceLanguageCode: input.SourceLanguageCode }),\n    ...(input.TargetLanguageCodes !== undefined &&\n      input.TargetLanguageCodes !== null && {\n        TargetLanguageCodes: serializeAws_json1_1TargetLanguageCodeStringList(input.TargetLanguageCodes, context),\n      }),\n    ...(input.TerminologyNames !== undefined &&\n      input.TerminologyNames !== null && {\n        TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context),\n      }),\n  };\n};\n\nconst serializeAws_json1_1StopTextTranslationJobRequest = (\n  input: StopTextTranslationJobRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.JobId !== undefined && input.JobId !== null && { JobId: input.JobId }),\n  };\n};\n\nconst serializeAws_json1_1TargetLanguageCodeStringList = (input: string[], context: __SerdeContext): any => {\n  return input\n    .filter((e: any) => e != null)\n    .map((entry) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst serializeAws_json1_1TerminologyData = (input: TerminologyData, context: __SerdeContext): any => {\n  return {\n    ...(input.File !== undefined && input.File !== null && { File: context.base64Encoder(input.File) }),\n    ...(input.Format !== undefined && input.Format !== null && { Format: input.Format }),\n  };\n};\n\nconst serializeAws_json1_1TextTranslationJobFilter = (\n  input: TextTranslationJobFilter,\n  context: __SerdeContext\n): any => {\n  return {\n    ...(input.JobName !== undefined && input.JobName !== null && { JobName: input.JobName }),\n    ...(input.JobStatus !== undefined && input.JobStatus !== null && { JobStatus: input.JobStatus }),\n    ...(input.SubmittedAfterTime !== undefined &&\n      input.SubmittedAfterTime !== null && {\n        SubmittedAfterTime: Math.round(input.SubmittedAfterTime.getTime() / 1000),\n      }),\n    ...(input.SubmittedBeforeTime !== undefined &&\n      input.SubmittedBeforeTime !== null && {\n        SubmittedBeforeTime: Math.round(input.SubmittedBeforeTime.getTime() / 1000),\n      }),\n  };\n};\n\nconst serializeAws_json1_1TranslateTextRequest = (input: TranslateTextRequest, context: __SerdeContext): any => {\n  return {\n    ...(input.SourceLanguageCode !== undefined &&\n      input.SourceLanguageCode !== null && { SourceLanguageCode: input.SourceLanguageCode }),\n    ...(input.TargetLanguageCode !== undefined &&\n      input.TargetLanguageCode !== null && { TargetLanguageCode: input.TargetLanguageCode }),\n    ...(input.TerminologyNames !== undefined &&\n      input.TerminologyNames !== null && {\n        TerminologyNames: serializeAws_json1_1ResourceNameList(input.TerminologyNames, context),\n      }),\n    ...(input.Text !== undefined && input.Text !== null && { Text: input.Text }),\n  };\n};\n\nconst serializeAws_json1_1UpdateParallelDataRequest = (\n  input: UpdateParallelDataRequest,\n  context: __SerdeContext\n): any => {\n  return {\n    ClientToken: input.ClientToken ?? generateIdempotencyToken(),\n    ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n    ...(input.ParallelDataConfig !== undefined &&\n      input.ParallelDataConfig !== null && {\n        ParallelDataConfig: serializeAws_json1_1ParallelDataConfig(input.ParallelDataConfig, context),\n      }),\n  };\n};\n\nconst deserializeAws_json1_1AppliedTerminology = (output: any, context: __SerdeContext): AppliedTerminology => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Terms:\n      output.Terms !== undefined && output.Terms !== null\n        ? deserializeAws_json1_1TermList(output.Terms, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1AppliedTerminologyList = (output: any, context: __SerdeContext): AppliedTerminology[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1AppliedTerminology(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ConcurrentModificationException = (\n  output: any,\n  context: __SerdeContext\n): ConcurrentModificationException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ConflictException = (output: any, context: __SerdeContext): ConflictException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1CreateParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): CreateParallelDataResponse => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DeleteParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): DeleteParallelDataResponse => {\n  return {\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DescribeTextTranslationJobResponse = (\n  output: any,\n  context: __SerdeContext\n): DescribeTextTranslationJobResponse => {\n  return {\n    TextTranslationJobProperties:\n      output.TextTranslationJobProperties !== undefined && output.TextTranslationJobProperties !== null\n        ? deserializeAws_json1_1TextTranslationJobProperties(output.TextTranslationJobProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1DetectedLanguageLowConfidenceException = (\n  output: any,\n  context: __SerdeContext\n): DetectedLanguageLowConfidenceException => {\n  return {\n    DetectedLanguageCode:\n      output.DetectedLanguageCode !== undefined && output.DetectedLanguageCode !== null\n        ? output.DetectedLanguageCode\n        : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1EncryptionKey = (output: any, context: __SerdeContext): EncryptionKey => {\n  return {\n    Id: output.Id !== undefined && output.Id !== null ? output.Id : undefined,\n    Type: output.Type !== undefined && output.Type !== null ? output.Type : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): GetParallelDataResponse => {\n  return {\n    AuxiliaryDataLocation:\n      output.AuxiliaryDataLocation !== undefined && output.AuxiliaryDataLocation !== null\n        ? deserializeAws_json1_1ParallelDataDataLocation(output.AuxiliaryDataLocation, context)\n        : undefined,\n    DataLocation:\n      output.DataLocation !== undefined && output.DataLocation !== null\n        ? deserializeAws_json1_1ParallelDataDataLocation(output.DataLocation, context)\n        : undefined,\n    LatestUpdateAttemptAuxiliaryDataLocation:\n      output.LatestUpdateAttemptAuxiliaryDataLocation !== undefined &&\n      output.LatestUpdateAttemptAuxiliaryDataLocation !== null\n        ? deserializeAws_json1_1ParallelDataDataLocation(output.LatestUpdateAttemptAuxiliaryDataLocation, context)\n        : undefined,\n    ParallelDataProperties:\n      output.ParallelDataProperties !== undefined && output.ParallelDataProperties !== null\n        ? deserializeAws_json1_1ParallelDataProperties(output.ParallelDataProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1GetTerminologyResponse = (output: any, context: __SerdeContext): GetTerminologyResponse => {\n  return {\n    TerminologyDataLocation:\n      output.TerminologyDataLocation !== undefined && output.TerminologyDataLocation !== null\n        ? deserializeAws_json1_1TerminologyDataLocation(output.TerminologyDataLocation, context)\n        : undefined,\n    TerminologyProperties:\n      output.TerminologyProperties !== undefined && output.TerminologyProperties !== null\n        ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ImportTerminologyResponse = (\n  output: any,\n  context: __SerdeContext\n): ImportTerminologyResponse => {\n  return {\n    TerminologyProperties:\n      output.TerminologyProperties !== undefined && output.TerminologyProperties !== null\n        ? deserializeAws_json1_1TerminologyProperties(output.TerminologyProperties, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InputDataConfig = (output: any, context: __SerdeContext): InputDataConfig => {\n  return {\n    ContentType: output.ContentType !== undefined && output.ContentType !== null ? output.ContentType : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InternalServerException = (\n  output: any,\n  context: __SerdeContext\n): InternalServerException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidFilterException = (output: any, context: __SerdeContext): InvalidFilterException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidParameterValueException = (\n  output: any,\n  context: __SerdeContext\n): InvalidParameterValueException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1InvalidRequestException = (\n  output: any,\n  context: __SerdeContext\n): InvalidRequestException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1JobDetails = (output: any, context: __SerdeContext): JobDetails => {\n  return {\n    DocumentsWithErrorsCount:\n      output.DocumentsWithErrorsCount !== undefined && output.DocumentsWithErrorsCount !== null\n        ? output.DocumentsWithErrorsCount\n        : undefined,\n    InputDocumentsCount:\n      output.InputDocumentsCount !== undefined && output.InputDocumentsCount !== null\n        ? output.InputDocumentsCount\n        : undefined,\n    TranslatedDocumentsCount:\n      output.TranslatedDocumentsCount !== undefined && output.TranslatedDocumentsCount !== null\n        ? output.TranslatedDocumentsCount\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1LanguageCodeStringList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1LimitExceededException = (output: any, context: __SerdeContext): LimitExceededException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): ListParallelDataResponse => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    ParallelDataPropertiesList:\n      output.ParallelDataPropertiesList !== undefined && output.ParallelDataPropertiesList !== null\n        ? deserializeAws_json1_1ParallelDataPropertiesList(output.ParallelDataPropertiesList, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTerminologiesResponse = (\n  output: any,\n  context: __SerdeContext\n): ListTerminologiesResponse => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TerminologyPropertiesList:\n      output.TerminologyPropertiesList !== undefined && output.TerminologyPropertiesList !== null\n        ? deserializeAws_json1_1TerminologyPropertiesList(output.TerminologyPropertiesList, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ListTextTranslationJobsResponse = (\n  output: any,\n  context: __SerdeContext\n): ListTextTranslationJobsResponse => {\n  return {\n    NextToken: output.NextToken !== undefined && output.NextToken !== null ? output.NextToken : undefined,\n    TextTranslationJobPropertiesList:\n      output.TextTranslationJobPropertiesList !== undefined && output.TextTranslationJobPropertiesList !== null\n        ? deserializeAws_json1_1TextTranslationJobPropertiesList(output.TextTranslationJobPropertiesList, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1OutputDataConfig = (output: any, context: __SerdeContext): OutputDataConfig => {\n  return {\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataConfig = (output: any, context: __SerdeContext): ParallelDataConfig => {\n  return {\n    Format: output.Format !== undefined && output.Format !== null ? output.Format : undefined,\n    S3Uri: output.S3Uri !== undefined && output.S3Uri !== null ? output.S3Uri : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataDataLocation = (\n  output: any,\n  context: __SerdeContext\n): ParallelDataDataLocation => {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType:\n      output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataProperties = (output: any, context: __SerdeContext): ParallelDataProperties => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt:\n      output.CreatedAt !== undefined && output.CreatedAt !== null\n        ? new Date(Math.round(output.CreatedAt * 1000))\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey:\n      output.EncryptionKey !== undefined && output.EncryptionKey !== null\n        ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context)\n        : undefined,\n    FailedRecordCount:\n      output.FailedRecordCount !== undefined && output.FailedRecordCount !== null\n        ? output.FailedRecordCount\n        : undefined,\n    ImportedDataSize:\n      output.ImportedDataSize !== undefined && output.ImportedDataSize !== null ? output.ImportedDataSize : undefined,\n    ImportedRecordCount:\n      output.ImportedRecordCount !== undefined && output.ImportedRecordCount !== null\n        ? output.ImportedRecordCount\n        : undefined,\n    LastUpdatedAt:\n      output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null\n        ? new Date(Math.round(output.LastUpdatedAt * 1000))\n        : undefined,\n    LatestUpdateAttemptAt:\n      output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null\n        ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000))\n        : undefined,\n    LatestUpdateAttemptStatus:\n      output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null\n        ? output.LatestUpdateAttemptStatus\n        : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    ParallelDataConfig:\n      output.ParallelDataConfig !== undefined && output.ParallelDataConfig !== null\n        ? deserializeAws_json1_1ParallelDataConfig(output.ParallelDataConfig, context)\n        : undefined,\n    SkippedRecordCount:\n      output.SkippedRecordCount !== undefined && output.SkippedRecordCount !== null\n        ? output.SkippedRecordCount\n        : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n    TargetLanguageCodes:\n      output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null\n        ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ParallelDataPropertiesList = (\n  output: any,\n  context: __SerdeContext\n): ParallelDataProperties[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1ParallelDataProperties(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1ResourceNameList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1ResourceNotFoundException = (\n  output: any,\n  context: __SerdeContext\n): ResourceNotFoundException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1ServiceUnavailableException = (\n  output: any,\n  context: __SerdeContext\n): ServiceUnavailableException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StartTextTranslationJobResponse = (\n  output: any,\n  context: __SerdeContext\n): StartTextTranslationJobResponse => {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1StopTextTranslationJobResponse = (\n  output: any,\n  context: __SerdeContext\n): StopTextTranslationJobResponse => {\n  return {\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TargetLanguageCodeStringList = (output: any, context: __SerdeContext): string[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return entry;\n    });\n};\n\nconst deserializeAws_json1_1Term = (output: any, context: __SerdeContext): Term => {\n  return {\n    SourceText: output.SourceText !== undefined && output.SourceText !== null ? output.SourceText : undefined,\n    TargetText: output.TargetText !== undefined && output.TargetText !== null ? output.TargetText : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TerminologyDataLocation = (\n  output: any,\n  context: __SerdeContext\n): TerminologyDataLocation => {\n  return {\n    Location: output.Location !== undefined && output.Location !== null ? output.Location : undefined,\n    RepositoryType:\n      output.RepositoryType !== undefined && output.RepositoryType !== null ? output.RepositoryType : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TerminologyProperties = (output: any, context: __SerdeContext): TerminologyProperties => {\n  return {\n    Arn: output.Arn !== undefined && output.Arn !== null ? output.Arn : undefined,\n    CreatedAt:\n      output.CreatedAt !== undefined && output.CreatedAt !== null\n        ? new Date(Math.round(output.CreatedAt * 1000))\n        : undefined,\n    Description: output.Description !== undefined && output.Description !== null ? output.Description : undefined,\n    EncryptionKey:\n      output.EncryptionKey !== undefined && output.EncryptionKey !== null\n        ? deserializeAws_json1_1EncryptionKey(output.EncryptionKey, context)\n        : undefined,\n    LastUpdatedAt:\n      output.LastUpdatedAt !== undefined && output.LastUpdatedAt !== null\n        ? new Date(Math.round(output.LastUpdatedAt * 1000))\n        : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    SizeBytes: output.SizeBytes !== undefined && output.SizeBytes !== null ? output.SizeBytes : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    TargetLanguageCodes:\n      output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null\n        ? deserializeAws_json1_1LanguageCodeStringList(output.TargetLanguageCodes, context)\n        : undefined,\n    TermCount: output.TermCount !== undefined && output.TermCount !== null ? output.TermCount : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TerminologyPropertiesList = (\n  output: any,\n  context: __SerdeContext\n): TerminologyProperties[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1TerminologyProperties(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1TermList = (output: any, context: __SerdeContext): Term[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1Term(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1TextSizeLimitExceededException = (\n  output: any,\n  context: __SerdeContext\n): TextSizeLimitExceededException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TextTranslationJobProperties = (\n  output: any,\n  context: __SerdeContext\n): TextTranslationJobProperties => {\n  return {\n    DataAccessRoleArn:\n      output.DataAccessRoleArn !== undefined && output.DataAccessRoleArn !== null\n        ? output.DataAccessRoleArn\n        : undefined,\n    EndTime:\n      output.EndTime !== undefined && output.EndTime !== null ? new Date(Math.round(output.EndTime * 1000)) : undefined,\n    InputDataConfig:\n      output.InputDataConfig !== undefined && output.InputDataConfig !== null\n        ? deserializeAws_json1_1InputDataConfig(output.InputDataConfig, context)\n        : undefined,\n    JobDetails:\n      output.JobDetails !== undefined && output.JobDetails !== null\n        ? deserializeAws_json1_1JobDetails(output.JobDetails, context)\n        : undefined,\n    JobId: output.JobId !== undefined && output.JobId !== null ? output.JobId : undefined,\n    JobName: output.JobName !== undefined && output.JobName !== null ? output.JobName : undefined,\n    JobStatus: output.JobStatus !== undefined && output.JobStatus !== null ? output.JobStatus : undefined,\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    OutputDataConfig:\n      output.OutputDataConfig !== undefined && output.OutputDataConfig !== null\n        ? deserializeAws_json1_1OutputDataConfig(output.OutputDataConfig, context)\n        : undefined,\n    ParallelDataNames:\n      output.ParallelDataNames !== undefined && output.ParallelDataNames !== null\n        ? deserializeAws_json1_1ResourceNameList(output.ParallelDataNames, context)\n        : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    SubmittedTime:\n      output.SubmittedTime !== undefined && output.SubmittedTime !== null\n        ? new Date(Math.round(output.SubmittedTime * 1000))\n        : undefined,\n    TargetLanguageCodes:\n      output.TargetLanguageCodes !== undefined && output.TargetLanguageCodes !== null\n        ? deserializeAws_json1_1TargetLanguageCodeStringList(output.TargetLanguageCodes, context)\n        : undefined,\n    TerminologyNames:\n      output.TerminologyNames !== undefined && output.TerminologyNames !== null\n        ? deserializeAws_json1_1ResourceNameList(output.TerminologyNames, context)\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TextTranslationJobPropertiesList = (\n  output: any,\n  context: __SerdeContext\n): TextTranslationJobProperties[] => {\n  return (output || [])\n    .filter((e: any) => e != null)\n    .map((entry: any) => {\n      if (entry === null) {\n        return null as any;\n      }\n      return deserializeAws_json1_1TextTranslationJobProperties(entry, context);\n    });\n};\n\nconst deserializeAws_json1_1TooManyRequestsException = (\n  output: any,\n  context: __SerdeContext\n): TooManyRequestsException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1TranslateTextResponse = (output: any, context: __SerdeContext): TranslateTextResponse => {\n  return {\n    AppliedTerminologies:\n      output.AppliedTerminologies !== undefined && output.AppliedTerminologies !== null\n        ? deserializeAws_json1_1AppliedTerminologyList(output.AppliedTerminologies, context)\n        : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    TargetLanguageCode:\n      output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null\n        ? output.TargetLanguageCode\n        : undefined,\n    TranslatedText:\n      output.TranslatedText !== undefined && output.TranslatedText !== null ? output.TranslatedText : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UnsupportedLanguagePairException = (\n  output: any,\n  context: __SerdeContext\n): UnsupportedLanguagePairException => {\n  return {\n    Message: output.Message !== undefined && output.Message !== null ? output.Message : undefined,\n    SourceLanguageCode:\n      output.SourceLanguageCode !== undefined && output.SourceLanguageCode !== null\n        ? output.SourceLanguageCode\n        : undefined,\n    TargetLanguageCode:\n      output.TargetLanguageCode !== undefined && output.TargetLanguageCode !== null\n        ? output.TargetLanguageCode\n        : undefined,\n  } as any;\n};\n\nconst deserializeAws_json1_1UpdateParallelDataResponse = (\n  output: any,\n  context: __SerdeContext\n): UpdateParallelDataResponse => {\n  return {\n    LatestUpdateAttemptAt:\n      output.LatestUpdateAttemptAt !== undefined && output.LatestUpdateAttemptAt !== null\n        ? new Date(Math.round(output.LatestUpdateAttemptAt * 1000))\n        : undefined,\n    LatestUpdateAttemptStatus:\n      output.LatestUpdateAttemptStatus !== undefined && output.LatestUpdateAttemptStatus !== null\n        ? output.LatestUpdateAttemptStatus\n        : undefined,\n    Name: output.Name !== undefined && output.Name !== null ? output.Name : undefined,\n    Status: output.Status !== undefined && output.Status !== null ? output.Status : undefined,\n  } as any;\n};\n\nconst deserializeMetadata = (output: __HttpResponse): __ResponseMetadata => ({\n  httpStatusCode: output.statusCode,\n  requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"],\n  extendedRequestId: output.headers[\"x-amz-id-2\"],\n  cfId: output.headers[\"x-amz-cf-id\"],\n});\n\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody: any = new Uint8Array(), context: __SerdeContext): Promise<Uint8Array> => {\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody: any, context: __SerdeContext): Promise<string> =>\n  collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\n\nconst buildHttpRpcRequest = async (\n  context: __SerdeContext,\n  headers: __HeaderBag,\n  path: string,\n  resolvedHostname: string | undefined,\n  body: any\n): Promise<__HttpRequest> => {\n  const { hostname, protocol = \"https\", port } = await context.endpoint();\n  const contents: any = {\n    protocol,\n    hostname,\n    port,\n    method: \"POST\",\n    path,\n    headers,\n  };\n  if (resolvedHostname !== undefined) {\n    contents.hostname = resolvedHostname;\n  }\n  if (body !== undefined) {\n    contents.body = body;\n  }\n  return new __HttpRequest(contents);\n};\n\nconst parseBody = (streamBody: any, context: __SerdeContext): any =>\n  collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n    return {};\n  });\n\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output: __HttpResponse, data: any): string => {\n  const findKey = (object: any, key: string) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n\n  const sanitizeErrorCode = (rawValue: string): string => {\n    let cleanValue = rawValue;\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n    return cleanValue;\n  };\n\n  const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};\n"]},"metadata":{},"sourceType":"module"}